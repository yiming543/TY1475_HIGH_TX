

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Sep 12 08:45:41 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1936 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0095                     	;# 
    93     0096                     	;# 
    94     0097                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     0110                     	;# 
   107     0111                     	;# 
   108     0112                     	;# 
   109     0113                     	;# 
   110     0114                     	;# 
   111     0115                     	;# 
   112     0116                     	;# 
   113     0117                     	;# 
   114     0118                     	;# 
   115     0119                     	;# 
   116     011A                     	;# 
   117     011B                     	;# 
   118     011D                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0191                     	;# 
   122     0191                     	;# 
   123     0192                     	;# 
   124     0193                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0199                     	;# 
   131     019A                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019D                     	;# 
   139     019E                     	;# 
   140     019F                     	;# 
   141     020D                     	;# 
   142     0210                     	;# 
   143     0211                     	;# 
   144     0212                     	;# 
   145     0213                     	;# 
   146     0214                     	;# 
   147     0215                     	;# 
   148     0215                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0291                     	;# 
   152     0291                     	;# 
   153     0292                     	;# 
   154     0293                     	;# 
   155     0294                     	;# 
   156     0295                     	;# 
   157     0295                     	;# 
   158     0296                     	;# 
   159     0298                     	;# 
   160     0298                     	;# 
   161     0299                     	;# 
   162     029A                     	;# 
   163     029B                     	;# 
   164     029C                     	;# 
   165     029C                     	;# 
   166     029D                     	;# 
   167     029E                     	;# 
   168     029F                     	;# 
   169     0311                     	;# 
   170     0311                     	;# 
   171     0312                     	;# 
   172     0313                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0315                     	;# 
   176     0316                     	;# 
   177     0318                     	;# 
   178     0318                     	;# 
   179     0319                     	;# 
   180     031A                     	;# 
   181     031C                     	;# 
   182     031C                     	;# 
   183     031D                     	;# 
   184     031E                     	;# 
   185     0394                     	;# 
   186     0395                     	;# 
   187     0396                     	;# 
   188     0415                     	;# 
   189     0416                     	;# 
   190     0417                     	;# 
   191     041C                     	;# 
   192     041D                     	;# 
   193     041E                     	;# 
   194     0791                     	;# 
   195     0792                     	;# 
   196     0793                     	;# 
   197     0794                     	;# 
   198     0795                     	;# 
   199     0798                     	;# 
   200     0799                     	;# 
   201     07A0                     	;# 
   202     07A1                     	;# 
   203     07A3                     	;# 
   204     07A4                     	;# 
   205     07A6                     	;# 
   206     07A7                     	;# 
   207     07A9                     	;# 
   208     07AA                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     010E                     	;# 
   271     0110                     	;# 
   272     0111                     	;# 
   273     0112                     	;# 
   274     0113                     	;# 
   275     0114                     	;# 
   276     0115                     	;# 
   277     0116                     	;# 
   278     0117                     	;# 
   279     0118                     	;# 
   280     0119                     	;# 
   281     011A                     	;# 
   282     011B                     	;# 
   283     011D                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020D                     	;# 
   307     0210                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0216                     	;# 
   315     0217                     	;# 
   316     0291                     	;# 
   317     0291                     	;# 
   318     0292                     	;# 
   319     0293                     	;# 
   320     0294                     	;# 
   321     0295                     	;# 
   322     0295                     	;# 
   323     0296                     	;# 
   324     0298                     	;# 
   325     0298                     	;# 
   326     0299                     	;# 
   327     029A                     	;# 
   328     029B                     	;# 
   329     029C                     	;# 
   330     029C                     	;# 
   331     029D                     	;# 
   332     029E                     	;# 
   333     029F                     	;# 
   334     0311                     	;# 
   335     0311                     	;# 
   336     0312                     	;# 
   337     0313                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0315                     	;# 
   341     0316                     	;# 
   342     0318                     	;# 
   343     0318                     	;# 
   344     0319                     	;# 
   345     031A                     	;# 
   346     031C                     	;# 
   347     031C                     	;# 
   348     031D                     	;# 
   349     031E                     	;# 
   350     0394                     	;# 
   351     0395                     	;# 
   352     0396                     	;# 
   353     0415                     	;# 
   354     0416                     	;# 
   355     0417                     	;# 
   356     041C                     	;# 
   357     041D                     	;# 
   358     041E                     	;# 
   359     0791                     	;# 
   360     0792                     	;# 
   361     0793                     	;# 
   362     0794                     	;# 
   363     0795                     	;# 
   364     0798                     	;# 
   365     0799                     	;# 
   366     07A0                     	;# 
   367     07A1                     	;# 
   368     07A3                     	;# 
   369     07A4                     	;# 
   370     07A6                     	;# 
   371     07A7                     	;# 
   372     07A9                     	;# 
   373     07AA                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     0607                     __pidataBANK0:
   388                           
   389                           ;initializer for _data48
   390     0607  3402               	retlw	2
   391     0608  3400               	retlw	0
   392     0609  3400               	retlw	0
   393     060A  34B4               	retlw	180
   394                           
   395                           	psect	idataBANK1
   396     065D                     __pidataBANK1:
   397                           
   398                           ;initializer for _CS
   399     065D  344C               	retlw	76
   400     065E  349F               	retlw	159
   401     065F  34ED               	retlw	237
   402     0660  343E               	retlw	62
   403     0661  349A               	retlw	154
   404     0662  3400               	retlw	0
   405     0663  3400               	retlw	0
   406     0664  3400               	retlw	0
   407     0665  3427               	retlw	39
   408     0666  3400               	retlw	0
   409     0667  3400               	retlw	0
   410     0668  3400               	retlw	0
   411     0669  3473               	retlw	115
   412     066A  34A0               	retlw	160
   413     066B  34D2               	retlw	210
   414     066C  3401               	retlw	1
   415     066D  348E               	retlw	142
   416     066E  345D               	retlw	93
   417     066F  342F               	retlw	47
   418     0670  34FC               	retlw	252
   419     0671  3467               	retlw	103
   420     0672  3400               	retlw	0
   421     0673  3400               	retlw	0
   422     0674  3400               	retlw	0
   423     0675  34DA               	retlw	218
   424     0676  3400               	retlw	0
   425     0677  3400               	retlw	0
   426     0678  3400               	retlw	0
   427     0679  34B1               	retlw	177
   428     067A  3462               	retlw	98
   429     067B  3410               	retlw	16
   430     067C  34C3               	retlw	195
   431     067D  342D               	retlw	45
   432     067E  34FE               	retlw	254
   433     067F  348C               	retlw	140
   434     0680  345F               	retlw	95
   435     0681  342C               	retlw	44
   436     0682  3400               	retlw	0
   437     0683  3400               	retlw	0
   438     0684  3400               	retlw	0
   439     0685  3438               	retlw	56
   440     0686  34EB               	retlw	235
   441     0687  3499               	retlw	153
   442     0688  344A               	retlw	74
   443     0689  3412               	retlw	18
   444     068A  34C1               	retlw	193
   445     068B  34B3               	retlw	179
   446     068C  3460               	retlw	96
   447     068D  34EF               	retlw	239
   448     068E  343C               	retlw	60
   449     068F  344E               	retlw	78
   450     0690  349D               	retlw	157
   451     0691  34D1               	retlw	209
   452     0692  3400               	retlw	0
   453     0693  3400               	retlw	0
   454     0694  3400               	retlw	0
   455     0695  346C               	retlw	108
   456     0696  3400               	retlw	0
   457     0697  3400               	retlw	0
   458     0698  3400               	retlw	0
   459     0699  34D0               	retlw	208
   460     069A  3403               	retlw	3
   461     069B  3471               	retlw	113
   462     069C  34A2               	retlw	162
   463     000E                     _PORTCbits	set	14
   464     000D                     _PORTBbits	set	13
   465     000C                     _PORTAbits	set	12
   466     001B                     _PR2	set	27
   467     0010                     _PORTE	set	16
   468     000E                     _PORTC	set	14
   469     000D                     _PORTB	set	13
   470     000C                     _PORTA	set	12
   471     00E0                     _T2CKPS0	set	224
   472     00E1                     _T2CKPS1	set	225
   473     00E2                     _TMR2ON	set	226
   474     0089                     _TMR2IF	set	137
   475     0090                     _TRISE	set	144
   476     008E                     _TRISC	set	142
   477     008D                     _TRISB	set	141
   478     008C                     _TRISA	set	140
   479     0098                     _OSCTUNE	set	152
   480     0099                     _OSCCON	set	153
   481     0110                     _LATE	set	272
   482     010E                     _LATC	set	270
   483     010C                     _LATA	set	268
   484     010D                     _LATB	set	269
   485     08EE                     _CCP3SEL	set	2286
   486     018D                     _ANSELB	set	397
   487     018C                     _ANSELA	set	396
   488     0313                     _CCP3CON	set	787
   489     0311                     _CCPR3L	set	785
   490                           
   491                           	psect	cinit
   492     07DD                     start_initialization:	
   493                           ; #config settings
   494                           
   495     07DD                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK0
   498     07DD  3007               	movlw	low __pidataBANK0
   499     07DE  0084               	movwf	4
   500     07DF  3086               	movlw	(high __pidataBANK0)| (0+128)
   501     07E0  0085               	movwf	5
   502     07E1  303A               	movlw	low __pdataBANK0
   503     07E2  0086               	movwf	6
   504     07E3  3000               	movlw	high __pdataBANK0
   505     07E4  0087               	movwf	7
   506     07E5  3004               	movlw	4
   507     07E6  3186  2611  3187   	fcall	init_ram
   508                           
   509                           ; Initialize objects allocated to BANK1
   510     07E9  305D               	movlw	low __pidataBANK1
   511     07EA  0084               	movwf	4
   512     07EB  3086               	movlw	(high __pidataBANK1)| (0+128)
   513     07EC  0085               	movwf	5
   514     07ED  30A0               	movlw	low __pdataBANK1
   515     07EE  0086               	movwf	6
   516     07EF  3000               	movlw	high __pdataBANK1
   517     07F0  0087               	movwf	7
   518     07F1  3040               	movlw	64
   519     07F2  3186  2611  3187   	fcall	init_ram
   520                           
   521                           ; Clear objects allocated to BANK0
   522     07F5  3020               	movlw	low __pbssBANK0
   523     07F6  0084               	movwf	4
   524     07F7  3000               	movlw	high __pbssBANK0
   525     07F8  0085               	movwf	5
   526     07F9  301A               	movlw	26
   527     07FA  3186  260B  3187   	fcall	clear_ram0
   528     07FD                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531     07FD                     __end_of__initialization:
   532     07FD  0020               	movlb	0
   533     07FE  3186  2E9D         	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK0
   536     0020                     __pbssBANK0:
   537     0020                     _tx_Data:
   538     0020                     	ds	11
   539     002B                     PWM@F2776:
   540     002B                     	ds	8
   541     0033                     _b:
   542     0033                     	ds	1
   543     0034                     _a:
   544     0034                     	ds	1
   545     0035                     _flamp_left:
   546     0035                     	ds	1
   547     0036                     _fException:
   548     0036                     	ds	1
   549     0037                     _csFlag:
   550     0037                     	ds	1
   551     0038                     _D3:
   552     0038                     	ds	1
   553     0039                     _D2:
   554     0039                     	ds	1
   555                           
   556                           	psect	dataBANK0
   557     003A                     __pdataBANK0:
   558     003A                     _data48:
   559     003A                     	ds	4
   560                           
   561                           	psect	dataBANK1
   562     00A0                     __pdataBANK1:
   563     00A0                     _CS:
   564     00A0                     	ds	64
   565                           
   566                           	psect	inittext
   567     0611                     init_ram:
   568     0611  00FE               	movwf	btemp
   569     0612                     initloop:
   570     0612  0012               	moviw fsr0++
   571     0613  001E               	movwi fsr1++
   572     0614  0BFE               	decfsz	btemp,f
   573     0615  2E12               	goto	initloop
   574     0616  3400               	retlw	0
   575                           
   576                           	psect	clrtext
   577     060B                     clear_ram0:	
   578                           ;	Called with FSR0 containing the base address, and
   579                           ;	WREG with the size to clear
   580                           
   581     060B  0064               	clrwdt	;clear the watchdog before getting into this loop
   582     060C                     clrloop0:
   583     060C  0180               	clrf	0	;clear RAM location pointed to by FSR
   584     060D  3101               	addfsr 0,1
   585     060E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   586     060F  2E0C               	goto	clrloop0	;have we reached the end yet?
   587     0610  3400               	retlw	0	;all done for this memory range, return
   588                           
   589                           	psect	cstackCOMMON
   590     0070                     __pcstackCOMMON:
   591     0070                     ?_wait_for_pwm_cycle_complete:
   592     0070                     ??_wait_for_pwm_cycle_complete:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_PWM:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_PWM:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Hardware_Init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_Hardware_Init:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Check_Input:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ??_Check_Input:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     PWM@Dbit:
   620                           
   621                           ; 8 bytes @ 0x1
   622     0071                     	ds	8
   623     0079                     PWM@i_199:
   624                           
   625                           ; 1 bytes @ 0x9
   626     0079                     	ds	1
   627     007A                     PWM@i:
   628                           
   629                           ; 1 bytes @ 0xA
   630     007A                     	ds	1
   631     007B                     PWM@num:
   632                           
   633                           ; 1 bytes @ 0xB
   634     007B                     	ds	1
   635     007C                     ??_main:
   636                           
   637                           ; 1 bytes @ 0xC
   638     007C                     	ds	1
   639     007D                     main@i:
   640                           
   641                           ; 1 bytes @ 0xD
   642     007D                     	ds	1
   643                           
   644                           	psect	maintext
   645     069D                     __pmaintext:	
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 545 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  i               1   13[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  2  125[None  ] int 
   658 ;; Registers used:
   659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : B1F/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   665 ;;      Params:         0       0       0       0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0       0       0       0
   667 ;;      Temps:          1       0       0       0       0       0       0       0
   668 ;;      Totals:         2       0       0       0       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels required when called: 2
   671 ;; This function calls:
   672 ;;		_Check_Input
   673 ;;		_Hardware_Init
   674 ;;		_PWM
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     069D                     _main:	
   681                           ;psect for function _main
   682                           
   683     069D                     l1068:	
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;main.c: 546:   Hardware_Init();
   689     069D  3186  261E  3186   	fcall	_Hardware_Init
   690     06A0                     l1070:
   691                           
   692                           ;main.c: 547:   if (PORTCbits.RC3 == 0)
   693     06A0  0020               	movlb	0	; select bank0
   694     06A1  198E               	btfsc	14,3	;volatile
   695     06A2  2EA4               	goto	u441
   696     06A3  2EA5               	goto	u440
   697     06A4                     u441:
   698     06A4  2EA7               	goto	l1074
   699     06A5                     u440:
   700     06A5                     l1072:
   701                           
   702                           ;main.c: 548:     flamp_left = 1;
   703     06A5  01B5               	clrf	_flamp_left
   704     06A6  0AB5               	incf	_flamp_left,f
   705     06A7                     l1074:
   706                           
   707                           ;main.c: 551:     Check_Input();
   708     06A7  3186  26EC  3186   	fcall	_Check_Input
   709     06AA                     l1076:
   710                           
   711                           ;main.c: 554:     tx_Data[0] = 0xC8;
   712     06AA  30C8               	movlw	200
   713     06AB  0020               	movlb	0	; select bank0
   714     06AC  00A0               	movwf	_tx_Data
   715     06AD                     l1078:
   716                           
   717                           ;main.c: 555:     tx_Data[1] = 0x8B;
   718     06AD  308B               	movlw	139
   719     06AE  00A1               	movwf	_tx_Data+1
   720     06AF                     l1080:
   721                           
   722                           ;main.c: 556:     tx_Data[2] = 0x00;
   723     06AF  01A2               	clrf	_tx_Data+2
   724     06B0                     l1082:
   725                           
   726                           ;main.c: 558:     tx_Data[3] = 0x00;
   727     06B0  01A3               	clrf	_tx_Data+3
   728     06B1                     l1084:
   729                           
   730                           ;main.c: 560:     tx_Data[4] = 0x00;
   731     06B1  01A4               	clrf	_tx_Data+4
   732     06B2                     l1086:
   733                           
   734                           ;main.c: 561:     tx_Data[5] = 0x00;
   735     06B2  01A5               	clrf	_tx_Data+5
   736     06B3                     l1088:
   737                           
   738                           ;main.c: 562:     tx_Data[6] = 0x00;
   739     06B3  01A6               	clrf	_tx_Data+6
   740     06B4                     l1090:
   741                           
   742                           ;main.c: 563:     tx_Data[7] = 0x00;
   743     06B4  01A7               	clrf	_tx_Data+7
   744     06B5                     l1092:
   745                           
   746                           ;main.c: 564:     tx_Data[8] = 0x00;
   747     06B5  01A8               	clrf	_tx_Data+8
   748     06B6                     l1094:
   749                           
   750                           ;main.c: 565:     tx_Data[9] = 0x00;
   751     06B6  01A9               	clrf	_tx_Data+9
   752     06B7                     l1096:
   753                           
   754                           ;main.c: 566:     tx_Data[10] = 0x04C;
   755     06B7  304C               	movlw	76
   756     06B8  00AA               	movwf	_tx_Data+10
   757     06B9                     l1098:
   758                           
   759                           ;main.c: 568:     tx_Data[2] = D2.Byte;
   760     06B9  0839               	movf	_D2,w
   761     06BA  00A2               	movwf	_tx_Data+2
   762     06BB                     l1100:
   763                           
   764                           ;main.c: 569:     tx_Data[3] = D3.Byte;
   765     06BB  0838               	movf	_D3,w
   766     06BC  00A3               	movwf	_tx_Data+3
   767     06BD                     l1102:
   768                           
   769                           ;main.c: 571:     if (fException == 1) {
   770     06BD  0336               	decf	_fException,w
   771     06BE  1D03               	btfss	3,2
   772     06BF  2EC1               	goto	u451
   773     06C0  2EC2               	goto	u450
   774     06C1                     u451:
   775     06C1  2EC6               	goto	l1108
   776     06C2                     u450:
   777     06C2                     l1104:
   778                           
   779                           ;main.c: 572:       fException = 0;
   780     06C2  01B6               	clrf	_fException
   781     06C3                     l1106:
   782                           
   783                           ;main.c: 573:       tx_Data[10] = 0xD5;
   784     06C3  30D5               	movlw	213
   785     06C4  00AA               	movwf	_tx_Data+10
   786                           
   787                           ;main.c: 574:     } else {
   788     06C5  2ECC               	goto	l1110
   789     06C6                     l1108:
   790                           
   791                           ;main.c: 575:       tx_Data[10] = CS[csFlag.Byte];
   792     06C6  0837               	movf	_csFlag,w
   793     06C7  3EA0               	addlw	(low (_CS| 0))& (0+255)
   794     06C8  0086               	movwf	6
   795     06C9  0187               	clrf	7
   796     06CA  0801               	movf	1,w
   797     06CB  00AA               	movwf	_tx_Data+10
   798     06CC                     l1110:
   799                           
   800                           ;main.c: 578:     for (uint8_t i = 0; i < 11; i++) {
   801     06CC  01FD               	clrf	main@i
   802     06CD                     l1116:
   803                           
   804                           ;main.c: 579:       PWM(tx_Data[i]);
   805     06CD  087D               	movf	main@i,w
   806     06CE  3E20               	addlw	(low (_tx_Data| 0))& (0+255)
   807     06CF  0086               	movwf	6
   808     06D0  0187               	clrf	7
   809     06D1  0801               	movf	1,w
   810     06D2  3187  2753  3186   	fcall	_PWM
   811     06D5                     l1118:
   812                           
   813                           ;main.c: 580:     }
   814     06D5  3001               	movlw	1
   815     06D6  00FC               	movwf	??_main
   816     06D7  087C               	movf	??_main,w
   817     06D8  07FD               	addwf	main@i,f
   818     06D9                     l1120:
   819     06D9  300B               	movlw	11
   820     06DA  027D               	subwf	main@i,w
   821     06DB  1C03               	skipc
   822     06DC  2EDE               	goto	u461
   823     06DD  2EDF               	goto	u460
   824     06DE                     u461:
   825     06DE  2ECD               	goto	l1116
   826     06DF                     u460:
   827     06DF                     l1122:
   828                           
   829                           ;main.c: 582:     CCPR3L = 30;
   830     06DF  301E               	movlw	30
   831     06E0  0026               	movlb	6	; select bank6
   832     06E1  0091               	movwf	17	;volatile
   833                           
   834                           ;main.c: 583:     _delay((unsigned long)((20)*(32000000/4000.0)));
   835     06E2  30D0               	movlw	208
   836     06E3  00FC               	movwf	??_main
   837     06E4  30CA               	movlw	202
   838     06E5                     u477:
   839     06E5  0B89               	decfsz	9,f
   840     06E6  2EE5               	goto	u477
   841     06E7  0BFC               	decfsz	??_main,f
   842     06E8  2EE5               	goto	u477
   843     06E9  2EA7               	goto	l1074
   844     06EA  3180  2802         	ljmp	start
   845     06EC                     __end_of_main:
   846                           
   847                           	psect	text1
   848     0753                     __ptext1:	
   849 ;; *************** function _PWM *****************
   850 ;; Defined at:
   851 ;;		line 368 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  num             1    wreg     unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  num             1   11[COMMON] unsigned char 
   856 ;;  i               1    9[COMMON] unsigned char 
   857 ;;  i               1   10[COMMON] unsigned char 
   858 ;;  Dbit            8    1[COMMON] unsigned char [8]
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   868 ;;      Params:         0       0       0       0       0       0       0       0
   869 ;;      Locals:        11       0       0       0       0       0       0       0
   870 ;;      Temps:          1       0       0       0       0       0       0       0
   871 ;;      Totals:        12       0       0       0       0       0       0       0
   872 ;;Total ram usage:       12 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 1
   875 ;; This function calls:
   876 ;;		_wait_for_pwm_cycle_complete
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882     0753                     _PWM:	
   883                           ;psect for function _PWM
   884                           
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in _PWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   888                           ;PWM@num stored from wreg
   889     0753  00FB               	movwf	PWM@num
   890     0754                     l936:
   891                           
   892                           ;main.c: 369:   unsigned char Dbit[8] = {0};
   893     0754  3071               	movlw	low PWM@Dbit
   894     0755  0086               	movwf	6
   895     0756  3000               	movlw	high PWM@Dbit
   896     0757  0087               	movwf	7
   897     0758  3008               	movlw	8
   898     0759  00F0               	movwf	??_PWM
   899     075A  3000               	movlw	0
   900     075B                     u250:
   901     075B  001E               	movwi fsr1++
   902     075C  0BF0               	decfsz	??_PWM,f
   903     075D  2F5B               	goto	u250
   904     075E                     l938:
   905                           
   906                           ;main.c: 370:   Dbit[0] = (num >> 0) & 0x01;
   907     075E  087B               	movf	PWM@num,w
   908     075F  3901               	andlw	1
   909     0760  00F1               	movwf	PWM@Dbit
   910     0761                     l940:
   911                           
   912                           ;main.c: 371:   Dbit[1] = (num >> 1) & 0x01;
   913     0761  367B               	lsrf	PWM@num,w
   914     0762  3901               	andlw	1
   915     0763  00F2               	movwf	PWM@Dbit+1
   916     0764                     l942:
   917                           
   918                           ;main.c: 372:   Dbit[2] = (num >> 2) & 0x01;
   919     0764  087B               	movf	PWM@num,w
   920     0765  00F0               	movwf	??_PWM
   921     0766  3002               	movlw	2
   922     0767                     u265:
   923     0767  36F0               	lsrf	??_PWM,f
   924     0768  0B89               	decfsz	9,f
   925     0769  2F67               	goto	u265
   926     076A  0870               	movf	??_PWM,w
   927     076B  3901               	andlw	1
   928     076C  00F3               	movwf	PWM@Dbit+2
   929     076D                     l944:
   930                           
   931                           ;main.c: 373:   Dbit[3] = (num >> 3) & 0x01;
   932     076D  087B               	movf	PWM@num,w
   933     076E  00F0               	movwf	??_PWM
   934     076F  3003               	movlw	3
   935     0770                     u275:
   936     0770  36F0               	lsrf	??_PWM,f
   937     0771  0B89               	decfsz	9,f
   938     0772  2F70               	goto	u275
   939     0773  0870               	movf	??_PWM,w
   940     0774  3901               	andlw	1
   941     0775  00F4               	movwf	PWM@Dbit+3
   942     0776                     l946:
   943                           
   944                           ;main.c: 374:   Dbit[4] = (num >> 4) & 0x01;
   945     0776  087B               	movf	PWM@num,w
   946     0777  00F0               	movwf	??_PWM
   947     0778  3004               	movlw	4
   948     0779                     u285:
   949     0779  36F0               	lsrf	??_PWM,f
   950     077A  0B89               	decfsz	9,f
   951     077B  2F79               	goto	u285
   952     077C  0870               	movf	??_PWM,w
   953     077D  3901               	andlw	1
   954     077E  00F5               	movwf	PWM@Dbit+4
   955     077F                     l948:
   956                           
   957                           ;main.c: 375:   Dbit[5] = (num >> 5) & 0x01;
   958     077F  087B               	movf	PWM@num,w
   959     0780  00F0               	movwf	??_PWM
   960     0781  3005               	movlw	5
   961     0782                     u295:
   962     0782  36F0               	lsrf	??_PWM,f
   963     0783  0B89               	decfsz	9,f
   964     0784  2F82               	goto	u295
   965     0785  0870               	movf	??_PWM,w
   966     0786  3901               	andlw	1
   967     0787  00F6               	movwf	PWM@Dbit+5
   968     0788                     l950:
   969                           
   970                           ;main.c: 376:   Dbit[6] = (num >> 6) & 0x01;
   971     0788  087B               	movf	PWM@num,w
   972     0789  00F0               	movwf	??_PWM
   973     078A  3006               	movlw	6
   974     078B                     u305:
   975     078B  36F0               	lsrf	??_PWM,f
   976     078C  0B89               	decfsz	9,f
   977     078D  2F8B               	goto	u305
   978     078E  0870               	movf	??_PWM,w
   979     078F  3901               	andlw	1
   980     0790  00F7               	movwf	PWM@Dbit+6
   981     0791                     l952:
   982                           
   983                           ;main.c: 377:   Dbit[7] = (num >> 7) & 0x01;
   984     0791  087B               	movf	PWM@num,w
   985     0792  00F0               	movwf	??_PWM
   986     0793  3007               	movlw	7
   987     0794                     u315:
   988     0794  36F0               	lsrf	??_PWM,f
   989     0795  0B89               	decfsz	9,f
   990     0796  2F94               	goto	u315
   991     0797  0870               	movf	??_PWM,w
   992     0798  3901               	andlw	1
   993     0799  00F8               	movwf	PWM@Dbit+7
   994     079A                     l954:
   995                           
   996                           ;main.c: 378:   wait_for_pwm_cycle_complete();
   997     079A  3186  2617  3187   	fcall	_wait_for_pwm_cycle_complete
   998     079D                     l956:
   999                           
  1000                           ;main.c: 379:   CCPR3L = 55;
  1001     079D  3037               	movlw	55
  1002     079E  0026               	movlb	6	; select bank6
  1003     079F  0091               	movwf	17	;volatile
  1004     07A0                     l958:
  1005                           
  1006                           ;main.c: 381:   for (uint8_t i = 0; i < 8; i++) {
  1007     07A0  01FA               	clrf	PWM@i
  1008     07A1                     l964:
  1009                           
  1010                           ;main.c: 382:     if (Dbit[i] == 1) {
  1011     07A1  087A               	movf	PWM@i,w
  1012     07A2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1013     07A3  0086               	movwf	6
  1014     07A4  0187               	clrf	7
  1015     07A5  0301               	decf	1,w
  1016     07A6  1D03               	btfss	3,2
  1017     07A7  2FA9               	goto	u321
  1018     07A8  2FAA               	goto	u320
  1019     07A9                     u321:
  1020     07A9  2FB1               	goto	l968
  1021     07AA                     u320:
  1022     07AA                     l966:
  1023                           
  1024                           ;main.c: 383:       Dbit[i] = 30;
  1025     07AA  087A               	movf	PWM@i,w
  1026     07AB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1027     07AC  0086               	movwf	6
  1028     07AD  0187               	clrf	7
  1029     07AE  301E               	movlw	30
  1030     07AF  0081               	movwf	1
  1031                           
  1032                           ;main.c: 384:     } else {
  1033     07B0  2FB7               	goto	l970
  1034     07B1                     l968:
  1035                           
  1036                           ;main.c: 385:       Dbit[i] = 55;
  1037     07B1  087A               	movf	PWM@i,w
  1038     07B2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1039     07B3  0086               	movwf	6
  1040     07B4  0187               	clrf	7
  1041     07B5  3037               	movlw	55
  1042     07B6  0081               	movwf	1
  1043     07B7                     l970:
  1044                           
  1045                           ;main.c: 387:     wait_for_pwm_cycle_complete();
  1046     07B7  3186  2617  3187   	fcall	_wait_for_pwm_cycle_complete
  1047     07BA                     l972:
  1048                           
  1049                           ;main.c: 388:     CCPR3L = Dbit[i];
  1050     07BA  087A               	movf	PWM@i,w
  1051     07BB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1052     07BC  0086               	movwf	6
  1053     07BD  0187               	clrf	7
  1054     07BE  0801               	movf	1,w
  1055     07BF  0026               	movlb	6	; select bank6
  1056     07C0  0091               	movwf	17	;volatile
  1057     07C1                     l974:
  1058                           
  1059                           ;main.c: 389:   }
  1060     07C1  3001               	movlw	1
  1061     07C2  00F0               	movwf	??_PWM
  1062     07C3  0870               	movf	??_PWM,w
  1063     07C4  07FA               	addwf	PWM@i,f
  1064     07C5                     l976:
  1065     07C5  3008               	movlw	8
  1066     07C6  027A               	subwf	PWM@i,w
  1067     07C7  1C03               	skipc
  1068     07C8  2FCA               	goto	u331
  1069     07C9  2FCB               	goto	u330
  1070     07CA                     u331:
  1071     07CA  2FA1               	goto	l964
  1072     07CB                     u330:
  1073     07CB                     l978:
  1074                           
  1075                           ;main.c: 391:   for (uint8_t i = 0; i < 8; i++) {
  1076     07CB  01F9               	clrf	PWM@i_199
  1077     07CC                     l984:
  1078                           
  1079                           ;main.c: 392:     wait_for_pwm_cycle_complete();
  1080     07CC  3186  2617  3187   	fcall	_wait_for_pwm_cycle_complete
  1081     07CF                     l986:
  1082                           
  1083                           ;main.c: 393:     CCPR3L = 30;
  1084     07CF  301E               	movlw	30
  1085     07D0  0026               	movlb	6	; select bank6
  1086     07D1  0091               	movwf	17	;volatile
  1087     07D2                     l988:
  1088                           
  1089                           ;main.c: 394:   }
  1090     07D2  3001               	movlw	1
  1091     07D3  00F0               	movwf	??_PWM
  1092     07D4  0870               	movf	??_PWM,w
  1093     07D5  07F9               	addwf	PWM@i_199,f
  1094     07D6                     l990:
  1095     07D6  3008               	movlw	8
  1096     07D7  0279               	subwf	PWM@i_199,w
  1097     07D8  1C03               	skipc
  1098     07D9  2FDB               	goto	u341
  1099     07DA  2FDC               	goto	u340
  1100     07DB                     u341:
  1101     07DB  2FCC               	goto	l984
  1102     07DC                     u340:
  1103     07DC                     l97:
  1104     07DC  0008               	return
  1105     07DD                     __end_of_PWM:
  1106                           
  1107                           	psect	text2
  1108     0617                     __ptext2:	
  1109 ;; *************** function _wait_for_pwm_cycle_complete *****************
  1110 ;; Defined at:
  1111 ;;		line 359 in file "main.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		None
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1125 ;;      Params:         0       0       0       0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_PWM
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138     0617                     _wait_for_pwm_cycle_complete:	
  1139                           ;psect for function _wait_for_pwm_cycle_complete
  1140                           
  1141     0617                     l82:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _wait_for_pwm_cycle_complete: []
  1144                           ;main.c: 360:   while (1) {
  1145                           
  1146                           
  1147                           ;main.c: 361:     if (TMR2IF) {
  1148     0617  0020               	movlb	0	; select bank0
  1149     0618  1C91               	btfss	17,1	;volatile
  1150     0619  2E1B               	goto	u241
  1151     061A  2E1C               	goto	u240
  1152     061B                     u241:
  1153     061B  2E17               	goto	l82
  1154     061C                     u240:
  1155     061C                     l934:
  1156                           
  1157                           ;main.c: 362:       TMR2IF = 0;
  1158     061C  1091               	bcf	17,1	;volatile
  1159     061D                     l86:	
  1160                           ;main.c: 363:       break;
  1161                           
  1162     061D  0008               	return
  1163     061E                     __end_of_wait_for_pwm_cycle_complete:
  1164                           
  1165                           	psect	text3
  1166     061E                     __ptext3:	
  1167 ;; *************** function _Hardware_Init *****************
  1168 ;; Defined at:
  1169 ;;		line 397 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1183 ;;      Params:         0       0       0       0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0
  1185 ;;      Temps:          2       0       0       0       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196     061E                     _Hardware_Init:	
  1197                           ;psect for function _Hardware_Init
  1198                           
  1199     061E                     l992:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _Hardware_Init: [wreg+status,2]
  1202                           
  1203                           
  1204                           ;main.c: 398:   OSCCON = 0b11110000;
  1205     061E  30F0               	movlw	240
  1206     061F  0021               	movlb	1	; select bank1
  1207     0620  0099               	movwf	25	;volatile
  1208                           
  1209                           ;main.c: 400:   OSCTUNE = 0b00111111;
  1210     0621  303F               	movlw	63
  1211     0622  0098               	movwf	24	;volatile
  1212     0623                     l994:
  1213                           
  1214                           ;main.c: 401:   ANSELA = 0b00000000;
  1215     0623  0023               	movlb	3	; select bank3
  1216     0624  018C               	clrf	12	;volatile
  1217     0625                     l996:
  1218                           
  1219                           ;main.c: 402:   PORTA = 0;
  1220     0625  0020               	movlb	0	; select bank0
  1221     0626  018C               	clrf	12	;volatile
  1222                           
  1223                           ;main.c: 403:   TRISA = 0b00011111;
  1224     0627  301F               	movlw	31
  1225     0628  0021               	movlb	1	; select bank1
  1226     0629  008C               	movwf	12	;volatile
  1227     062A                     l998:
  1228                           
  1229                           ;main.c: 404:   LATA = 0b00000000;
  1230     062A  0022               	movlb	2	; select bank2
  1231     062B  018C               	clrf	12	;volatile
  1232     062C                     l1000:
  1233                           
  1234                           ;main.c: 405:   ANSELB = 0b00000000;
  1235     062C  0023               	movlb	3	; select bank3
  1236     062D  018D               	clrf	13	;volatile
  1237     062E                     l1002:
  1238                           
  1239                           ;main.c: 406:   PORTB = 0;
  1240     062E  0020               	movlb	0	; select bank0
  1241     062F  018D               	clrf	13	;volatile
  1242     0630                     l1004:
  1243                           
  1244                           ;main.c: 407:   TRISB = 0b00000000;
  1245     0630  0021               	movlb	1	; select bank1
  1246     0631  018D               	clrf	13	;volatile
  1247     0632                     l1006:
  1248                           
  1249                           ;main.c: 408:   LATB = 0b00000000;
  1250     0632  0022               	movlb	2	; select bank2
  1251     0633  018D               	clrf	13	;volatile
  1252     0634                     l1008:
  1253                           
  1254                           ;main.c: 409:   PORTC = 0;
  1255     0634  0020               	movlb	0	; select bank0
  1256     0635  018E               	clrf	14	;volatile
  1257                           
  1258                           ;main.c: 410:   TRISC = 0b10001010;
  1259     0636  308A               	movlw	138
  1260     0637  0021               	movlb	1	; select bank1
  1261     0638  008E               	movwf	14	;volatile
  1262     0639                     l1010:
  1263                           
  1264                           ;main.c: 411:   LATC = 0b00000000;
  1265     0639  0022               	movlb	2	; select bank2
  1266     063A  018E               	clrf	14	;volatile
  1267     063B                     l1012:
  1268                           
  1269                           ;main.c: 412:   PORTE = 0;
  1270     063B  0020               	movlb	0	; select bank0
  1271     063C  0190               	clrf	16	;volatile
  1272     063D                     l1014:
  1273                           
  1274                           ;main.c: 413:   TRISE = 0b00000000;
  1275     063D  0021               	movlb	1	; select bank1
  1276     063E  0190               	clrf	16	;volatile
  1277     063F                     l1016:
  1278                           
  1279                           ;main.c: 414:   LATE = 0b00000000;
  1280     063F  0022               	movlb	2	; select bank2
  1281     0640  0190               	clrf	16	;volatile
  1282                           
  1283                           ;main.c: 415:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1284     0641  3005               	movlw	5
  1285     0642  00F1               	movwf	??_Hardware_Init+1
  1286     0643  300F               	movlw	15
  1287     0644  00F0               	movwf	??_Hardware_Init
  1288     0645  30F1               	movlw	241
  1289     0646                     u487:
  1290     0646  0B89               	decfsz	9,f
  1291     0647  2E46               	goto	u487
  1292     0648  0BF0               	decfsz	??_Hardware_Init,f
  1293     0649  2E46               	goto	u487
  1294     064A  0BF1               	decfsz	??_Hardware_Init+1,f
  1295     064B  2E46               	goto	u487
  1296     064C  0000               	nop
  1297                           
  1298                           ;main.c: 416:   CCP3CON = 0b00001100;
  1299     064D  300C               	movlw	12
  1300     064E  0026               	movlb	6	; select bank6
  1301     064F  0093               	movwf	19	;volatile
  1302     0650                     l1018:
  1303                           
  1304                           ;main.c: 417:   CCP3SEL = 0;
  1305     0650  0022               	movlb	2	; select bank2
  1306     0651  131D               	bcf	29,6	;volatile
  1307                           
  1308                           ;main.c: 418:   PR2 = 103;
  1309     0652  3067               	movlw	103
  1310     0653  0020               	movlb	0	; select bank0
  1311     0654  009B               	movwf	27	;volatile
  1312                           
  1313                           ;main.c: 419:   CCPR3L = 30;
  1314     0655  301E               	movlw	30
  1315     0656  0026               	movlb	6	; select bank6
  1316     0657  0091               	movwf	17	;volatile
  1317     0658                     l1020:
  1318                           
  1319                           ;main.c: 420:   TMR2ON = 1;
  1320     0658  0020               	movlb	0	; select bank0
  1321     0659  151C               	bsf	28,2	;volatile
  1322     065A                     l1022:
  1323                           
  1324                           ;main.c: 421:   T2CKPS1 = 0;
  1325     065A  109C               	bcf	28,1	;volatile
  1326     065B                     l1024:
  1327                           
  1328                           ;main.c: 422:   T2CKPS0 = 1;
  1329     065B  141C               	bsf	28,0	;volatile
  1330     065C                     l100:
  1331     065C  0008               	return
  1332     065D                     __end_of_Hardware_Init:
  1333                           
  1334                           	psect	text4
  1335     06EC                     __ptext4:	
  1336 ;; *************** function _Check_Input *****************
  1337 ;; Defined at:
  1338 ;;		line 425 in file "main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1352 ;;      Params:         0       0       0       0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     06EC                     _Check_Input:	
  1366                           ;psect for function _Check_Input
  1367                           
  1368     06EC                     l1026:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _Check_Input: [wreg+status,2+status,0]
  1371                           
  1372                           
  1373                           ;main.c: 427:   D2.Byte = 0;
  1374     06EC  0020               	movlb	0	; select bank0
  1375     06ED  01B9               	clrf	_D2
  1376                           
  1377                           ;main.c: 428:   D3.Byte = 0;
  1378     06EE  01B8               	clrf	_D3
  1379                           
  1380                           ;main.c: 429:   csFlag.Byte = 0;
  1381     06EF  01B7               	clrf	_csFlag
  1382     06F0                     l1028:
  1383                           
  1384                           ;main.c: 432:   if (PORTAbits.RA0 == 0) {
  1385     06F0  180C               	btfsc	12,0	;volatile
  1386     06F1  2EF3               	goto	u351
  1387     06F2  2EF4               	goto	u350
  1388     06F3                     u351:
  1389     06F3  2EF8               	goto	l103
  1390     06F4                     u350:
  1391     06F4                     l1030:
  1392                           
  1393                           ;main.c: 433:     PORTBbits.RB5 = 1;
  1394     06F4  168D               	bsf	13,5	;volatile
  1395                           
  1396                           ;main.c: 434:     D2.RunLight = 1;
  1397     06F5  1539               	bsf	_D2,2
  1398                           
  1399                           ;main.c: 435:     csFlag.RunLight = 1;
  1400     06F6  16B7               	bsf	_csFlag,5
  1401                           
  1402                           ;main.c: 436:   } else {
  1403     06F7  2EFB               	goto	l104
  1404     06F8                     l103:
  1405                           
  1406                           ;main.c: 437:     PORTBbits.RB5 = 0;
  1407     06F8  128D               	bcf	13,5	;volatile
  1408                           
  1409                           ;main.c: 438:     D2.RunLight = 0;
  1410     06F9  1139               	bcf	_D2,2
  1411                           
  1412                           ;main.c: 439:     csFlag.RunLight = 0;
  1413     06FA  12B7               	bcf	_csFlag,5
  1414     06FB                     l104:	
  1415                           ;main.c: 440:   }
  1416                           
  1417                           
  1418                           ;main.c: 443:   if (PORTAbits.RA1 == 0) {
  1419     06FB  188C               	btfsc	12,1	;volatile
  1420     06FC  2EFE               	goto	u361
  1421     06FD  2EFF               	goto	u360
  1422     06FE                     u361:
  1423     06FE  2F03               	goto	l105
  1424     06FF                     u360:
  1425     06FF                     l1032:
  1426                           
  1427                           ;main.c: 444:     PORTBbits.RB4 = 1;
  1428     06FF  160D               	bsf	13,4	;volatile
  1429                           
  1430                           ;main.c: 445:     D2.DRL = 1;
  1431     0700  15B9               	bsf	_D2,3
  1432                           
  1433                           ;main.c: 446:     csFlag.DRL = 1;
  1434     0701  1637               	bsf	_csFlag,4
  1435                           
  1436                           ;main.c: 447:   } else {
  1437     0702  2F06               	goto	l106
  1438     0703                     l105:
  1439                           
  1440                           ;main.c: 448:     PORTBbits.RB4 = 0;
  1441     0703  120D               	bcf	13,4	;volatile
  1442                           
  1443                           ;main.c: 449:     D2.DRL = 0;
  1444     0704  11B9               	bcf	_D2,3
  1445                           
  1446                           ;main.c: 450:     csFlag.DRL = 0;
  1447     0705  1237               	bcf	_csFlag,4
  1448     0706                     l106:	
  1449                           ;main.c: 451:   }
  1450                           
  1451                           
  1452                           ;main.c: 454:   if (PORTAbits.RA2 == 0) {
  1453     0706  190C               	btfsc	12,2	;volatile
  1454     0707  2F09               	goto	u371
  1455     0708  2F0A               	goto	u370
  1456     0709                     u371:
  1457     0709  2F0E               	goto	l107
  1458     070A                     u370:
  1459     070A                     l1034:
  1460                           
  1461                           ;main.c: 455:     PORTBbits.RB3 = 1;
  1462     070A  158D               	bsf	13,3	;volatile
  1463                           
  1464                           ;main.c: 456:     D2.LoBeam = 1;
  1465     070B  1639               	bsf	_D2,4
  1466                           
  1467                           ;main.c: 457:     csFlag.LoBeam = 1;
  1468     070C  15B7               	bsf	_csFlag,3
  1469                           
  1470                           ;main.c: 458:   } else {
  1471     070D  2F11               	goto	l108
  1472     070E                     l107:
  1473                           
  1474                           ;main.c: 459:     PORTBbits.RB3 = 0;
  1475     070E  118D               	bcf	13,3	;volatile
  1476                           
  1477                           ;main.c: 460:     D2.LoBeam = 0;
  1478     070F  1239               	bcf	_D2,4
  1479                           
  1480                           ;main.c: 461:     csFlag.LoBeam = 0;
  1481     0710  11B7               	bcf	_csFlag,3
  1482     0711                     l108:	
  1483                           ;main.c: 462:   }
  1484                           
  1485                           
  1486                           ;main.c: 465:   if (PORTAbits.RA3 == 0) {
  1487     0711  198C               	btfsc	12,3	;volatile
  1488     0712  2F14               	goto	u381
  1489     0713  2F15               	goto	u380
  1490     0714                     u381:
  1491     0714  2F19               	goto	l109
  1492     0715                     u380:
  1493     0715                     l1036:
  1494                           
  1495                           ;main.c: 466:     PORTBbits.RB2 = 1;
  1496     0715  150D               	bsf	13,2	;volatile
  1497                           
  1498                           ;main.c: 467:     D2.HiBeam = 1;
  1499     0716  16B9               	bsf	_D2,5
  1500                           
  1501                           ;main.c: 468:     csFlag.HiBeam = 1;
  1502     0717  1537               	bsf	_csFlag,2
  1503                           
  1504                           ;main.c: 469:   } else {
  1505     0718  2F1C               	goto	l1038
  1506     0719                     l109:
  1507                           
  1508                           ;main.c: 470:     PORTBbits.RB2 = 0;
  1509     0719  110D               	bcf	13,2	;volatile
  1510                           
  1511                           ;main.c: 471:     D2.HiBeam = 0;
  1512     071A  12B9               	bcf	_D2,5
  1513                           
  1514                           ;main.c: 472:     csFlag.HiBeam = 0;
  1515     071B  1137               	bcf	_csFlag,2
  1516     071C                     l1038:
  1517                           
  1518                           ;main.c: 475:   if (flamp_left == 1) {
  1519     071C  0335               	decf	_flamp_left,w
  1520     071D  1D03               	btfss	3,2
  1521     071E  2F20               	goto	u391
  1522     071F  2F21               	goto	u390
  1523     0720                     u391:
  1524     0720  2F3A               	goto	l111
  1525     0721                     u390:
  1526     0721                     l1040:
  1527                           
  1528                           ;main.c: 477:     if (PORTAbits.RA4 == 0) {
  1529     0721  1A0C               	btfsc	12,4	;volatile
  1530     0722  2F24               	goto	u401
  1531     0723  2F25               	goto	u400
  1532     0724                     u401:
  1533     0724  2F29               	goto	l112
  1534     0725                     u400:
  1535     0725                     l1042:
  1536                           
  1537                           ;main.c: 478:       PORTBbits.RB1 = 1;
  1538     0725  148D               	bsf	13,1	;volatile
  1539                           
  1540                           ;main.c: 479:       D3.turnLight_L = 1;
  1541     0726  16B8               	bsf	_D3,5
  1542                           
  1543                           ;main.c: 480:       csFlag.turnLight_L = 1;
  1544     0727  14B7               	bsf	_csFlag,1
  1545                           
  1546                           ;main.c: 481:     } else {
  1547     0728  2F2C               	goto	l113
  1548     0729                     l112:
  1549                           
  1550                           ;main.c: 482:       PORTBbits.RB1 = 0;
  1551     0729  108D               	bcf	13,1	;volatile
  1552                           
  1553                           ;main.c: 483:       D3.turnLight_L = 0;
  1554     072A  12B8               	bcf	_D3,5
  1555                           
  1556                           ;main.c: 484:       csFlag.turnLight_L = 0;
  1557     072B  10B7               	bcf	_csFlag,1
  1558     072C                     l113:	
  1559                           ;main.c: 485:     }
  1560                           
  1561                           
  1562                           ;main.c: 488:     if (PORTCbits.RC3 == 0) {
  1563     072C  198E               	btfsc	14,3	;volatile
  1564     072D  2F2F               	goto	u411
  1565     072E  2F30               	goto	u410
  1566     072F                     u411:
  1567     072F  2F37               	goto	l114
  1568     0730                     u410:
  1569     0730                     l1044:
  1570                           
  1571                           ;main.c: 489:       PORTBbits.RB0 = 1;
  1572     0730  140D               	bsf	13,0	;volatile
  1573     0731                     l1046:
  1574                           
  1575                           ;main.c: 490:       D2.Byte = 6;
  1576     0731  3006               	movlw	6
  1577     0732  00B9               	movwf	_D2
  1578     0733                     l1048:
  1579                           
  1580                           ;main.c: 491:       D3.Byte = 0;
  1581     0733  01B8               	clrf	_D3
  1582     0734                     l1050:
  1583                           
  1584                           ;main.c: 492:       fException = 1;
  1585     0734  01B6               	clrf	_fException
  1586     0735  0AB6               	incf	_fException,f
  1587                           
  1588                           ;main.c: 493:     } else {
  1589     0736  2F52               	goto	l121
  1590     0737                     l114:
  1591                           
  1592                           ;main.c: 494:       PORTBbits.RB1 = 0;
  1593     0737  108D               	bcf	13,1	;volatile
  1594     0738                     l1052:
  1595                           
  1596                           ;main.c: 495:       fException = 0;
  1597     0738  01B6               	clrf	_fException
  1598     0739  2F52               	goto	l121
  1599     073A                     l111:
  1600                           
  1601                           ;main.c: 499:     if (PORTAbits.RA4 == 0) {
  1602     073A  1A0C               	btfsc	12,4	;volatile
  1603     073B  2F3D               	goto	u421
  1604     073C  2F3E               	goto	u420
  1605     073D                     u421:
  1606     073D  2F45               	goto	l117
  1607     073E                     u420:
  1608     073E                     l1054:
  1609                           
  1610                           ;main.c: 500:       PORTBbits.RB1 = 1;
  1611     073E  148D               	bsf	13,1	;volatile
  1612     073F                     l1056:
  1613                           
  1614                           ;main.c: 501:       D2.Byte = 6;
  1615     073F  3006               	movlw	6
  1616     0740  00B9               	movwf	_D2
  1617     0741                     l1058:
  1618                           
  1619                           ;main.c: 502:       D3.Byte = 0;
  1620     0741  01B8               	clrf	_D3
  1621     0742                     l1060:
  1622                           
  1623                           ;main.c: 503:       fException = 1;
  1624     0742  01B6               	clrf	_fException
  1625     0743  0AB6               	incf	_fException,f
  1626                           
  1627                           ;main.c: 504:     } else {
  1628     0744  2F47               	goto	l1064
  1629     0745                     l117:
  1630                           
  1631                           ;main.c: 505:       PORTBbits.RB1 = 0;
  1632     0745  108D               	bcf	13,1	;volatile
  1633     0746                     l1062:
  1634                           
  1635                           ;main.c: 506:       fException = 0;
  1636     0746  01B6               	clrf	_fException
  1637     0747                     l1064:
  1638                           
  1639                           ;main.c: 510:     if (PORTCbits.RC3 == 0) {
  1640     0747  198E               	btfsc	14,3	;volatile
  1641     0748  2F4A               	goto	u431
  1642     0749  2F4B               	goto	u430
  1643     074A                     u431:
  1644     074A  2F4F               	goto	l119
  1645     074B                     u430:
  1646     074B                     l1066:
  1647                           
  1648                           ;main.c: 511:       PORTBbits.RB0 = 1;
  1649     074B  140D               	bsf	13,0	;volatile
  1650                           
  1651                           ;main.c: 512:       D3.trunLight_R = 1;
  1652     074C  1738               	bsf	_D3,6
  1653                           
  1654                           ;main.c: 513:       csFlag.turnLight_R = 1;
  1655     074D  1437               	bsf	_csFlag,0
  1656                           
  1657                           ;main.c: 514:     } else {
  1658     074E  2F52               	goto	l121
  1659     074F                     l119:
  1660                           
  1661                           ;main.c: 515:       PORTBbits.RB0 = 0;
  1662     074F  100D               	bcf	13,0	;volatile
  1663                           
  1664                           ;main.c: 516:       D3.trunLight_R = 0;
  1665     0750  1338               	bcf	_D3,6
  1666                           
  1667                           ;main.c: 517:       csFlag.turnLight_R = 0;
  1668     0751  1037               	bcf	_csFlag,0
  1669     0752                     l121:
  1670     0752  0008               	return
  1671     0753                     __end_of_Check_Input:
  1672     007E                     btemp	set	126	;btemp
  1673     007E                     wtemp0	set	126
  1674                           
  1675                           	psect	config
  1676                           
  1677                           ;Config register CONFIG1 @ 0x8007
  1678                           ;	Oscillator Selection
  1679                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1680                           ;	Watchdog Timer Enable
  1681                           ;	WDTE = OFF, WDT disabled
  1682                           ;	Power-up Timer Enable
  1683                           ;	PWRTE = OFF, PWRT disabled
  1684                           ;	MCLR Pin Function Select
  1685                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1686                           ;	Flash Program Memory Code Protection
  1687                           ;	CP = OFF, Program memory code protection is disabled
  1688                           ;	Data Memory Code Protection
  1689                           ;	CPD = ON, Data memory code protection is enabled
  1690                           ;	Brown-out Reset Enable
  1691                           ;	BOREN = ON, Brown-out Reset enabled
  1692                           ;	Clock Out Enable
  1693                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1694                           ;	Internal/External Switchover
  1695                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1696                           ;	Fail-Safe Clock Monitor Enable
  1697                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1698     8007                     	org	32775
  1699     8007  0EA4               	dw	3748
  1700                           
  1701                           ;Config register CONFIG2 @ 0x8008
  1702                           ;	Flash Memory Self-Write Protection
  1703                           ;	WRT = OFF, Write protection off
  1704                           ;	Voltage Regulator Capacitor Enable
  1705                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  1706                           ;	PLL Enable
  1707                           ;	PLLEN = ON, 4x PLL enabled
  1708                           ;	Stack Overflow/Underflow Reset Enable
  1709                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1710                           ;	Brown-out Reset Voltage Selection
  1711                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1712                           ;	Low-Voltage Programming Enable
  1713                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1714     8008                     	org	32776
  1715     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         26
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      30
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     688
                                             12 COMMON     2     2      0
                        _Check_Input
                      _Hardware_Init
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 12    12      0     620
                                              0 COMMON    12    12      0
        _wait_for_pwm_cycle_complete
 ---------------------------------------------------------------------------------
 (2) _wait_for_pwm_cycle_complete                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Check_Input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Input
   _Hardware_Init
   _PWM
     _wait_for_pwm_cycle_complete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1E       6       37.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Sep 12 08:45:41 2025

                                  _a 0034                                    _b 0033  
                                 _D2 0039                                   _D3 0038  
                                 l82 0617                                   _CS 00A0  
                                 l86 061D                                   l97 07DC  
                                l100 065C                                  l111 073A  
                                l103 06F8                                  l112 0729  
                                l104 06FB                                  l121 0752  
                                l113 072C                                  l105 0703  
                                l114 0737                                  l106 0706  
                                l107 070E                                  l108 0711  
                                l117 0745                                  l109 0719  
                                l119 074F                                  l940 0761  
                                l934 061C                                  l950 0788  
                                l942 0764                                  l952 0791  
                                l944 076D                                  l936 0754  
                                l970 07B7                                  l954 079A  
                                l946 0776                                  l938 075E  
                                l972 07BA                                  l964 07A1  
                                l956 079D                                  l948 077F  
                                l990 07D6                                  l974 07C1  
                                l966 07AA                                  l958 07A0  
                                l992 061E                                  l984 07CC  
                                l976 07C5                                  l968 07B1  
                                l994 0623                                  l986 07CF  
                                l978 07CB                                  l996 0625  
                                l988 07D2                                  l998 062A  
                                u400 0725                                  u240 061C  
                                u320 07AA                                  u401 0724  
                                u241 061B                                  u321 07A9  
                                u305 078B                                  u410 0730  
                                u330 07CB                                  u250 075B  
                                u411 072F                                  u331 07CA  
                                u315 0794                                  u420 073E  
                                u340 07DC                                  u421 073D  
                                u341 07DB                                  u430 074B  
                                u350 06F4                                  _PR2 001B  
                                u431 074A                                  u351 06F3  
                                u360 06FF                                  u440 06A5  
                                u361 06FE                                  u265 0767  
                                u441 06A4                                  u370 070A  
                                u450 06C2                                  u371 0709  
                                u275 0770                                  u451 06C1  
                                u380 0715                                  u460 06DF  
                                u381 0714                                  u285 0779  
                                u461 06DE                                  u390 0721  
                                u391 0720                                  u295 0782  
                                u477 06E5                                  u487 0646  
                                _PWM 0753                                  wreg 0009  
__end_of_wait_for_pwm_cycle_complete 061E          _wait_for_pwm_cycle_complete 0617  
                               ?_PWM 0070                                 l1000 062C  
                               l1010 0639                                 l1002 062E  
                               l1020 0658                                 l1012 063B  
                               l1004 0630                                 l1100 06BB  
                               l1030 06F4                                 l1022 065A  
                               l1014 063D                                 l1006 0632  
                               l1110 06CC                                 l1102 06BD  
                               l1040 0721                                 l1032 06FF  
                               l1024 065B                                 l1016 063F  
                               l1008 0634                                 l1120 06D9  
                               l1104 06C2                                 l1050 0734  
                               l1042 0725                                 l1034 070A  
                               l1026 06EC                                 l1018 0650  
                               l1122 06DF                                 l1106 06C3  
                               l1060 0742                                 l1052 0738  
                               l1044 0730                                 l1036 0715  
                               l1028 06F0                                 l1116 06CD  
                               l1108 06C6                                 l1062 0746  
                               l1054 073E                                 l1046 0731  
                               l1038 071C                                 l1118 06D5  
                               l1070 06A0                                 l1064 0747  
                               l1056 073F                                 l1048 0733  
                               l1080 06AF                                 l1072 06A5  
                               l1066 074B                                 l1058 0741  
                               l1090 06B4                                 l1082 06B0  
                               l1074 06A7                                 l1092 06B5  
                               l1084 06B1                                 l1076 06AA  
                               l1068 069D                                 l1094 06B6  
                               l1086 06B2                                 l1078 06AD  
                               l1096 06B7                                 l1088 06B3  
                               l1098 06B9                                 PWM@i 007A  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATE 0110  
                               _main 069D                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 0002                                ??_PWM 0070  
                        _Check_Input 06EC                                ?_main 0070  
                              _PORTA 000C                                _PORTB 000D  
                              _PORTC 000E                                _PORTE 0010  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISE 0090  
                              main@i 007D                                status 0003  
                              wtemp0 007E                      __initialization 07DD  
                       __end_of_main 06EC                               ??_main 007C  
                             PWM@num 007B                               _CCPR3L 0311  
                             _ANSELA 018C                               _ANSELB 018D  
                             _OSCCON 0099                               _TMR2IF 0089  
                             _TMR2ON 00E2                               _data48 003A  
                             _csFlag 0037                           _fException 0036  
            __end_of__initialization 07FD                __end_of_Hardware_Init 065D  
                     __pcstackCOMMON 0070                         __pidataBANK0 0607  
                       __pidataBANK1 065D                           __pbssBANK0 0020  
                         __pmaintext 069D                              PWM@Dbit 0071  
                            _CCP3CON 0313                         ?_Check_Input 0070  
                            _CCP3SEL 08EE                              _T2CKPS0 00E0  
                            _T2CKPS1 00E1                           _flamp_left 0035  
                            _OSCTUNE 0098                              __ptext1 0753  
                            __ptext2 0617                              __ptext3 061E  
                            __ptext4 06EC                              _tx_Data 0020  
                            clrloop0 060C                 end_of_initialization 07FD  
                            init_ram 0611                              initloop 0612  
                          _PORTAbits 000C                            _PORTBbits 000D  
                          _PORTCbits 000E                  start_initialization 07DD  
                        __end_of_PWM 07DD         ?_wait_for_pwm_cycle_complete 0070  
                        __pdataBANK0 003A                          __pdataBANK1 00A0  
                          ___latbits 0002        ??_wait_for_pwm_cycle_complete 0070  
                           PWM@F2776 002B                             PWM@i_199 0079  
                          clear_ram0 060B                        _Hardware_Init 061E  
                     ?_Hardware_Init 0070                        ??_Check_Input 0070  
                    ??_Hardware_Init 0070                  __end_of_Check_Input 0753  
