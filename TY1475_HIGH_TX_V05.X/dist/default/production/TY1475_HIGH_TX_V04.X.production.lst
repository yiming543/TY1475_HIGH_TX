

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 30 14:59:46 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1936 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0095                     	;# 
    93     0096                     	;# 
    94     0097                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     0110                     	;# 
   107     0111                     	;# 
   108     0112                     	;# 
   109     0113                     	;# 
   110     0114                     	;# 
   111     0115                     	;# 
   112     0116                     	;# 
   113     0117                     	;# 
   114     0118                     	;# 
   115     0119                     	;# 
   116     011A                     	;# 
   117     011B                     	;# 
   118     011D                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0191                     	;# 
   122     0191                     	;# 
   123     0192                     	;# 
   124     0193                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0199                     	;# 
   131     019A                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019D                     	;# 
   139     019E                     	;# 
   140     019F                     	;# 
   141     020D                     	;# 
   142     0210                     	;# 
   143     0211                     	;# 
   144     0212                     	;# 
   145     0213                     	;# 
   146     0214                     	;# 
   147     0215                     	;# 
   148     0215                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0291                     	;# 
   152     0291                     	;# 
   153     0292                     	;# 
   154     0293                     	;# 
   155     0294                     	;# 
   156     0295                     	;# 
   157     0295                     	;# 
   158     0296                     	;# 
   159     0298                     	;# 
   160     0298                     	;# 
   161     0299                     	;# 
   162     029A                     	;# 
   163     029B                     	;# 
   164     029C                     	;# 
   165     029C                     	;# 
   166     029D                     	;# 
   167     029E                     	;# 
   168     029F                     	;# 
   169     0311                     	;# 
   170     0311                     	;# 
   171     0312                     	;# 
   172     0313                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0315                     	;# 
   176     0316                     	;# 
   177     0318                     	;# 
   178     0318                     	;# 
   179     0319                     	;# 
   180     031A                     	;# 
   181     031C                     	;# 
   182     031C                     	;# 
   183     031D                     	;# 
   184     031E                     	;# 
   185     0394                     	;# 
   186     0395                     	;# 
   187     0396                     	;# 
   188     0415                     	;# 
   189     0416                     	;# 
   190     0417                     	;# 
   191     041C                     	;# 
   192     041D                     	;# 
   193     041E                     	;# 
   194     0791                     	;# 
   195     0792                     	;# 
   196     0793                     	;# 
   197     0794                     	;# 
   198     0795                     	;# 
   199     0798                     	;# 
   200     0799                     	;# 
   201     07A0                     	;# 
   202     07A1                     	;# 
   203     07A3                     	;# 
   204     07A4                     	;# 
   205     07A6                     	;# 
   206     07A7                     	;# 
   207     07A9                     	;# 
   208     07AA                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     010E                     	;# 
   271     0110                     	;# 
   272     0111                     	;# 
   273     0112                     	;# 
   274     0113                     	;# 
   275     0114                     	;# 
   276     0115                     	;# 
   277     0116                     	;# 
   278     0117                     	;# 
   279     0118                     	;# 
   280     0119                     	;# 
   281     011A                     	;# 
   282     011B                     	;# 
   283     011D                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020D                     	;# 
   307     0210                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0216                     	;# 
   315     0217                     	;# 
   316     0291                     	;# 
   317     0291                     	;# 
   318     0292                     	;# 
   319     0293                     	;# 
   320     0294                     	;# 
   321     0295                     	;# 
   322     0295                     	;# 
   323     0296                     	;# 
   324     0298                     	;# 
   325     0298                     	;# 
   326     0299                     	;# 
   327     029A                     	;# 
   328     029B                     	;# 
   329     029C                     	;# 
   330     029C                     	;# 
   331     029D                     	;# 
   332     029E                     	;# 
   333     029F                     	;# 
   334     0311                     	;# 
   335     0311                     	;# 
   336     0312                     	;# 
   337     0313                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0315                     	;# 
   341     0316                     	;# 
   342     0318                     	;# 
   343     0318                     	;# 
   344     0319                     	;# 
   345     031A                     	;# 
   346     031C                     	;# 
   347     031C                     	;# 
   348     031D                     	;# 
   349     031E                     	;# 
   350     0394                     	;# 
   351     0395                     	;# 
   352     0396                     	;# 
   353     0415                     	;# 
   354     0416                     	;# 
   355     0417                     	;# 
   356     041C                     	;# 
   357     041D                     	;# 
   358     041E                     	;# 
   359     0791                     	;# 
   360     0792                     	;# 
   361     0793                     	;# 
   362     0794                     	;# 
   363     0795                     	;# 
   364     0798                     	;# 
   365     0799                     	;# 
   366     07A0                     	;# 
   367     07A1                     	;# 
   368     07A3                     	;# 
   369     07A4                     	;# 
   370     07A6                     	;# 
   371     07A7                     	;# 
   372     07A9                     	;# 
   373     07AA                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     061E                     __pidataBANK0:
   388                           
   389                           ;initializer for _data48
   390     061E  3402               	retlw	2
   391     061F  3400               	retlw	0
   392     0620  3400               	retlw	0
   393     0621  34B4               	retlw	180
   394                           
   395                           	psect	idataBANK1
   396     0674                     __pidataBANK1:
   397                           
   398                           ;initializer for _CS
   399     0674  344C               	retlw	76
   400     0675  349F               	retlw	159
   401     0676  34ED               	retlw	237
   402     0677  343E               	retlw	62
   403     0678  349A               	retlw	154
   404     0679  3400               	retlw	0
   405     067A  3400               	retlw	0
   406     067B  3400               	retlw	0
   407     067C  3427               	retlw	39
   408     067D  3400               	retlw	0
   409     067E  3400               	retlw	0
   410     067F  3400               	retlw	0
   411     0680  34F1               	retlw	241
   412     0681  34A0               	retlw	160
   413     0682  34D2               	retlw	210
   414     0683  3401               	retlw	1
   415     0684  34B1               	retlw	177
   416     0685  345D               	retlw	93
   417     0686  342F               	retlw	47
   418     0687  34FC               	retlw	252
   419     0688  3467               	retlw	103
   420     0689  3400               	retlw	0
   421     068A  3400               	retlw	0
   422     068B  3400               	retlw	0
   423     068C  34DA               	retlw	218
   424     068D  3400               	retlw	0
   425     068E  3400               	retlw	0
   426     068F  3400               	retlw	0
   427     0690  340C               	retlw	12
   428     0691  3462               	retlw	98
   429     0692  3410               	retlw	16
   430     0693  34C3               	retlw	195
   431     0694  34FA               	retlw	250
   432     0695  34FE               	retlw	254
   433     0696  348C               	retlw	140
   434     0697  345F               	retlw	95
   435     0698  342C               	retlw	44
   436     0699  3400               	retlw	0
   437     069A  3400               	retlw	0
   438     069B  3400               	retlw	0
   439     069C  3491               	retlw	145
   440     069D  34EB               	retlw	235
   441     069E  3499               	retlw	153
   442     069F  344A               	retlw	74
   443     06A0  3447               	retlw	71
   444     06A1  34C1               	retlw	193
   445     06A2  34B3               	retlw	179
   446     06A3  3460               	retlw	96
   447     06A4  3407               	retlw	7
   448     06A5  343C               	retlw	60
   449     06A6  344E               	retlw	78
   450     06A7  349D               	retlw	157
   451     06A8  34D1               	retlw	209
   452     06A9  3400               	retlw	0
   453     06AA  3400               	retlw	0
   454     06AB  3400               	retlw	0
   455     06AC  346C               	retlw	108
   456     06AD  3400               	retlw	0
   457     06AE  3400               	retlw	0
   458     06AF  3400               	retlw	0
   459     06B0  34BA               	retlw	186
   460     06B1  3403               	retlw	3
   461     06B2  3471               	retlw	113
   462     06B3  34A2               	retlw	162
   463     000E                     _PORTCbits	set	14
   464     000D                     _PORTBbits	set	13
   465     000C                     _PORTAbits	set	12
   466     001B                     _PR2	set	27
   467     0010                     _PORTE	set	16
   468     000E                     _PORTC	set	14
   469     000D                     _PORTB	set	13
   470     000C                     _PORTA	set	12
   471     00E0                     _T2CKPS0	set	224
   472     00E1                     _T2CKPS1	set	225
   473     00E2                     _TMR2ON	set	226
   474     0089                     _TMR2IF	set	137
   475     0090                     _TRISE	set	144
   476     008E                     _TRISC	set	142
   477     008D                     _TRISB	set	141
   478     008C                     _TRISA	set	140
   479     0098                     _OSCTUNE	set	152
   480     0099                     _OSCCON	set	153
   481     0110                     _LATE	set	272
   482     010E                     _LATC	set	270
   483     010C                     _LATA	set	268
   484     010D                     _LATB	set	269
   485     08EE                     _CCP3SEL	set	2286
   486     018D                     _ANSELB	set	397
   487     018C                     _ANSELA	set	396
   488     0313                     _CCP3CON	set	787
   489     0311                     _CCPR3L	set	785
   490                           
   491                           	psect	cinit
   492     07DD                     start_initialization:	
   493                           ; #config settings
   494                           
   495     07DD                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK0
   498     07DD  301E               	movlw	low __pidataBANK0
   499     07DE  0084               	movwf	4
   500     07DF  3086               	movlw	(high __pidataBANK0)| (0+128)
   501     07E0  0085               	movwf	5
   502     07E1  303A               	movlw	low __pdataBANK0
   503     07E2  0086               	movwf	6
   504     07E3  3000               	movlw	high __pdataBANK0
   505     07E4  0087               	movwf	7
   506     07E5  3004               	movlw	4
   507     07E6  3186  2628  3187   	fcall	init_ram
   508                           
   509                           ; Initialize objects allocated to BANK1
   510     07E9  3074               	movlw	low __pidataBANK1
   511     07EA  0084               	movwf	4
   512     07EB  3086               	movlw	(high __pidataBANK1)| (0+128)
   513     07EC  0085               	movwf	5
   514     07ED  30A0               	movlw	low __pdataBANK1
   515     07EE  0086               	movwf	6
   516     07EF  3000               	movlw	high __pdataBANK1
   517     07F0  0087               	movwf	7
   518     07F1  3040               	movlw	64
   519     07F2  3186  2628  3187   	fcall	init_ram
   520                           
   521                           ; Clear objects allocated to BANK0
   522     07F5  3020               	movlw	low __pbssBANK0
   523     07F6  0084               	movwf	4
   524     07F7  3000               	movlw	high __pbssBANK0
   525     07F8  0085               	movwf	5
   526     07F9  301A               	movlw	26
   527     07FA  3186  2622  3187   	fcall	clear_ram0
   528     07FD                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531     07FD                     __end_of__initialization:
   532     07FD  0020               	movlb	0
   533     07FE  3186  2EFB         	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK0
   536     0020                     __pbssBANK0:
   537     0020                     _tx_Data:
   538     0020                     	ds	11
   539     002B                     PWM@F2776:
   540     002B                     	ds	8
   541     0033                     _b:
   542     0033                     	ds	1
   543     0034                     _a:
   544     0034                     	ds	1
   545     0035                     _flamp_left:
   546     0035                     	ds	1
   547     0036                     _fException:
   548     0036                     	ds	1
   549     0037                     _csFlag:
   550     0037                     	ds	1
   551     0038                     _D3:
   552     0038                     	ds	1
   553     0039                     _D2:
   554     0039                     	ds	1
   555                           
   556                           	psect	dataBANK0
   557     003A                     __pdataBANK0:
   558     003A                     _data48:
   559     003A                     	ds	4
   560                           
   561                           	psect	dataBANK1
   562     00A0                     __pdataBANK1:
   563     00A0                     _CS:
   564     00A0                     	ds	64
   565                           
   566                           	psect	inittext
   567     0628                     init_ram:
   568     0628  00FE               	movwf	btemp
   569     0629                     initloop:
   570     0629  0012               	moviw fsr0++
   571     062A  001E               	movwi fsr1++
   572     062B  0BFE               	decfsz	btemp,f
   573     062C  2E29               	goto	initloop
   574     062D  3400               	retlw	0
   575                           
   576                           	psect	clrtext
   577     0622                     clear_ram0:	
   578                           ;	Called with FSR0 containing the base address, and
   579                           ;	WREG with the size to clear
   580                           
   581     0622  0064               	clrwdt	;clear the watchdog before getting into this loop
   582     0623                     clrloop0:
   583     0623  0180               	clrf	0	;clear RAM location pointed to by FSR
   584     0624  3101               	addfsr 0,1
   585     0625  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   586     0626  2E23               	goto	clrloop0	;have we reached the end yet?
   587     0627  3400               	retlw	0	;all done for this memory range, return
   588                           
   589                           	psect	cstackCOMMON
   590     0070                     __pcstackCOMMON:
   591     0070                     ?_wait_for_pwm_cycle_complete:
   592     0070                     ??_wait_for_pwm_cycle_complete:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_PWM:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_PWM:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Hardware_Init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_Hardware_Init:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Check_Input:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ??_Check_Input:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     PWM@Dbit:
   620                           
   621                           ; 8 bytes @ 0x1
   622     0071                     	ds	8
   623     0079                     PWM@i_199:
   624                           
   625                           ; 1 bytes @ 0x9
   626     0079                     	ds	1
   627     007A                     PWM@i:
   628                           
   629                           ; 1 bytes @ 0xA
   630     007A                     	ds	1
   631     007B                     PWM@num:
   632                           
   633                           ; 1 bytes @ 0xB
   634     007B                     	ds	1
   635     007C                     ??_main:
   636                           
   637                           ; 1 bytes @ 0xC
   638     007C                     	ds	1
   639     007D                     main@i:
   640                           
   641                           ; 1 bytes @ 0xD
   642     007D                     	ds	1
   643                           
   644                           	psect	maintext
   645     06FB                     __pmaintext:	
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 563 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  i               1   13[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  2  119[None  ] int 
   658 ;; Registers used:
   659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : B1F/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   665 ;;      Params:         0       0       0       0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0       0       0       0
   667 ;;      Temps:          1       0       0       0       0       0       0       0
   668 ;;      Totals:         2       0       0       0       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels required when called: 2
   671 ;; This function calls:
   672 ;;		_Check_Input
   673 ;;		_Hardware_Init
   674 ;;		_PWM
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     06FB                     _main:	
   681                           ;psect for function _main
   682                           
   683     06FB                     l1002:	
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;main.c: 564:   Hardware_Init();
   689     06FB  3186  2635  3186   	fcall	_Hardware_Init
   690     06FE                     l1004:
   691                           
   692                           ;main.c: 569:     Check_Input();
   693     06FE  3186  26B4  3186   	fcall	_Check_Input
   694                           
   695                           ;main.c: 572:     tx_Data[0] = 0xC8;
   696     0701  30C8               	movlw	200
   697     0702  0020               	movlb	0	; select bank0
   698     0703  00A0               	movwf	_tx_Data
   699                           
   700                           ;main.c: 573:     tx_Data[1] = 0x8B;
   701     0704  308B               	movlw	139
   702     0705  00A1               	movwf	_tx_Data+1
   703     0706                     l1006:
   704                           
   705                           ;main.c: 574:     tx_Data[2] = 0x00;
   706     0706  01A2               	clrf	_tx_Data+2
   707     0707                     l1008:
   708                           
   709                           ;main.c: 576:     tx_Data[3] = 0x00;
   710     0707  01A3               	clrf	_tx_Data+3
   711     0708                     l1010:
   712                           
   713                           ;main.c: 578:     tx_Data[4] = 0x00;
   714     0708  01A4               	clrf	_tx_Data+4
   715     0709                     l1012:
   716                           
   717                           ;main.c: 579:     tx_Data[5] = 0x00;
   718     0709  01A5               	clrf	_tx_Data+5
   719     070A                     l1014:
   720                           
   721                           ;main.c: 580:     tx_Data[6] = 0x00;
   722     070A  01A6               	clrf	_tx_Data+6
   723     070B                     l1016:
   724                           
   725                           ;main.c: 581:     tx_Data[7] = 0x00;
   726     070B  01A7               	clrf	_tx_Data+7
   727     070C                     l1018:
   728                           
   729                           ;main.c: 582:     tx_Data[8] = 0x00;
   730     070C  01A8               	clrf	_tx_Data+8
   731     070D                     l1020:
   732                           
   733                           ;main.c: 583:     tx_Data[9] = 0x00;
   734     070D  01A9               	clrf	_tx_Data+9
   735                           
   736                           ;main.c: 584:     tx_Data[10] = 0x04C;
   737     070E  304C               	movlw	76
   738     070F  00AA               	movwf	_tx_Data+10
   739                           
   740                           ;main.c: 586:     tx_Data[2] = D2.Byte;
   741     0710  0839               	movf	_D2,w
   742     0711  00A2               	movwf	_tx_Data+2
   743                           
   744                           ;main.c: 587:     tx_Data[3] = D3.Byte;
   745     0712  0838               	movf	_D3,w
   746     0713  00A3               	movwf	_tx_Data+3
   747     0714                     l1022:
   748                           
   749                           ;main.c: 589:     if((D3.turnLight_L==0)&&(D3.trunLight_R==0))
   750     0714  1AB8               	btfsc	_D3,5
   751     0715  2F17               	goto	u391
   752     0716  2F18               	goto	u390
   753     0717                     u391:
   754     0717  2F24               	goto	l1028
   755     0718                     u390:
   756     0718                     l1024:
   757     0718  1B38               	btfsc	_D3,6
   758     0719  2F1B               	goto	u401
   759     071A  2F1C               	goto	u400
   760     071B                     u401:
   761     071B  2F24               	goto	l1028
   762     071C                     u400:
   763     071C                     l1026:
   764                           
   765                           ;main.c: 590:     {;main.c: 591:       tx_Data[6] = D2.Byte;
   766     071C  0839               	movf	_D2,w
   767     071D  00A6               	movwf	_tx_Data+6
   768                           
   769                           ;main.c: 592:       tx_Data[7] = D2.Byte;
   770     071E  0839               	movf	_D2,w
   771     071F  00A7               	movwf	_tx_Data+7
   772                           
   773                           ;main.c: 593:       tx_Data[8] = D2.Byte;
   774     0720  0839               	movf	_D2,w
   775     0721  00A8               	movwf	_tx_Data+8
   776                           
   777                           ;main.c: 594:       tx_Data[9] = D2.Byte;
   778     0722  0839               	movf	_D2,w
   779     0723  00A9               	movwf	_tx_Data+9
   780     0724                     l1028:
   781                           
   782                           ;main.c: 597:     if (fException == 1) {
   783     0724  0336               	decf	_fException,w
   784     0725  1D03               	btfss	3,2
   785     0726  2F28               	goto	u411
   786     0727  2F29               	goto	u410
   787     0728                     u411:
   788     0728  2F2D               	goto	l1034
   789     0729                     u410:
   790     0729                     l1030:
   791                           
   792                           ;main.c: 598:       fException = 0;
   793     0729  01B6               	clrf	_fException
   794     072A                     l1032:
   795                           
   796                           ;main.c: 599:       tx_Data[10] = 0xD5;
   797     072A  30D5               	movlw	213
   798     072B  00AA               	movwf	_tx_Data+10
   799                           
   800                           ;main.c: 600:     } else {
   801     072C  2F33               	goto	l1036
   802     072D                     l1034:
   803                           
   804                           ;main.c: 601:       tx_Data[10] = CS[csFlag.Byte];
   805     072D  0837               	movf	_csFlag,w
   806     072E  3EA0               	addlw	(low (_CS| 0))& (0+255)
   807     072F  0086               	movwf	6
   808     0730  0187               	clrf	7
   809     0731  0801               	movf	1,w
   810     0732  00AA               	movwf	_tx_Data+10
   811     0733                     l1036:
   812                           
   813                           ;main.c: 605:     for (uint8_t i = 0; i < 11; i++) {
   814     0733  01FD               	clrf	main@i
   815     0734                     l1042:
   816                           
   817                           ;main.c: 606:       PWM(tx_Data[i]);
   818     0734  087D               	movf	main@i,w
   819     0735  3E20               	addlw	(low (_tx_Data| 0))& (0+255)
   820     0736  0086               	movwf	6
   821     0737  0187               	clrf	7
   822     0738  0801               	movf	1,w
   823     0739  3187  2753  3186   	fcall	_PWM
   824     073C                     l1044:
   825                           
   826                           ;main.c: 607:     }
   827     073C  3001               	movlw	1
   828     073D  00FC               	movwf	??_main
   829     073E  087C               	movf	??_main,w
   830     073F  07FD               	addwf	main@i,f
   831     0740                     l1046:
   832     0740  300B               	movlw	11
   833     0741  027D               	subwf	main@i,w
   834     0742  1C03               	skipc
   835     0743  2F45               	goto	u421
   836     0744  2F46               	goto	u420
   837     0745                     u421:
   838     0745  2F34               	goto	l1042
   839     0746                     u420:
   840     0746                     l1048:
   841                           
   842                           ;main.c: 609:     CCPR3L = 30;
   843     0746  301E               	movlw	30
   844     0747  0026               	movlb	6	; select bank6
   845     0748  0091               	movwf	17	;volatile
   846                           
   847                           ;main.c: 610:     _delay((unsigned long)((20)*(32000000/4000.0)));
   848     0749  30D0               	movlw	208
   849     074A  00FC               	movwf	??_main
   850     074B  30CA               	movlw	202
   851     074C                     u437:
   852     074C  0B89               	decfsz	9,f
   853     074D  2F4C               	goto	u437
   854     074E  0BFC               	decfsz	??_main,f
   855     074F  2F4C               	goto	u437
   856     0750  2EFE               	goto	l1004
   857     0751  3180  2802         	ljmp	start
   858     0753                     __end_of_main:
   859                           
   860                           	psect	text1
   861     0753                     __ptext1:	
   862 ;; *************** function _PWM *****************
   863 ;; Defined at:
   864 ;;		line 383 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  num             1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  num             1   11[COMMON] unsigned char 
   869 ;;  i               1    9[COMMON] unsigned char 
   870 ;;  i               1   10[COMMON] unsigned char 
   871 ;;  Dbit            8    1[COMMON] unsigned char [8]
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   881 ;;      Params:         0       0       0       0       0       0       0       0
   882 ;;      Locals:        11       0       0       0       0       0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0
   884 ;;      Totals:        12       0       0       0       0       0       0       0
   885 ;;Total ram usage:       12 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		_wait_for_pwm_cycle_complete
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895     0753                     _PWM:	
   896                           ;psect for function _PWM
   897                           
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _PWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   901                           ;PWM@num stored from wreg
   902     0753  00FB               	movwf	PWM@num
   903     0754                     l896:
   904                           
   905                           ;main.c: 384:   unsigned char Dbit[8] = {0};
   906     0754  3071               	movlw	low PWM@Dbit
   907     0755  0086               	movwf	6
   908     0756  3000               	movlw	high PWM@Dbit
   909     0757  0087               	movwf	7
   910     0758  3008               	movlw	8
   911     0759  00F0               	movwf	??_PWM
   912     075A  3000               	movlw	0
   913     075B                     u230:
   914     075B  001E               	movwi fsr1++
   915     075C  0BF0               	decfsz	??_PWM,f
   916     075D  2F5B               	goto	u230
   917     075E                     l898:
   918                           
   919                           ;main.c: 385:   Dbit[0] = (num >> 0) & 0x01;
   920     075E  087B               	movf	PWM@num,w
   921     075F  3901               	andlw	1
   922     0760  00F1               	movwf	PWM@Dbit
   923     0761                     l900:
   924                           
   925                           ;main.c: 386:   Dbit[1] = (num >> 1) & 0x01;
   926     0761  367B               	lsrf	PWM@num,w
   927     0762  3901               	andlw	1
   928     0763  00F2               	movwf	PWM@Dbit+1
   929     0764                     l902:
   930                           
   931                           ;main.c: 387:   Dbit[2] = (num >> 2) & 0x01;
   932     0764  087B               	movf	PWM@num,w
   933     0765  00F0               	movwf	??_PWM
   934     0766  3002               	movlw	2
   935     0767                     u245:
   936     0767  36F0               	lsrf	??_PWM,f
   937     0768  0B89               	decfsz	9,f
   938     0769  2F67               	goto	u245
   939     076A  0870               	movf	??_PWM,w
   940     076B  3901               	andlw	1
   941     076C  00F3               	movwf	PWM@Dbit+2
   942     076D                     l904:
   943                           
   944                           ;main.c: 388:   Dbit[3] = (num >> 3) & 0x01;
   945     076D  087B               	movf	PWM@num,w
   946     076E  00F0               	movwf	??_PWM
   947     076F  3003               	movlw	3
   948     0770                     u255:
   949     0770  36F0               	lsrf	??_PWM,f
   950     0771  0B89               	decfsz	9,f
   951     0772  2F70               	goto	u255
   952     0773  0870               	movf	??_PWM,w
   953     0774  3901               	andlw	1
   954     0775  00F4               	movwf	PWM@Dbit+3
   955     0776                     l906:
   956                           
   957                           ;main.c: 389:   Dbit[4] = (num >> 4) & 0x01;
   958     0776  087B               	movf	PWM@num,w
   959     0777  00F0               	movwf	??_PWM
   960     0778  3004               	movlw	4
   961     0779                     u265:
   962     0779  36F0               	lsrf	??_PWM,f
   963     077A  0B89               	decfsz	9,f
   964     077B  2F79               	goto	u265
   965     077C  0870               	movf	??_PWM,w
   966     077D  3901               	andlw	1
   967     077E  00F5               	movwf	PWM@Dbit+4
   968     077F                     l908:
   969                           
   970                           ;main.c: 390:   Dbit[5] = (num >> 5) & 0x01;
   971     077F  087B               	movf	PWM@num,w
   972     0780  00F0               	movwf	??_PWM
   973     0781  3005               	movlw	5
   974     0782                     u275:
   975     0782  36F0               	lsrf	??_PWM,f
   976     0783  0B89               	decfsz	9,f
   977     0784  2F82               	goto	u275
   978     0785  0870               	movf	??_PWM,w
   979     0786  3901               	andlw	1
   980     0787  00F6               	movwf	PWM@Dbit+5
   981     0788                     l910:
   982                           
   983                           ;main.c: 391:   Dbit[6] = (num >> 6) & 0x01;
   984     0788  087B               	movf	PWM@num,w
   985     0789  00F0               	movwf	??_PWM
   986     078A  3006               	movlw	6
   987     078B                     u285:
   988     078B  36F0               	lsrf	??_PWM,f
   989     078C  0B89               	decfsz	9,f
   990     078D  2F8B               	goto	u285
   991     078E  0870               	movf	??_PWM,w
   992     078F  3901               	andlw	1
   993     0790  00F7               	movwf	PWM@Dbit+6
   994     0791                     l912:
   995                           
   996                           ;main.c: 392:   Dbit[7] = (num >> 7) & 0x01;
   997     0791  087B               	movf	PWM@num,w
   998     0792  00F0               	movwf	??_PWM
   999     0793  3007               	movlw	7
  1000     0794                     u295:
  1001     0794  36F0               	lsrf	??_PWM,f
  1002     0795  0B89               	decfsz	9,f
  1003     0796  2F94               	goto	u295
  1004     0797  0870               	movf	??_PWM,w
  1005     0798  3901               	andlw	1
  1006     0799  00F8               	movwf	PWM@Dbit+7
  1007     079A                     l914:
  1008                           
  1009                           ;main.c: 393:   wait_for_pwm_cycle_complete();
  1010     079A  3186  262E  3187   	fcall	_wait_for_pwm_cycle_complete
  1011     079D                     l916:
  1012                           
  1013                           ;main.c: 394:   CCPR3L = 55;
  1014     079D  3037               	movlw	55
  1015     079E  0026               	movlb	6	; select bank6
  1016     079F  0091               	movwf	17	;volatile
  1017     07A0                     l918:
  1018                           
  1019                           ;main.c: 396:   for (uint8_t i = 0; i < 8; i++) {
  1020     07A0  01FA               	clrf	PWM@i
  1021     07A1                     l924:
  1022                           
  1023                           ;main.c: 397:     if (Dbit[i] == 1) {
  1024     07A1  087A               	movf	PWM@i,w
  1025     07A2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1026     07A3  0086               	movwf	6
  1027     07A4  0187               	clrf	7
  1028     07A5  0301               	decf	1,w
  1029     07A6  1D03               	btfss	3,2
  1030     07A7  2FA9               	goto	u301
  1031     07A8  2FAA               	goto	u300
  1032     07A9                     u301:
  1033     07A9  2FB1               	goto	l928
  1034     07AA                     u300:
  1035     07AA                     l926:
  1036                           
  1037                           ;main.c: 398:       Dbit[i] = 30;
  1038     07AA  087A               	movf	PWM@i,w
  1039     07AB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1040     07AC  0086               	movwf	6
  1041     07AD  0187               	clrf	7
  1042     07AE  301E               	movlw	30
  1043     07AF  0081               	movwf	1
  1044                           
  1045                           ;main.c: 399:     } else {
  1046     07B0  2FB7               	goto	l930
  1047     07B1                     l928:
  1048                           
  1049                           ;main.c: 400:       Dbit[i] = 55;
  1050     07B1  087A               	movf	PWM@i,w
  1051     07B2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1052     07B3  0086               	movwf	6
  1053     07B4  0187               	clrf	7
  1054     07B5  3037               	movlw	55
  1055     07B6  0081               	movwf	1
  1056     07B7                     l930:
  1057                           
  1058                           ;main.c: 402:     wait_for_pwm_cycle_complete();
  1059     07B7  3186  262E  3187   	fcall	_wait_for_pwm_cycle_complete
  1060     07BA                     l932:
  1061                           
  1062                           ;main.c: 403:     CCPR3L = Dbit[i];
  1063     07BA  087A               	movf	PWM@i,w
  1064     07BB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1065     07BC  0086               	movwf	6
  1066     07BD  0187               	clrf	7
  1067     07BE  0801               	movf	1,w
  1068     07BF  0026               	movlb	6	; select bank6
  1069     07C0  0091               	movwf	17	;volatile
  1070     07C1                     l934:
  1071                           
  1072                           ;main.c: 404:   }
  1073     07C1  3001               	movlw	1
  1074     07C2  00F0               	movwf	??_PWM
  1075     07C3  0870               	movf	??_PWM,w
  1076     07C4  07FA               	addwf	PWM@i,f
  1077     07C5                     l936:
  1078     07C5  3008               	movlw	8
  1079     07C6  027A               	subwf	PWM@i,w
  1080     07C7  1C03               	skipc
  1081     07C8  2FCA               	goto	u311
  1082     07C9  2FCB               	goto	u310
  1083     07CA                     u311:
  1084     07CA  2FA1               	goto	l924
  1085     07CB                     u310:
  1086     07CB                     l938:
  1087                           
  1088                           ;main.c: 406:   for (uint8_t i = 0; i < 8; i++) {
  1089     07CB  01F9               	clrf	PWM@i_199
  1090     07CC                     l944:
  1091                           
  1092                           ;main.c: 407:     wait_for_pwm_cycle_complete();
  1093     07CC  3186  262E  3187   	fcall	_wait_for_pwm_cycle_complete
  1094     07CF                     l946:
  1095                           
  1096                           ;main.c: 408:     CCPR3L = 30;
  1097     07CF  301E               	movlw	30
  1098     07D0  0026               	movlb	6	; select bank6
  1099     07D1  0091               	movwf	17	;volatile
  1100     07D2                     l948:
  1101                           
  1102                           ;main.c: 409:   }
  1103     07D2  3001               	movlw	1
  1104     07D3  00F0               	movwf	??_PWM
  1105     07D4  0870               	movf	??_PWM,w
  1106     07D5  07F9               	addwf	PWM@i_199,f
  1107     07D6                     l950:
  1108     07D6  3008               	movlw	8
  1109     07D7  0279               	subwf	PWM@i_199,w
  1110     07D8  1C03               	skipc
  1111     07D9  2FDB               	goto	u321
  1112     07DA  2FDC               	goto	u320
  1113     07DB                     u321:
  1114     07DB  2FCC               	goto	l944
  1115     07DC                     u320:
  1116     07DC                     l97:
  1117     07DC  0008               	return
  1118     07DD                     __end_of_PWM:
  1119                           
  1120                           	psect	text2
  1121     062E                     __ptext2:	
  1122 ;; *************** function _wait_for_pwm_cycle_complete *****************
  1123 ;; Defined at:
  1124 ;;		line 374 in file "main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		None
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1138 ;;      Params:         0       0       0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_PWM
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151     062E                     _wait_for_pwm_cycle_complete:	
  1152                           ;psect for function _wait_for_pwm_cycle_complete
  1153                           
  1154     062E                     l82:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _wait_for_pwm_cycle_complete: []
  1157                           ;main.c: 375:   while (1) {
  1158                           
  1159                           
  1160                           ;main.c: 376:     if (TMR2IF) {
  1161     062E  0020               	movlb	0	; select bank0
  1162     062F  1C91               	btfss	17,1	;volatile
  1163     0630  2E32               	goto	u221
  1164     0631  2E33               	goto	u220
  1165     0632                     u221:
  1166     0632  2E2E               	goto	l82
  1167     0633                     u220:
  1168     0633                     l894:
  1169                           
  1170                           ;main.c: 377:       TMR2IF = 0;
  1171     0633  1091               	bcf	17,1	;volatile
  1172     0634                     l86:	
  1173                           ;main.c: 378:       break;
  1174                           
  1175     0634  0008               	return
  1176     0635                     __end_of_wait_for_pwm_cycle_complete:
  1177                           
  1178                           	psect	text3
  1179     0635                     __ptext3:	
  1180 ;; *************** function _Hardware_Init *****************
  1181 ;; Defined at:
  1182 ;;		line 412 in file "main.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1196 ;;      Params:         0       0       0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0
  1198 ;;      Temps:          2       0       0       0       0       0       0       0
  1199 ;;      Totals:         2       0       0       0       0       0       0       0
  1200 ;;Total ram usage:        2 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     0635                     _Hardware_Init:	
  1210                           ;psect for function _Hardware_Init
  1211                           
  1212     0635                     l952:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _Hardware_Init: [wreg+status,2]
  1215                           
  1216                           
  1217                           ;main.c: 413:   OSCCON = 0b11110000;
  1218     0635  30F0               	movlw	240
  1219     0636  0021               	movlb	1	; select bank1
  1220     0637  0099               	movwf	25	;volatile
  1221                           
  1222                           ;main.c: 415:   OSCTUNE = 0b00111111;
  1223     0638  303F               	movlw	63
  1224     0639  0098               	movwf	24	;volatile
  1225     063A                     l954:
  1226                           
  1227                           ;main.c: 416:   ANSELA = 0b00000000;
  1228     063A  0023               	movlb	3	; select bank3
  1229     063B  018C               	clrf	12	;volatile
  1230     063C                     l956:
  1231                           
  1232                           ;main.c: 417:   PORTA = 0;
  1233     063C  0020               	movlb	0	; select bank0
  1234     063D  018C               	clrf	12	;volatile
  1235                           
  1236                           ;main.c: 418:   TRISA = 0b00011111;
  1237     063E  301F               	movlw	31
  1238     063F  0021               	movlb	1	; select bank1
  1239     0640  008C               	movwf	12	;volatile
  1240     0641                     l958:
  1241                           
  1242                           ;main.c: 419:   LATA = 0b00000000;
  1243     0641  0022               	movlb	2	; select bank2
  1244     0642  018C               	clrf	12	;volatile
  1245     0643                     l960:
  1246                           
  1247                           ;main.c: 420:   ANSELB = 0b00000000;
  1248     0643  0023               	movlb	3	; select bank3
  1249     0644  018D               	clrf	13	;volatile
  1250     0645                     l962:
  1251                           
  1252                           ;main.c: 421:   PORTB = 0;
  1253     0645  0020               	movlb	0	; select bank0
  1254     0646  018D               	clrf	13	;volatile
  1255     0647                     l964:
  1256                           
  1257                           ;main.c: 422:   TRISB = 0b00000000;
  1258     0647  0021               	movlb	1	; select bank1
  1259     0648  018D               	clrf	13	;volatile
  1260     0649                     l966:
  1261                           
  1262                           ;main.c: 423:   LATB = 0b00000000;
  1263     0649  0022               	movlb	2	; select bank2
  1264     064A  018D               	clrf	13	;volatile
  1265     064B                     l968:
  1266                           
  1267                           ;main.c: 424:   PORTC = 0;
  1268     064B  0020               	movlb	0	; select bank0
  1269     064C  018E               	clrf	14	;volatile
  1270                           
  1271                           ;main.c: 425:   TRISC = 0b10001010;
  1272     064D  308A               	movlw	138
  1273     064E  0021               	movlb	1	; select bank1
  1274     064F  008E               	movwf	14	;volatile
  1275     0650                     l970:
  1276                           
  1277                           ;main.c: 426:   LATC = 0b00000000;
  1278     0650  0022               	movlb	2	; select bank2
  1279     0651  018E               	clrf	14	;volatile
  1280     0652                     l972:
  1281                           
  1282                           ;main.c: 427:   PORTE = 0;
  1283     0652  0020               	movlb	0	; select bank0
  1284     0653  0190               	clrf	16	;volatile
  1285     0654                     l974:
  1286                           
  1287                           ;main.c: 428:   TRISE = 0b00000000;
  1288     0654  0021               	movlb	1	; select bank1
  1289     0655  0190               	clrf	16	;volatile
  1290     0656                     l976:
  1291                           
  1292                           ;main.c: 429:   LATE = 0b00000000;
  1293     0656  0022               	movlb	2	; select bank2
  1294     0657  0190               	clrf	16	;volatile
  1295                           
  1296                           ;main.c: 430:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1297     0658  3005               	movlw	5
  1298     0659  00F1               	movwf	??_Hardware_Init+1
  1299     065A  300F               	movlw	15
  1300     065B  00F0               	movwf	??_Hardware_Init
  1301     065C  30F1               	movlw	241
  1302     065D                     u447:
  1303     065D  0B89               	decfsz	9,f
  1304     065E  2E5D               	goto	u447
  1305     065F  0BF0               	decfsz	??_Hardware_Init,f
  1306     0660  2E5D               	goto	u447
  1307     0661  0BF1               	decfsz	??_Hardware_Init+1,f
  1308     0662  2E5D               	goto	u447
  1309     0663  0000               	nop
  1310                           
  1311                           ;main.c: 431:   CCP3CON = 0b00001100;
  1312     0664  300C               	movlw	12
  1313     0665  0026               	movlb	6	; select bank6
  1314     0666  0093               	movwf	19	;volatile
  1315     0667                     l978:
  1316                           
  1317                           ;main.c: 432:   CCP3SEL = 0;
  1318     0667  0022               	movlb	2	; select bank2
  1319     0668  131D               	bcf	29,6	;volatile
  1320                           
  1321                           ;main.c: 433:   PR2 = 103;
  1322     0669  3067               	movlw	103
  1323     066A  0020               	movlb	0	; select bank0
  1324     066B  009B               	movwf	27	;volatile
  1325                           
  1326                           ;main.c: 434:   CCPR3L = 30;
  1327     066C  301E               	movlw	30
  1328     066D  0026               	movlb	6	; select bank6
  1329     066E  0091               	movwf	17	;volatile
  1330     066F                     l980:
  1331                           
  1332                           ;main.c: 435:   TMR2ON = 1;
  1333     066F  0020               	movlb	0	; select bank0
  1334     0670  151C               	bsf	28,2	;volatile
  1335     0671                     l982:
  1336                           
  1337                           ;main.c: 436:   T2CKPS1 = 0;
  1338     0671  109C               	bcf	28,1	;volatile
  1339     0672                     l984:
  1340                           
  1341                           ;main.c: 437:   T2CKPS0 = 1;
  1342     0672  141C               	bsf	28,0	;volatile
  1343     0673                     l100:
  1344     0673  0008               	return
  1345     0674                     __end_of_Hardware_Init:
  1346                           
  1347                           	psect	text4
  1348     06B4                     __ptext4:	
  1349 ;; *************** function _Check_Input *****************
  1350 ;; Defined at:
  1351 ;;		line 440 in file "main.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1365 ;;      Params:         0       0       0       0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     06B4                     _Check_Input:	
  1379                           ;psect for function _Check_Input
  1380                           
  1381     06B4                     l986:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _Check_Input: [status,2]
  1384                           
  1385                           
  1386                           ;main.c: 442:   D2.Byte = 0;
  1387     06B4  0020               	movlb	0	; select bank0
  1388     06B5  01B9               	clrf	_D2
  1389                           
  1390                           ;main.c: 443:   D3.Byte = 0;
  1391     06B6  01B8               	clrf	_D3
  1392                           
  1393                           ;main.c: 444:   csFlag.Byte = 0;
  1394     06B7  01B7               	clrf	_csFlag
  1395     06B8                     l988:
  1396                           
  1397                           ;main.c: 447:   if (PORTAbits.RA0 == 0) {
  1398     06B8  180C               	btfsc	12,0	;volatile
  1399     06B9  2EBB               	goto	u331
  1400     06BA  2EBC               	goto	u330
  1401     06BB                     u331:
  1402     06BB  2EC0               	goto	l103
  1403     06BC                     u330:
  1404     06BC                     l990:
  1405                           
  1406                           ;main.c: 448:     PORTBbits.RB5 = 1;
  1407     06BC  168D               	bsf	13,5	;volatile
  1408                           
  1409                           ;main.c: 449:     D2.RunLight = 1;
  1410     06BD  1539               	bsf	_D2,2
  1411                           
  1412                           ;main.c: 450:     csFlag.RunLight = 1;
  1413     06BE  16B7               	bsf	_csFlag,5
  1414                           
  1415                           ;main.c: 451:   } else {
  1416     06BF  2EC3               	goto	l104
  1417     06C0                     l103:
  1418                           
  1419                           ;main.c: 452:     PORTBbits.RB5 = 0;
  1420     06C0  128D               	bcf	13,5	;volatile
  1421                           
  1422                           ;main.c: 453:     D2.RunLight = 0;
  1423     06C1  1139               	bcf	_D2,2
  1424                           
  1425                           ;main.c: 454:     csFlag.RunLight = 0;
  1426     06C2  12B7               	bcf	_csFlag,5
  1427     06C3                     l104:	
  1428                           ;main.c: 455:   }
  1429                           
  1430                           
  1431                           ;main.c: 458:   if (PORTAbits.RA1 == 0) {
  1432     06C3  188C               	btfsc	12,1	;volatile
  1433     06C4  2EC6               	goto	u341
  1434     06C5  2EC7               	goto	u340
  1435     06C6                     u341:
  1436     06C6  2ECB               	goto	l105
  1437     06C7                     u340:
  1438     06C7                     l992:
  1439                           
  1440                           ;main.c: 459:     PORTBbits.RB4 = 1;
  1441     06C7  160D               	bsf	13,4	;volatile
  1442                           
  1443                           ;main.c: 460:     D2.DRL = 1;
  1444     06C8  15B9               	bsf	_D2,3
  1445                           
  1446                           ;main.c: 461:     csFlag.DRL = 1;
  1447     06C9  1637               	bsf	_csFlag,4
  1448                           
  1449                           ;main.c: 462:   } else {
  1450     06CA  2ECE               	goto	l106
  1451     06CB                     l105:
  1452                           
  1453                           ;main.c: 463:     PORTBbits.RB4 = 0;
  1454     06CB  120D               	bcf	13,4	;volatile
  1455                           
  1456                           ;main.c: 464:     D2.DRL = 0;
  1457     06CC  11B9               	bcf	_D2,3
  1458                           
  1459                           ;main.c: 465:     csFlag.DRL = 0;
  1460     06CD  1237               	bcf	_csFlag,4
  1461     06CE                     l106:	
  1462                           ;main.c: 466:   }
  1463                           
  1464                           
  1465                           ;main.c: 469:   if (PORTAbits.RA2 == 0) {
  1466     06CE  190C               	btfsc	12,2	;volatile
  1467     06CF  2ED1               	goto	u351
  1468     06D0  2ED2               	goto	u350
  1469     06D1                     u351:
  1470     06D1  2ED6               	goto	l107
  1471     06D2                     u350:
  1472     06D2                     l994:
  1473                           
  1474                           ;main.c: 470:     PORTBbits.RB3 = 1;
  1475     06D2  158D               	bsf	13,3	;volatile
  1476                           
  1477                           ;main.c: 471:     D2.LoBeam = 1;
  1478     06D3  1639               	bsf	_D2,4
  1479                           
  1480                           ;main.c: 472:     csFlag.LoBeam = 1;
  1481     06D4  15B7               	bsf	_csFlag,3
  1482                           
  1483                           ;main.c: 473:   } else {
  1484     06D5  2ED9               	goto	l108
  1485     06D6                     l107:
  1486                           
  1487                           ;main.c: 474:     PORTBbits.RB3 = 0;
  1488     06D6  118D               	bcf	13,3	;volatile
  1489                           
  1490                           ;main.c: 475:     D2.LoBeam = 0;
  1491     06D7  1239               	bcf	_D2,4
  1492                           
  1493                           ;main.c: 476:     csFlag.LoBeam = 0;
  1494     06D8  11B7               	bcf	_csFlag,3
  1495     06D9                     l108:	
  1496                           ;main.c: 477:   }
  1497                           
  1498                           
  1499                           ;main.c: 480:   if (PORTAbits.RA3 == 0) {
  1500     06D9  198C               	btfsc	12,3	;volatile
  1501     06DA  2EDC               	goto	u361
  1502     06DB  2EDD               	goto	u360
  1503     06DC                     u361:
  1504     06DC  2EE1               	goto	l109
  1505     06DD                     u360:
  1506     06DD                     l996:
  1507                           
  1508                           ;main.c: 481:     PORTBbits.RB2 = 1;
  1509     06DD  150D               	bsf	13,2	;volatile
  1510                           
  1511                           ;main.c: 482:     D2.HiBeam = 1;
  1512     06DE  16B9               	bsf	_D2,5
  1513                           
  1514                           ;main.c: 483:     csFlag.HiBeam = 1;
  1515     06DF  1537               	bsf	_csFlag,2
  1516                           
  1517                           ;main.c: 484:   } else {
  1518     06E0  2EE4               	goto	l110
  1519     06E1                     l109:
  1520                           
  1521                           ;main.c: 485:     PORTBbits.RB2 = 0;
  1522     06E1  110D               	bcf	13,2	;volatile
  1523                           
  1524                           ;main.c: 486:     D2.HiBeam = 0;
  1525     06E2  12B9               	bcf	_D2,5
  1526                           
  1527                           ;main.c: 487:     csFlag.HiBeam = 0;
  1528     06E3  1137               	bcf	_csFlag,2
  1529     06E4                     l110:	
  1530                           ;main.c: 488:   }
  1531                           
  1532                           
  1533                           ;main.c: 491:   if (PORTAbits.RA4 == 0) {
  1534     06E4  1A0C               	btfsc	12,4	;volatile
  1535     06E5  2EE7               	goto	u371
  1536     06E6  2EE8               	goto	u370
  1537     06E7                     u371:
  1538     06E7  2EEC               	goto	l111
  1539     06E8                     u370:
  1540     06E8                     l998:
  1541                           
  1542                           ;main.c: 492:     PORTBbits.RB1 = 1;
  1543     06E8  148D               	bsf	13,1	;volatile
  1544                           
  1545                           ;main.c: 493:     D3.turnLight_L = 1;
  1546     06E9  16B8               	bsf	_D3,5
  1547                           
  1548                           ;main.c: 494:     csFlag.turnLight_L = 1;
  1549     06EA  14B7               	bsf	_csFlag,1
  1550                           
  1551                           ;main.c: 495:   } else {
  1552     06EB  2EEF               	goto	l112
  1553     06EC                     l111:
  1554                           
  1555                           ;main.c: 496:     PORTBbits.RB1 = 0;
  1556     06EC  108D               	bcf	13,1	;volatile
  1557                           
  1558                           ;main.c: 497:     D3.turnLight_L = 0;
  1559     06ED  12B8               	bcf	_D3,5
  1560                           
  1561                           ;main.c: 498:     csFlag.turnLight_L = 0;
  1562     06EE  10B7               	bcf	_csFlag,1
  1563     06EF                     l112:	
  1564                           ;main.c: 499:   }
  1565                           
  1566                           
  1567                           ;main.c: 502:   if (PORTCbits.RC3 == 0) {
  1568     06EF  198E               	btfsc	14,3	;volatile
  1569     06F0  2EF2               	goto	u381
  1570     06F1  2EF3               	goto	u380
  1571     06F2                     u381:
  1572     06F2  2EF7               	goto	l113
  1573     06F3                     u380:
  1574     06F3                     l1000:
  1575                           
  1576                           ;main.c: 503:     PORTBbits.RB0 = 1;
  1577     06F3  140D               	bsf	13,0	;volatile
  1578                           
  1579                           ;main.c: 504:     D3.trunLight_R = 1;
  1580     06F4  1738               	bsf	_D3,6
  1581                           
  1582                           ;main.c: 505:     csFlag.turnLight_R = 1;
  1583     06F5  1437               	bsf	_csFlag,0
  1584                           
  1585                           ;main.c: 506:   } else {
  1586     06F6  2EFA               	goto	l115
  1587     06F7                     l113:
  1588                           
  1589                           ;main.c: 507:     PORTBbits.RB0 = 0;
  1590     06F7  100D               	bcf	13,0	;volatile
  1591                           
  1592                           ;main.c: 508:     D3.trunLight_R = 0;
  1593     06F8  1338               	bcf	_D3,6
  1594                           
  1595                           ;main.c: 509:     csFlag.turnLight_R = 0;
  1596     06F9  1037               	bcf	_csFlag,0
  1597     06FA                     l115:
  1598     06FA  0008               	return
  1599     06FB                     __end_of_Check_Input:
  1600     007E                     btemp	set	126	;btemp
  1601     007E                     wtemp0	set	126
  1602                           
  1603                           	psect	config
  1604                           
  1605                           ;Config register CONFIG1 @ 0x8007
  1606                           ;	Oscillator Selection
  1607                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1608                           ;	Watchdog Timer Enable
  1609                           ;	WDTE = OFF, WDT disabled
  1610                           ;	Power-up Timer Enable
  1611                           ;	PWRTE = OFF, PWRT disabled
  1612                           ;	MCLR Pin Function Select
  1613                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1614                           ;	Flash Program Memory Code Protection
  1615                           ;	CP = OFF, Program memory code protection is disabled
  1616                           ;	Data Memory Code Protection
  1617                           ;	CPD = ON, Data memory code protection is enabled
  1618                           ;	Brown-out Reset Enable
  1619                           ;	BOREN = ON, Brown-out Reset enabled
  1620                           ;	Clock Out Enable
  1621                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1622                           ;	Internal/External Switchover
  1623                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1624                           ;	Fail-Safe Clock Monitor Enable
  1625                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1626     8007                     	org	32775
  1627     8007  0EA4               	dw	3748
  1628                           
  1629                           ;Config register CONFIG2 @ 0x8008
  1630                           ;	Flash Memory Self-Write Protection
  1631                           ;	WRT = OFF, Write protection off
  1632                           ;	Voltage Regulator Capacitor Enable
  1633                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  1634                           ;	PLL Enable
  1635                           ;	PLLEN = ON, 4x PLL enabled
  1636                           ;	Stack Overflow/Underflow Reset Enable
  1637                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1638                           ;	Brown-out Reset Voltage Selection
  1639                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1640                           ;	Low-Voltage Programming Enable
  1641                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1642     8008                     	org	32776
  1643     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         26
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      30
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     688
                                             12 COMMON     2     2      0
                        _Check_Input
                      _Hardware_Init
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 12    12      0     620
                                              0 COMMON    12    12      0
        _wait_for_pwm_cycle_complete
 ---------------------------------------------------------------------------------
 (2) _wait_for_pwm_cycle_complete                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Check_Input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Input
   _Hardware_Init
   _PWM
     _wait_for_pwm_cycle_complete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1E       6       37.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 30 14:59:46 2025

                                  _a 0034                                    _b 0033  
                                 _D2 0039                                   _D3 0038  
                                 l82 062E                                   _CS 00A0  
                                 l86 0634                                   l97 07DC  
                                l100 0673                                  l110 06E4  
                                l111 06EC                                  l103 06C0  
                                l112 06EF                                  l104 06C3  
                                l113 06F7                                  l105 06CB  
                                l106 06CE                                  l115 06FA  
                                l107 06D6                                  l108 06D9  
                                l109 06E1                                  l900 0761  
                                l910 0788                                  l902 0764  
                                l912 0791                                  l904 076D  
                                l930 07B7                                  l914 079A  
                                l906 0776                                  l932 07BA  
                                l924 07A1                                  l916 079D  
                                l908 077F                                  l950 07D6  
                                l934 07C1                                  l926 07AA  
                                l918 07A0                                  l960 0643  
                                l952 0635                                  l944 07CC  
                                l936 07C5                                  l928 07B1  
                                l970 0650                                  l962 0645  
                                l954 063A                                  l946 07CF  
                                l938 07CB                                  l980 066F  
                                l972 0652                                  l964 0647  
                                l956 063C                                  l948 07D2  
                                l990 06BC                                  l982 0671  
                                l974 0654                                  l966 0649  
                                l958 0641                                  l894 0633  
                                l992 06C7                                  l984 0672  
                                l976 0656                                  l968 064B  
                                l896 0754                                  l994 06D2  
                                l986 06B4                                  l978 0667  
                                l898 075E                                  l996 06DD  
                                l988 06B8                                  l998 06E8  
                                u220 0633                                  u300 07AA  
                                u221 0632                                  u301 07A9  
                                u310 07CB                                  u230 075B  
                                u311 07CA                                  u320 07DC  
                                u400 071C                                  u321 07DB  
                                u401 071B                                  u330 06BC  
                                u410 0729                                  u331 06BB  
                                u411 0728                                  u340 06C7  
                                u420 0746                                  u341 06C6  
                                u245 0767                                  u421 0745  
                                u350 06D2                                  _PR2 001B  
                                u351 06D1                                  u255 0770  
                                u360 06DD                                  u361 06DC  
                                u265 0779                                  u370 06E8  
                                u371 06E7                                  u275 0782  
                                u380 06F3                                  u381 06F2  
                                u285 078B                                  u437 074C  
                                u390 0718                                  u447 065D  
                                u295 0794                                  u391 0717  
                                _PWM 0753                                  wreg 0009  
__end_of_wait_for_pwm_cycle_complete 0635          _wait_for_pwm_cycle_complete 062E  
                               ?_PWM 0070                                 l1000 06F3  
                               l1010 0708                                 l1002 06FB  
                               l1020 070D                                 l1012 0709  
                               l1004 06FE                                 l1030 0729  
                               l1022 0714                                 l1014 070A  
                               l1006 0706                                 l1032 072A  
                               l1024 0718                                 l1016 070B  
                               l1008 0707                                 l1042 0734  
                               l1034 072D                                 l1026 071C  
                               l1018 070C                                 l1044 073C  
                               l1036 0733                                 l1028 0724  
                               l1046 0740                                 l1048 0746  
                               PWM@i 007A                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATE 0110                                 _main 06FB  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 start 0002  
                              ??_PWM 0070                          _Check_Input 06B4  
                              ?_main 0070                                _PORTA 000C  
                              _PORTB 000D                                _PORTC 000E  
                              _PORTE 0010                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISE 0090                                main@i 007D  
                              status 0003                                wtemp0 007E  
                    __initialization 07DD                         __end_of_main 0753  
                             ??_main 007C                               PWM@num 007B  
                             _CCPR3L 0311                               _ANSELA 018C  
                             _ANSELB 018D                               _OSCCON 0099  
                             _TMR2IF 0089                               _TMR2ON 00E2  
                             _data48 003A                               _csFlag 0037  
                         _fException 0036              __end_of__initialization 07FD  
              __end_of_Hardware_Init 0674                       __pcstackCOMMON 0070  
                       __pidataBANK0 061E                         __pidataBANK1 0674  
                         __pbssBANK0 0020                           __pmaintext 06FB  
                            PWM@Dbit 0071                              _CCP3CON 0313  
                       ?_Check_Input 0070                              _CCP3SEL 08EE  
                            _T2CKPS0 00E0                              _T2CKPS1 00E1  
                         _flamp_left 0035                              _OSCTUNE 0098  
                            __ptext1 0753                              __ptext2 062E  
                            __ptext3 0635                              __ptext4 06B4  
                            _tx_Data 0020                              clrloop0 0623  
               end_of_initialization 07FD                              init_ram 0628  
                            initloop 0629                            _PORTAbits 000C  
                          _PORTBbits 000D                            _PORTCbits 000E  
                start_initialization 07DD                          __end_of_PWM 07DD  
       ?_wait_for_pwm_cycle_complete 0070                          __pdataBANK0 003A  
                        __pdataBANK1 00A0                            ___latbits 0002  
      ??_wait_for_pwm_cycle_complete 0070                             PWM@F2776 002B  
                           PWM@i_199 0079                            clear_ram0 0622  
                      _Hardware_Init 0635                       ?_Hardware_Init 0070  
                      ??_Check_Input 0070                      ??_Hardware_Init 0070  
                __end_of_Check_Input 06FB  
