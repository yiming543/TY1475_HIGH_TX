

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 23 11:29:39 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1936 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0095                     	;# 
    93     0096                     	;# 
    94     0097                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     0110                     	;# 
   107     0111                     	;# 
   108     0112                     	;# 
   109     0113                     	;# 
   110     0114                     	;# 
   111     0115                     	;# 
   112     0116                     	;# 
   113     0117                     	;# 
   114     0118                     	;# 
   115     0119                     	;# 
   116     011A                     	;# 
   117     011B                     	;# 
   118     011D                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0191                     	;# 
   122     0191                     	;# 
   123     0192                     	;# 
   124     0193                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0199                     	;# 
   131     019A                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019D                     	;# 
   139     019E                     	;# 
   140     019F                     	;# 
   141     020D                     	;# 
   142     0210                     	;# 
   143     0211                     	;# 
   144     0212                     	;# 
   145     0213                     	;# 
   146     0214                     	;# 
   147     0215                     	;# 
   148     0215                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0291                     	;# 
   152     0291                     	;# 
   153     0292                     	;# 
   154     0293                     	;# 
   155     0294                     	;# 
   156     0295                     	;# 
   157     0295                     	;# 
   158     0296                     	;# 
   159     0298                     	;# 
   160     0298                     	;# 
   161     0299                     	;# 
   162     029A                     	;# 
   163     029B                     	;# 
   164     029C                     	;# 
   165     029C                     	;# 
   166     029D                     	;# 
   167     029E                     	;# 
   168     029F                     	;# 
   169     0311                     	;# 
   170     0311                     	;# 
   171     0312                     	;# 
   172     0313                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0315                     	;# 
   176     0316                     	;# 
   177     0318                     	;# 
   178     0318                     	;# 
   179     0319                     	;# 
   180     031A                     	;# 
   181     031C                     	;# 
   182     031C                     	;# 
   183     031D                     	;# 
   184     031E                     	;# 
   185     0394                     	;# 
   186     0395                     	;# 
   187     0396                     	;# 
   188     0415                     	;# 
   189     0416                     	;# 
   190     0417                     	;# 
   191     041C                     	;# 
   192     041D                     	;# 
   193     041E                     	;# 
   194     0791                     	;# 
   195     0792                     	;# 
   196     0793                     	;# 
   197     0794                     	;# 
   198     0795                     	;# 
   199     0798                     	;# 
   200     0799                     	;# 
   201     07A0                     	;# 
   202     07A1                     	;# 
   203     07A3                     	;# 
   204     07A4                     	;# 
   205     07A6                     	;# 
   206     07A7                     	;# 
   207     07A9                     	;# 
   208     07AA                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     010E                     	;# 
   271     0110                     	;# 
   272     0111                     	;# 
   273     0112                     	;# 
   274     0113                     	;# 
   275     0114                     	;# 
   276     0115                     	;# 
   277     0116                     	;# 
   278     0117                     	;# 
   279     0118                     	;# 
   280     0119                     	;# 
   281     011A                     	;# 
   282     011B                     	;# 
   283     011D                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020D                     	;# 
   307     0210                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0216                     	;# 
   315     0217                     	;# 
   316     0291                     	;# 
   317     0291                     	;# 
   318     0292                     	;# 
   319     0293                     	;# 
   320     0294                     	;# 
   321     0295                     	;# 
   322     0295                     	;# 
   323     0296                     	;# 
   324     0298                     	;# 
   325     0298                     	;# 
   326     0299                     	;# 
   327     029A                     	;# 
   328     029B                     	;# 
   329     029C                     	;# 
   330     029C                     	;# 
   331     029D                     	;# 
   332     029E                     	;# 
   333     029F                     	;# 
   334     0311                     	;# 
   335     0311                     	;# 
   336     0312                     	;# 
   337     0313                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0315                     	;# 
   341     0316                     	;# 
   342     0318                     	;# 
   343     0318                     	;# 
   344     0319                     	;# 
   345     031A                     	;# 
   346     031C                     	;# 
   347     031C                     	;# 
   348     031D                     	;# 
   349     031E                     	;# 
   350     0394                     	;# 
   351     0395                     	;# 
   352     0396                     	;# 
   353     0415                     	;# 
   354     0416                     	;# 
   355     0417                     	;# 
   356     041C                     	;# 
   357     041D                     	;# 
   358     041E                     	;# 
   359     0791                     	;# 
   360     0792                     	;# 
   361     0793                     	;# 
   362     0794                     	;# 
   363     0795                     	;# 
   364     0798                     	;# 
   365     0799                     	;# 
   366     07A0                     	;# 
   367     07A1                     	;# 
   368     07A3                     	;# 
   369     07A4                     	;# 
   370     07A6                     	;# 
   371     07A7                     	;# 
   372     07A9                     	;# 
   373     07AA                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     05F7                     __pidataBANK0:
   388                           
   389                           ;initializer for _data48
   390     05F7  3402               	retlw	2
   391     05F8  3400               	retlw	0
   392     05F9  3400               	retlw	0
   393     05FA  34B4               	retlw	180
   394                           
   395                           	psect	idataBANK1
   396     064D                     __pidataBANK1:
   397                           
   398                           ;initializer for _CS
   399     064D  344C               	retlw	76
   400     064E  349F               	retlw	159
   401     064F  34ED               	retlw	237
   402     0650  343E               	retlw	62
   403     0651  349A               	retlw	154
   404     0652  3400               	retlw	0
   405     0653  3400               	retlw	0
   406     0654  3400               	retlw	0
   407     0655  3427               	retlw	39
   408     0656  3400               	retlw	0
   409     0657  3400               	retlw	0
   410     0658  3400               	retlw	0
   411     0659  3473               	retlw	115
   412     065A  34A0               	retlw	160
   413     065B  34D2               	retlw	210
   414     065C  3401               	retlw	1
   415     065D  348E               	retlw	142
   416     065E  345D               	retlw	93
   417     065F  342F               	retlw	47
   418     0660  34FC               	retlw	252
   419     0661  3467               	retlw	103
   420     0662  3400               	retlw	0
   421     0663  3400               	retlw	0
   422     0664  3400               	retlw	0
   423     0665  34DA               	retlw	218
   424     0666  3400               	retlw	0
   425     0667  3400               	retlw	0
   426     0668  3400               	retlw	0
   427     0669  34B1               	retlw	177
   428     066A  3462               	retlw	98
   429     066B  3410               	retlw	16
   430     066C  34C3               	retlw	195
   431     066D  342D               	retlw	45
   432     066E  34FE               	retlw	254
   433     066F  348C               	retlw	140
   434     0670  345F               	retlw	95
   435     0671  342C               	retlw	44
   436     0672  3400               	retlw	0
   437     0673  3400               	retlw	0
   438     0674  3400               	retlw	0
   439     0675  3438               	retlw	56
   440     0676  34EB               	retlw	235
   441     0677  3499               	retlw	153
   442     0678  344A               	retlw	74
   443     0679  3412               	retlw	18
   444     067A  34C1               	retlw	193
   445     067B  34B3               	retlw	179
   446     067C  3460               	retlw	96
   447     067D  34EF               	retlw	239
   448     067E  343C               	retlw	60
   449     067F  344E               	retlw	78
   450     0680  349D               	retlw	157
   451     0681  34D1               	retlw	209
   452     0682  3400               	retlw	0
   453     0683  3400               	retlw	0
   454     0684  3400               	retlw	0
   455     0685  346C               	retlw	108
   456     0686  3400               	retlw	0
   457     0687  3400               	retlw	0
   458     0688  3400               	retlw	0
   459     0689  34D0               	retlw	208
   460     068A  3403               	retlw	3
   461     068B  3471               	retlw	113
   462     068C  34A2               	retlw	162
   463     000E                     _PORTCbits	set	14
   464     000D                     _PORTBbits	set	13
   465     000C                     _PORTAbits	set	12
   466     001B                     _PR2	set	27
   467     0010                     _PORTE	set	16
   468     000E                     _PORTC	set	14
   469     000D                     _PORTB	set	13
   470     000C                     _PORTA	set	12
   471     00E0                     _T2CKPS0	set	224
   472     00E1                     _T2CKPS1	set	225
   473     00E2                     _TMR2ON	set	226
   474     0089                     _TMR2IF	set	137
   475     0090                     _TRISE	set	144
   476     008E                     _TRISC	set	142
   477     008D                     _TRISB	set	141
   478     008C                     _TRISA	set	140
   479     0098                     _OSCTUNE	set	152
   480     0099                     _OSCCON	set	153
   481     0110                     _LATE	set	272
   482     010E                     _LATC	set	270
   483     010C                     _LATA	set	268
   484     010D                     _LATB	set	269
   485     08EE                     _CCP3SEL	set	2286
   486     018D                     _ANSELB	set	397
   487     018C                     _ANSELA	set	396
   488     0313                     _CCP3CON	set	787
   489     0311                     _CCPR3L	set	785
   490                           
   491                           	psect	cinit
   492     07DD                     start_initialization:	
   493                           ; #config settings
   494                           
   495     07DD                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK0
   498     07DD  30F7               	movlw	low __pidataBANK0
   499     07DE  0084               	movwf	4
   500     07DF  3085               	movlw	(high __pidataBANK0)| (0+128)
   501     07E0  0085               	movwf	5
   502     07E1  303A               	movlw	low __pdataBANK0
   503     07E2  0086               	movwf	6
   504     07E3  3000               	movlw	high __pdataBANK0
   505     07E4  0087               	movwf	7
   506     07E5  3004               	movlw	4
   507     07E6  3186  2601  3187   	fcall	init_ram
   508                           
   509                           ; Initialize objects allocated to BANK1
   510     07E9  304D               	movlw	low __pidataBANK1
   511     07EA  0084               	movwf	4
   512     07EB  3086               	movlw	(high __pidataBANK1)| (0+128)
   513     07EC  0085               	movwf	5
   514     07ED  30A0               	movlw	low __pdataBANK1
   515     07EE  0086               	movwf	6
   516     07EF  3000               	movlw	high __pdataBANK1
   517     07F0  0087               	movwf	7
   518     07F1  3040               	movlw	64
   519     07F2  3186  2601  3187   	fcall	init_ram
   520                           
   521                           ; Clear objects allocated to BANK0
   522     07F5  3020               	movlw	low __pbssBANK0
   523     07F6  0084               	movwf	4
   524     07F7  3000               	movlw	high __pbssBANK0
   525     07F8  0085               	movwf	5
   526     07F9  301A               	movlw	26
   527     07FA  3185  25FB  3187   	fcall	clear_ram0
   528     07FD                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531     07FD                     __end_of__initialization:
   532     07FD  0020               	movlb	0
   533     07FE  3186  2E8D         	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK0
   536     0020                     __pbssBANK0:
   537     0020                     _tx_Data:
   538     0020                     	ds	11
   539     002B                     PWM@F2776:
   540     002B                     	ds	8
   541     0033                     _b:
   542     0033                     	ds	1
   543     0034                     _a:
   544     0034                     	ds	1
   545     0035                     _flamp_left:
   546     0035                     	ds	1
   547     0036                     _fException:
   548     0036                     	ds	1
   549     0037                     _csFlag:
   550     0037                     	ds	1
   551     0038                     _D3:
   552     0038                     	ds	1
   553     0039                     _D2:
   554     0039                     	ds	1
   555                           
   556                           	psect	dataBANK0
   557     003A                     __pdataBANK0:
   558     003A                     _data48:
   559     003A                     	ds	4
   560                           
   561                           	psect	dataBANK1
   562     00A0                     __pdataBANK1:
   563     00A0                     _CS:
   564     00A0                     	ds	64
   565                           
   566                           	psect	inittext
   567     0601                     init_ram:
   568     0601  00FE               	movwf	btemp
   569     0602                     initloop:
   570     0602  0012               	moviw fsr0++
   571     0603  001E               	movwi fsr1++
   572     0604  0BFE               	decfsz	btemp,f
   573     0605  2E02               	goto	initloop
   574     0606  3400               	retlw	0
   575                           
   576                           	psect	clrtext
   577     05FB                     clear_ram0:	
   578                           ;	Called with FSR0 containing the base address, and
   579                           ;	WREG with the size to clear
   580                           
   581     05FB  0064               	clrwdt	;clear the watchdog before getting into this loop
   582     05FC                     clrloop0:
   583     05FC  0180               	clrf	0	;clear RAM location pointed to by FSR
   584     05FD  3101               	addfsr 0,1
   585     05FE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   586     05FF  2DFC               	goto	clrloop0	;have we reached the end yet?
   587     0600  3400               	retlw	0	;all done for this memory range, return
   588                           
   589                           	psect	cstackCOMMON
   590     0070                     __pcstackCOMMON:
   591     0070                     ?_wait_for_pwm_cycle_complete:
   592     0070                     ??_wait_for_pwm_cycle_complete:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_PWM:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_PWM:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Hardware_Init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_Hardware_Init:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Check_Input:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ??_Check_Input:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     PWM@Dbit:
   620                           
   621                           ; 8 bytes @ 0x1
   622     0071                     	ds	8
   623     0079                     PWM@i_199:
   624                           
   625                           ; 1 bytes @ 0x9
   626     0079                     	ds	1
   627     007A                     PWM@i:
   628                           
   629                           ; 1 bytes @ 0xA
   630     007A                     	ds	1
   631     007B                     PWM@num:
   632                           
   633                           ; 1 bytes @ 0xB
   634     007B                     	ds	1
   635     007C                     ??_main:
   636                           
   637                           ; 1 bytes @ 0xC
   638     007C                     	ds	1
   639     007D                     main@i:
   640                           
   641                           ; 1 bytes @ 0xD
   642     007D                     	ds	1
   643                           
   644                           	psect	maintext
   645     068D                     __pmaintext:	
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 548 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  i               1   13[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  2  125[None  ] int 
   658 ;; Registers used:
   659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : B1F/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   665 ;;      Params:         0       0       0       0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0       0       0       0
   667 ;;      Temps:          1       0       0       0       0       0       0       0
   668 ;;      Totals:         2       0       0       0       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels required when called: 2
   671 ;; This function calls:
   672 ;;		_Check_Input
   673 ;;		_Hardware_Init
   674 ;;		_PWM
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     068D                     _main:	
   681                           ;psect for function _main
   682                           
   683     068D                     l1077:	
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;main.c: 549:   Hardware_Init();
   689     068D  3186  260E  3186   	fcall	_Hardware_Init
   690     0690                     l1079:
   691                           
   692                           ;main.c: 550:   if (PORTCbits.RC3 == 0)
   693     0690  0020               	movlb	0	; select bank0
   694     0691  198E               	btfsc	14,3	;volatile
   695     0692  2E94               	goto	u461
   696     0693  2E95               	goto	u460
   697     0694                     u461:
   698     0694  2E97               	goto	l1083
   699     0695                     u460:
   700     0695                     l1081:
   701                           
   702                           ;main.c: 551:     flamp_left = 1;
   703     0695  01B5               	clrf	_flamp_left
   704     0696  0AB5               	incf	_flamp_left,f
   705     0697                     l1083:
   706                           
   707                           ;main.c: 554:     Check_Input();
   708     0697  3186  26EC  3186   	fcall	_Check_Input
   709     069A                     l1085:
   710                           
   711                           ;main.c: 557:     tx_Data[0] = 0xC8;
   712     069A  30C8               	movlw	200
   713     069B  0020               	movlb	0	; select bank0
   714     069C  00A0               	movwf	_tx_Data
   715     069D                     l1087:
   716                           
   717                           ;main.c: 558:     tx_Data[1] = 0x8B;
   718     069D  308B               	movlw	139
   719     069E  00A1               	movwf	_tx_Data+1
   720     069F                     l1089:
   721                           
   722                           ;main.c: 559:     tx_Data[2] = 0x00;
   723     069F  01A2               	clrf	_tx_Data+2
   724     06A0                     l1091:
   725                           
   726                           ;main.c: 561:     tx_Data[3] = 0x00;
   727     06A0  01A3               	clrf	_tx_Data+3
   728     06A1                     l1093:
   729                           
   730                           ;main.c: 563:     tx_Data[4] = 0x00;
   731     06A1  01A4               	clrf	_tx_Data+4
   732     06A2                     l1095:
   733                           
   734                           ;main.c: 564:     tx_Data[5] = 0x00;
   735     06A2  01A5               	clrf	_tx_Data+5
   736     06A3                     l1097:
   737                           
   738                           ;main.c: 565:     tx_Data[6] = 0x00;
   739     06A3  01A6               	clrf	_tx_Data+6
   740     06A4                     l1099:
   741                           
   742                           ;main.c: 566:     tx_Data[7] = 0x00;
   743     06A4  01A7               	clrf	_tx_Data+7
   744     06A5                     l1101:
   745                           
   746                           ;main.c: 567:     tx_Data[8] = 0x00;
   747     06A5  01A8               	clrf	_tx_Data+8
   748     06A6                     l1103:
   749                           
   750                           ;main.c: 568:     tx_Data[9] = 0x00;
   751     06A6  01A9               	clrf	_tx_Data+9
   752     06A7                     l1105:
   753                           
   754                           ;main.c: 569:     tx_Data[10] = 0x04C;
   755     06A7  304C               	movlw	76
   756     06A8  00AA               	movwf	_tx_Data+10
   757     06A9                     l1107:
   758                           
   759                           ;main.c: 571:     tx_Data[2] = D2.Byte;
   760     06A9  0839               	movf	_D2,w
   761     06AA  00A2               	movwf	_tx_Data+2
   762     06AB                     l1109:
   763                           
   764                           ;main.c: 572:     tx_Data[3] = D3.Byte;
   765     06AB  0838               	movf	_D3,w
   766     06AC  00A3               	movwf	_tx_Data+3
   767     06AD                     l1111:
   768                           
   769                           ;main.c: 574:     if((D3.turnLight_L==0)||(D3.trunLight_R==0))
   770     06AD  1EB8               	btfss	_D3,5
   771     06AE  2EB0               	goto	u471
   772     06AF  2EB1               	goto	u470
   773     06B0                     u471:
   774     06B0  2EB5               	goto	l1115
   775     06B1                     u470:
   776     06B1                     l1113:
   777     06B1  1B38               	btfsc	_D3,6
   778     06B2  2EB4               	goto	u481
   779     06B3  2EB5               	goto	u480
   780     06B4                     u481:
   781     06B4  2EBD               	goto	l1117
   782     06B5                     u480:
   783     06B5                     l1115:
   784                           
   785                           ;main.c: 575:     {;main.c: 576:       tx_Data[6] = D2.Byte;
   786     06B5  0839               	movf	_D2,w
   787     06B6  00A6               	movwf	_tx_Data+6
   788                           
   789                           ;main.c: 577:       tx_Data[7] = D2.Byte;
   790     06B7  0839               	movf	_D2,w
   791     06B8  00A7               	movwf	_tx_Data+7
   792                           
   793                           ;main.c: 578:       tx_Data[8] = D2.Byte;
   794     06B9  0839               	movf	_D2,w
   795     06BA  00A8               	movwf	_tx_Data+8
   796                           
   797                           ;main.c: 579:       tx_Data[9] = D2.Byte;
   798     06BB  0839               	movf	_D2,w
   799     06BC  00A9               	movwf	_tx_Data+9
   800     06BD                     l1117:
   801                           
   802                           ;main.c: 582:     if (fException == 1) {
   803     06BD  0336               	decf	_fException,w
   804     06BE  1D03               	btfss	3,2
   805     06BF  2EC1               	goto	u491
   806     06C0  2EC2               	goto	u490
   807     06C1                     u491:
   808     06C1  2EC6               	goto	l1123
   809     06C2                     u490:
   810     06C2                     l1119:
   811                           
   812                           ;main.c: 583:       fException = 0;
   813     06C2  01B6               	clrf	_fException
   814     06C3                     l1121:
   815                           
   816                           ;main.c: 584:       tx_Data[10] = 0xD5;
   817     06C3  30D5               	movlw	213
   818     06C4  00AA               	movwf	_tx_Data+10
   819                           
   820                           ;main.c: 585:     } else {
   821     06C5  2ECC               	goto	l1125
   822     06C6                     l1123:
   823                           
   824                           ;main.c: 586:       tx_Data[10] = CS[csFlag.Byte];
   825     06C6  0837               	movf	_csFlag,w
   826     06C7  3EA0               	addlw	(low (_CS| 0))& (0+255)
   827     06C8  0086               	movwf	6
   828     06C9  0187               	clrf	7
   829     06CA  0801               	movf	1,w
   830     06CB  00AA               	movwf	_tx_Data+10
   831     06CC                     l1125:
   832                           
   833                           ;main.c: 590:     for (uint8_t i = 0; i < 11; i++) {
   834     06CC  01FD               	clrf	main@i
   835     06CD                     l1131:
   836                           
   837                           ;main.c: 591:       PWM(tx_Data[i]);
   838     06CD  087D               	movf	main@i,w
   839     06CE  3E20               	addlw	(low (_tx_Data| 0))& (0+255)
   840     06CF  0086               	movwf	6
   841     06D0  0187               	clrf	7
   842     06D1  0801               	movf	1,w
   843     06D2  3187  2753  3186   	fcall	_PWM
   844     06D5                     l1133:
   845                           
   846                           ;main.c: 592:     }
   847     06D5  3001               	movlw	1
   848     06D6  00FC               	movwf	??_main
   849     06D7  087C               	movf	??_main,w
   850     06D8  07FD               	addwf	main@i,f
   851     06D9                     l1135:
   852     06D9  300B               	movlw	11
   853     06DA  027D               	subwf	main@i,w
   854     06DB  1C03               	skipc
   855     06DC  2EDE               	goto	u501
   856     06DD  2EDF               	goto	u500
   857     06DE                     u501:
   858     06DE  2ECD               	goto	l1131
   859     06DF                     u500:
   860     06DF                     l1137:
   861                           
   862                           ;main.c: 594:     CCPR3L = 30;
   863     06DF  301E               	movlw	30
   864     06E0  0026               	movlb	6	; select bank6
   865     06E1  0091               	movwf	17	;volatile
   866                           
   867                           ;main.c: 595:     _delay((unsigned long)((20)*(32000000/4000.0)));
   868     06E2  30D0               	movlw	208
   869     06E3  00FC               	movwf	??_main
   870     06E4  30CA               	movlw	202
   871     06E5                     u517:
   872     06E5  0B89               	decfsz	9,f
   873     06E6  2EE5               	goto	u517
   874     06E7  0BFC               	decfsz	??_main,f
   875     06E8  2EE5               	goto	u517
   876     06E9  2E97               	goto	l1083
   877     06EA  3180  2802         	ljmp	start
   878     06EC                     __end_of_main:
   879                           
   880                           	psect	text1
   881     0753                     __ptext1:	
   882 ;; *************** function _PWM *****************
   883 ;; Defined at:
   884 ;;		line 371 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  num             1    wreg     unsigned char 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  num             1   11[COMMON] unsigned char 
   889 ;;  i               1    9[COMMON] unsigned char 
   890 ;;  i               1   10[COMMON] unsigned char 
   891 ;;  Dbit            8    1[COMMON] unsigned char [8]
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   901 ;;      Params:         0       0       0       0       0       0       0       0
   902 ;;      Locals:        11       0       0       0       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0       0       0       0
   904 ;;      Totals:        12       0       0       0       0       0       0       0
   905 ;;Total ram usage:       12 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 1
   908 ;; This function calls:
   909 ;;		_wait_for_pwm_cycle_complete
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915     0753                     _PWM:	
   916                           ;psect for function _PWM
   917                           
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _PWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   921                           ;PWM@num stored from wreg
   922     0753  00FB               	movwf	PWM@num
   923     0754                     l945:
   924                           
   925                           ;main.c: 372:   unsigned char Dbit[8] = {0};
   926     0754  3071               	movlw	low PWM@Dbit
   927     0755  0086               	movwf	6
   928     0756  3000               	movlw	high PWM@Dbit
   929     0757  0087               	movwf	7
   930     0758  3008               	movlw	8
   931     0759  00F0               	movwf	??_PWM
   932     075A  3000               	movlw	0
   933     075B                     u270:
   934     075B  001E               	movwi fsr1++
   935     075C  0BF0               	decfsz	??_PWM,f
   936     075D  2F5B               	goto	u270
   937     075E                     l947:
   938                           
   939                           ;main.c: 373:   Dbit[0] = (num >> 0) & 0x01;
   940     075E  087B               	movf	PWM@num,w
   941     075F  3901               	andlw	1
   942     0760  00F1               	movwf	PWM@Dbit
   943     0761                     l949:
   944                           
   945                           ;main.c: 374:   Dbit[1] = (num >> 1) & 0x01;
   946     0761  367B               	lsrf	PWM@num,w
   947     0762  3901               	andlw	1
   948     0763  00F2               	movwf	PWM@Dbit+1
   949     0764                     l951:
   950                           
   951                           ;main.c: 375:   Dbit[2] = (num >> 2) & 0x01;
   952     0764  087B               	movf	PWM@num,w
   953     0765  00F0               	movwf	??_PWM
   954     0766  3002               	movlw	2
   955     0767                     u285:
   956     0767  36F0               	lsrf	??_PWM,f
   957     0768  0B89               	decfsz	9,f
   958     0769  2F67               	goto	u285
   959     076A  0870               	movf	??_PWM,w
   960     076B  3901               	andlw	1
   961     076C  00F3               	movwf	PWM@Dbit+2
   962     076D                     l953:
   963                           
   964                           ;main.c: 376:   Dbit[3] = (num >> 3) & 0x01;
   965     076D  087B               	movf	PWM@num,w
   966     076E  00F0               	movwf	??_PWM
   967     076F  3003               	movlw	3
   968     0770                     u295:
   969     0770  36F0               	lsrf	??_PWM,f
   970     0771  0B89               	decfsz	9,f
   971     0772  2F70               	goto	u295
   972     0773  0870               	movf	??_PWM,w
   973     0774  3901               	andlw	1
   974     0775  00F4               	movwf	PWM@Dbit+3
   975     0776                     l955:
   976                           
   977                           ;main.c: 377:   Dbit[4] = (num >> 4) & 0x01;
   978     0776  087B               	movf	PWM@num,w
   979     0777  00F0               	movwf	??_PWM
   980     0778  3004               	movlw	4
   981     0779                     u305:
   982     0779  36F0               	lsrf	??_PWM,f
   983     077A  0B89               	decfsz	9,f
   984     077B  2F79               	goto	u305
   985     077C  0870               	movf	??_PWM,w
   986     077D  3901               	andlw	1
   987     077E  00F5               	movwf	PWM@Dbit+4
   988     077F                     l957:
   989                           
   990                           ;main.c: 378:   Dbit[5] = (num >> 5) & 0x01;
   991     077F  087B               	movf	PWM@num,w
   992     0780  00F0               	movwf	??_PWM
   993     0781  3005               	movlw	5
   994     0782                     u315:
   995     0782  36F0               	lsrf	??_PWM,f
   996     0783  0B89               	decfsz	9,f
   997     0784  2F82               	goto	u315
   998     0785  0870               	movf	??_PWM,w
   999     0786  3901               	andlw	1
  1000     0787  00F6               	movwf	PWM@Dbit+5
  1001     0788                     l959:
  1002                           
  1003                           ;main.c: 379:   Dbit[6] = (num >> 6) & 0x01;
  1004     0788  087B               	movf	PWM@num,w
  1005     0789  00F0               	movwf	??_PWM
  1006     078A  3006               	movlw	6
  1007     078B                     u325:
  1008     078B  36F0               	lsrf	??_PWM,f
  1009     078C  0B89               	decfsz	9,f
  1010     078D  2F8B               	goto	u325
  1011     078E  0870               	movf	??_PWM,w
  1012     078F  3901               	andlw	1
  1013     0790  00F7               	movwf	PWM@Dbit+6
  1014     0791                     l961:
  1015                           
  1016                           ;main.c: 380:   Dbit[7] = (num >> 7) & 0x01;
  1017     0791  087B               	movf	PWM@num,w
  1018     0792  00F0               	movwf	??_PWM
  1019     0793  3007               	movlw	7
  1020     0794                     u335:
  1021     0794  36F0               	lsrf	??_PWM,f
  1022     0795  0B89               	decfsz	9,f
  1023     0796  2F94               	goto	u335
  1024     0797  0870               	movf	??_PWM,w
  1025     0798  3901               	andlw	1
  1026     0799  00F8               	movwf	PWM@Dbit+7
  1027     079A                     l963:
  1028                           
  1029                           ;main.c: 381:   wait_for_pwm_cycle_complete();
  1030     079A  3186  2607  3187   	fcall	_wait_for_pwm_cycle_complete
  1031     079D                     l965:
  1032                           
  1033                           ;main.c: 382:   CCPR3L = 55;
  1034     079D  3037               	movlw	55
  1035     079E  0026               	movlb	6	; select bank6
  1036     079F  0091               	movwf	17	;volatile
  1037     07A0                     l967:
  1038                           
  1039                           ;main.c: 384:   for (uint8_t i = 0; i < 8; i++) {
  1040     07A0  01FA               	clrf	PWM@i
  1041     07A1                     l973:
  1042                           
  1043                           ;main.c: 385:     if (Dbit[i] == 1) {
  1044     07A1  087A               	movf	PWM@i,w
  1045     07A2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1046     07A3  0086               	movwf	6
  1047     07A4  0187               	clrf	7
  1048     07A5  0301               	decf	1,w
  1049     07A6  1D03               	btfss	3,2
  1050     07A7  2FA9               	goto	u341
  1051     07A8  2FAA               	goto	u340
  1052     07A9                     u341:
  1053     07A9  2FB1               	goto	l977
  1054     07AA                     u340:
  1055     07AA                     l975:
  1056                           
  1057                           ;main.c: 386:       Dbit[i] = 30;
  1058     07AA  087A               	movf	PWM@i,w
  1059     07AB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1060     07AC  0086               	movwf	6
  1061     07AD  0187               	clrf	7
  1062     07AE  301E               	movlw	30
  1063     07AF  0081               	movwf	1
  1064                           
  1065                           ;main.c: 387:     } else {
  1066     07B0  2FB7               	goto	l979
  1067     07B1                     l977:
  1068                           
  1069                           ;main.c: 388:       Dbit[i] = 55;
  1070     07B1  087A               	movf	PWM@i,w
  1071     07B2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1072     07B3  0086               	movwf	6
  1073     07B4  0187               	clrf	7
  1074     07B5  3037               	movlw	55
  1075     07B6  0081               	movwf	1
  1076     07B7                     l979:
  1077                           
  1078                           ;main.c: 390:     wait_for_pwm_cycle_complete();
  1079     07B7  3186  2607  3187   	fcall	_wait_for_pwm_cycle_complete
  1080     07BA                     l981:
  1081                           
  1082                           ;main.c: 391:     CCPR3L = Dbit[i];
  1083     07BA  087A               	movf	PWM@i,w
  1084     07BB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1085     07BC  0086               	movwf	6
  1086     07BD  0187               	clrf	7
  1087     07BE  0801               	movf	1,w
  1088     07BF  0026               	movlb	6	; select bank6
  1089     07C0  0091               	movwf	17	;volatile
  1090     07C1                     l983:
  1091                           
  1092                           ;main.c: 392:   }
  1093     07C1  3001               	movlw	1
  1094     07C2  00F0               	movwf	??_PWM
  1095     07C3  0870               	movf	??_PWM,w
  1096     07C4  07FA               	addwf	PWM@i,f
  1097     07C5                     l985:
  1098     07C5  3008               	movlw	8
  1099     07C6  027A               	subwf	PWM@i,w
  1100     07C7  1C03               	skipc
  1101     07C8  2FCA               	goto	u351
  1102     07C9  2FCB               	goto	u350
  1103     07CA                     u351:
  1104     07CA  2FA1               	goto	l973
  1105     07CB                     u350:
  1106     07CB                     l987:
  1107                           
  1108                           ;main.c: 394:   for (uint8_t i = 0; i < 8; i++) {
  1109     07CB  01F9               	clrf	PWM@i_199
  1110     07CC                     l993:
  1111                           
  1112                           ;main.c: 395:     wait_for_pwm_cycle_complete();
  1113     07CC  3186  2607  3187   	fcall	_wait_for_pwm_cycle_complete
  1114     07CF                     l995:
  1115                           
  1116                           ;main.c: 396:     CCPR3L = 30;
  1117     07CF  301E               	movlw	30
  1118     07D0  0026               	movlb	6	; select bank6
  1119     07D1  0091               	movwf	17	;volatile
  1120     07D2                     l997:
  1121                           
  1122                           ;main.c: 397:   }
  1123     07D2  3001               	movlw	1
  1124     07D3  00F0               	movwf	??_PWM
  1125     07D4  0870               	movf	??_PWM,w
  1126     07D5  07F9               	addwf	PWM@i_199,f
  1127     07D6                     l999:
  1128     07D6  3008               	movlw	8
  1129     07D7  0279               	subwf	PWM@i_199,w
  1130     07D8  1C03               	skipc
  1131     07D9  2FDB               	goto	u361
  1132     07DA  2FDC               	goto	u360
  1133     07DB                     u361:
  1134     07DB  2FCC               	goto	l993
  1135     07DC                     u360:
  1136     07DC                     l97:
  1137     07DC  0008               	return
  1138     07DD                     __end_of_PWM:
  1139                           
  1140                           	psect	text2
  1141     0607                     __ptext2:	
  1142 ;; *************** function _wait_for_pwm_cycle_complete *****************
  1143 ;; Defined at:
  1144 ;;		line 362 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		None
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1158 ;;      Params:         0       0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_PWM
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171     0607                     _wait_for_pwm_cycle_complete:	
  1172                           ;psect for function _wait_for_pwm_cycle_complete
  1173                           
  1174     0607                     l82:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _wait_for_pwm_cycle_complete: []
  1177                           ;main.c: 363:   while (1) {
  1178                           
  1179                           
  1180                           ;main.c: 364:     if (TMR2IF) {
  1181     0607  0020               	movlb	0	; select bank0
  1182     0608  1C91               	btfss	17,1	;volatile
  1183     0609  2E0B               	goto	u261
  1184     060A  2E0C               	goto	u260
  1185     060B                     u261:
  1186     060B  2E07               	goto	l82
  1187     060C                     u260:
  1188     060C                     l943:
  1189                           
  1190                           ;main.c: 365:       TMR2IF = 0;
  1191     060C  1091               	bcf	17,1	;volatile
  1192     060D                     l86:	
  1193                           ;main.c: 366:       break;
  1194                           
  1195     060D  0008               	return
  1196     060E                     __end_of_wait_for_pwm_cycle_complete:
  1197                           
  1198                           	psect	text3
  1199     060E                     __ptext3:	
  1200 ;; *************** function _Hardware_Init *****************
  1201 ;; Defined at:
  1202 ;;		line 400 in file "main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1216 ;;      Params:         0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0
  1218 ;;      Temps:          2       0       0       0       0       0       0       0
  1219 ;;      Totals:         2       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        2 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229     060E                     _Hardware_Init:	
  1230                           ;psect for function _Hardware_Init
  1231                           
  1232     060E                     l1001:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _Hardware_Init: [wreg+status,2]
  1235                           
  1236                           
  1237                           ;main.c: 401:   OSCCON = 0b11110000;
  1238     060E  30F0               	movlw	240
  1239     060F  0021               	movlb	1	; select bank1
  1240     0610  0099               	movwf	25	;volatile
  1241                           
  1242                           ;main.c: 403:   OSCTUNE = 0b00111111;
  1243     0611  303F               	movlw	63
  1244     0612  0098               	movwf	24	;volatile
  1245     0613                     l1003:
  1246                           
  1247                           ;main.c: 404:   ANSELA = 0b00000000;
  1248     0613  0023               	movlb	3	; select bank3
  1249     0614  018C               	clrf	12	;volatile
  1250     0615                     l1005:
  1251                           
  1252                           ;main.c: 405:   PORTA = 0;
  1253     0615  0020               	movlb	0	; select bank0
  1254     0616  018C               	clrf	12	;volatile
  1255                           
  1256                           ;main.c: 406:   TRISA = 0b00011111;
  1257     0617  301F               	movlw	31
  1258     0618  0021               	movlb	1	; select bank1
  1259     0619  008C               	movwf	12	;volatile
  1260     061A                     l1007:
  1261                           
  1262                           ;main.c: 407:   LATA = 0b00000000;
  1263     061A  0022               	movlb	2	; select bank2
  1264     061B  018C               	clrf	12	;volatile
  1265     061C                     l1009:
  1266                           
  1267                           ;main.c: 408:   ANSELB = 0b00000000;
  1268     061C  0023               	movlb	3	; select bank3
  1269     061D  018D               	clrf	13	;volatile
  1270     061E                     l1011:
  1271                           
  1272                           ;main.c: 409:   PORTB = 0;
  1273     061E  0020               	movlb	0	; select bank0
  1274     061F  018D               	clrf	13	;volatile
  1275     0620                     l1013:
  1276                           
  1277                           ;main.c: 410:   TRISB = 0b00000000;
  1278     0620  0021               	movlb	1	; select bank1
  1279     0621  018D               	clrf	13	;volatile
  1280     0622                     l1015:
  1281                           
  1282                           ;main.c: 411:   LATB = 0b00000000;
  1283     0622  0022               	movlb	2	; select bank2
  1284     0623  018D               	clrf	13	;volatile
  1285     0624                     l1017:
  1286                           
  1287                           ;main.c: 412:   PORTC = 0;
  1288     0624  0020               	movlb	0	; select bank0
  1289     0625  018E               	clrf	14	;volatile
  1290                           
  1291                           ;main.c: 413:   TRISC = 0b10001010;
  1292     0626  308A               	movlw	138
  1293     0627  0021               	movlb	1	; select bank1
  1294     0628  008E               	movwf	14	;volatile
  1295     0629                     l1019:
  1296                           
  1297                           ;main.c: 414:   LATC = 0b00000000;
  1298     0629  0022               	movlb	2	; select bank2
  1299     062A  018E               	clrf	14	;volatile
  1300     062B                     l1021:
  1301                           
  1302                           ;main.c: 415:   PORTE = 0;
  1303     062B  0020               	movlb	0	; select bank0
  1304     062C  0190               	clrf	16	;volatile
  1305     062D                     l1023:
  1306                           
  1307                           ;main.c: 416:   TRISE = 0b00000000;
  1308     062D  0021               	movlb	1	; select bank1
  1309     062E  0190               	clrf	16	;volatile
  1310     062F                     l1025:
  1311                           
  1312                           ;main.c: 417:   LATE = 0b00000000;
  1313     062F  0022               	movlb	2	; select bank2
  1314     0630  0190               	clrf	16	;volatile
  1315                           
  1316                           ;main.c: 418:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1317     0631  3005               	movlw	5
  1318     0632  00F1               	movwf	??_Hardware_Init+1
  1319     0633  300F               	movlw	15
  1320     0634  00F0               	movwf	??_Hardware_Init
  1321     0635  30F1               	movlw	241
  1322     0636                     u527:
  1323     0636  0B89               	decfsz	9,f
  1324     0637  2E36               	goto	u527
  1325     0638  0BF0               	decfsz	??_Hardware_Init,f
  1326     0639  2E36               	goto	u527
  1327     063A  0BF1               	decfsz	??_Hardware_Init+1,f
  1328     063B  2E36               	goto	u527
  1329     063C  0000               	nop
  1330                           
  1331                           ;main.c: 419:   CCP3CON = 0b00001100;
  1332     063D  300C               	movlw	12
  1333     063E  0026               	movlb	6	; select bank6
  1334     063F  0093               	movwf	19	;volatile
  1335     0640                     l1027:
  1336                           
  1337                           ;main.c: 420:   CCP3SEL = 0;
  1338     0640  0022               	movlb	2	; select bank2
  1339     0641  131D               	bcf	29,6	;volatile
  1340                           
  1341                           ;main.c: 421:   PR2 = 103;
  1342     0642  3067               	movlw	103
  1343     0643  0020               	movlb	0	; select bank0
  1344     0644  009B               	movwf	27	;volatile
  1345                           
  1346                           ;main.c: 422:   CCPR3L = 30;
  1347     0645  301E               	movlw	30
  1348     0646  0026               	movlb	6	; select bank6
  1349     0647  0091               	movwf	17	;volatile
  1350     0648                     l1029:
  1351                           
  1352                           ;main.c: 423:   TMR2ON = 1;
  1353     0648  0020               	movlb	0	; select bank0
  1354     0649  151C               	bsf	28,2	;volatile
  1355     064A                     l1031:
  1356                           
  1357                           ;main.c: 424:   T2CKPS1 = 0;
  1358     064A  109C               	bcf	28,1	;volatile
  1359     064B                     l1033:
  1360                           
  1361                           ;main.c: 425:   T2CKPS0 = 1;
  1362     064B  141C               	bsf	28,0	;volatile
  1363     064C                     l100:
  1364     064C  0008               	return
  1365     064D                     __end_of_Hardware_Init:
  1366                           
  1367                           	psect	text4
  1368     06EC                     __ptext4:	
  1369 ;; *************** function _Check_Input *****************
  1370 ;; Defined at:
  1371 ;;		line 428 in file "main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1385 ;;      Params:         0       0       0       0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398     06EC                     _Check_Input:	
  1399                           ;psect for function _Check_Input
  1400                           
  1401     06EC                     l1035:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _Check_Input: [wreg+status,2+status,0]
  1404                           
  1405                           
  1406                           ;main.c: 430:   D2.Byte = 0;
  1407     06EC  0020               	movlb	0	; select bank0
  1408     06ED  01B9               	clrf	_D2
  1409                           
  1410                           ;main.c: 431:   D3.Byte = 0;
  1411     06EE  01B8               	clrf	_D3
  1412                           
  1413                           ;main.c: 432:   csFlag.Byte = 0;
  1414     06EF  01B7               	clrf	_csFlag
  1415     06F0                     l1037:
  1416                           
  1417                           ;main.c: 435:   if (PORTAbits.RA0 == 0) {
  1418     06F0  180C               	btfsc	12,0	;volatile
  1419     06F1  2EF3               	goto	u371
  1420     06F2  2EF4               	goto	u370
  1421     06F3                     u371:
  1422     06F3  2EF8               	goto	l103
  1423     06F4                     u370:
  1424     06F4                     l1039:
  1425                           
  1426                           ;main.c: 436:     PORTBbits.RB5 = 1;
  1427     06F4  168D               	bsf	13,5	;volatile
  1428                           
  1429                           ;main.c: 437:     D2.RunLight = 1;
  1430     06F5  1539               	bsf	_D2,2
  1431                           
  1432                           ;main.c: 438:     csFlag.RunLight = 1;
  1433     06F6  16B7               	bsf	_csFlag,5
  1434                           
  1435                           ;main.c: 439:   } else {
  1436     06F7  2EFB               	goto	l104
  1437     06F8                     l103:
  1438                           
  1439                           ;main.c: 440:     PORTBbits.RB5 = 0;
  1440     06F8  128D               	bcf	13,5	;volatile
  1441                           
  1442                           ;main.c: 441:     D2.RunLight = 0;
  1443     06F9  1139               	bcf	_D2,2
  1444                           
  1445                           ;main.c: 442:     csFlag.RunLight = 0;
  1446     06FA  12B7               	bcf	_csFlag,5
  1447     06FB                     l104:	
  1448                           ;main.c: 443:   }
  1449                           
  1450                           
  1451                           ;main.c: 446:   if (PORTAbits.RA1 == 0) {
  1452     06FB  188C               	btfsc	12,1	;volatile
  1453     06FC  2EFE               	goto	u381
  1454     06FD  2EFF               	goto	u380
  1455     06FE                     u381:
  1456     06FE  2F03               	goto	l105
  1457     06FF                     u380:
  1458     06FF                     l1041:
  1459                           
  1460                           ;main.c: 447:     PORTBbits.RB4 = 1;
  1461     06FF  160D               	bsf	13,4	;volatile
  1462                           
  1463                           ;main.c: 448:     D2.DRL = 1;
  1464     0700  15B9               	bsf	_D2,3
  1465                           
  1466                           ;main.c: 449:     csFlag.DRL = 1;
  1467     0701  1637               	bsf	_csFlag,4
  1468                           
  1469                           ;main.c: 450:   } else {
  1470     0702  2F06               	goto	l106
  1471     0703                     l105:
  1472                           
  1473                           ;main.c: 451:     PORTBbits.RB4 = 0;
  1474     0703  120D               	bcf	13,4	;volatile
  1475                           
  1476                           ;main.c: 452:     D2.DRL = 0;
  1477     0704  11B9               	bcf	_D2,3
  1478                           
  1479                           ;main.c: 453:     csFlag.DRL = 0;
  1480     0705  1237               	bcf	_csFlag,4
  1481     0706                     l106:	
  1482                           ;main.c: 454:   }
  1483                           
  1484                           
  1485                           ;main.c: 457:   if (PORTAbits.RA2 == 0) {
  1486     0706  190C               	btfsc	12,2	;volatile
  1487     0707  2F09               	goto	u391
  1488     0708  2F0A               	goto	u390
  1489     0709                     u391:
  1490     0709  2F0E               	goto	l107
  1491     070A                     u390:
  1492     070A                     l1043:
  1493                           
  1494                           ;main.c: 458:     PORTBbits.RB3 = 1;
  1495     070A  158D               	bsf	13,3	;volatile
  1496                           
  1497                           ;main.c: 459:     D2.LoBeam = 1;
  1498     070B  1639               	bsf	_D2,4
  1499                           
  1500                           ;main.c: 460:     csFlag.LoBeam = 1;
  1501     070C  15B7               	bsf	_csFlag,3
  1502                           
  1503                           ;main.c: 461:   } else {
  1504     070D  2F11               	goto	l108
  1505     070E                     l107:
  1506                           
  1507                           ;main.c: 462:     PORTBbits.RB3 = 0;
  1508     070E  118D               	bcf	13,3	;volatile
  1509                           
  1510                           ;main.c: 463:     D2.LoBeam = 0;
  1511     070F  1239               	bcf	_D2,4
  1512                           
  1513                           ;main.c: 464:     csFlag.LoBeam = 0;
  1514     0710  11B7               	bcf	_csFlag,3
  1515     0711                     l108:	
  1516                           ;main.c: 465:   }
  1517                           
  1518                           
  1519                           ;main.c: 468:   if (PORTAbits.RA3 == 0) {
  1520     0711  198C               	btfsc	12,3	;volatile
  1521     0712  2F14               	goto	u401
  1522     0713  2F15               	goto	u400
  1523     0714                     u401:
  1524     0714  2F19               	goto	l109
  1525     0715                     u400:
  1526     0715                     l1045:
  1527                           
  1528                           ;main.c: 469:     PORTBbits.RB2 = 1;
  1529     0715  150D               	bsf	13,2	;volatile
  1530                           
  1531                           ;main.c: 470:     D2.HiBeam = 1;
  1532     0716  16B9               	bsf	_D2,5
  1533                           
  1534                           ;main.c: 471:     csFlag.HiBeam = 1;
  1535     0717  1537               	bsf	_csFlag,2
  1536                           
  1537                           ;main.c: 472:   } else {
  1538     0718  2F1C               	goto	l1047
  1539     0719                     l109:
  1540                           
  1541                           ;main.c: 473:     PORTBbits.RB2 = 0;
  1542     0719  110D               	bcf	13,2	;volatile
  1543                           
  1544                           ;main.c: 474:     D2.HiBeam = 0;
  1545     071A  12B9               	bcf	_D2,5
  1546                           
  1547                           ;main.c: 475:     csFlag.HiBeam = 0;
  1548     071B  1137               	bcf	_csFlag,2
  1549     071C                     l1047:
  1550                           
  1551                           ;main.c: 478:   if (flamp_left == 1) {
  1552     071C  0335               	decf	_flamp_left,w
  1553     071D  1D03               	btfss	3,2
  1554     071E  2F20               	goto	u411
  1555     071F  2F21               	goto	u410
  1556     0720                     u411:
  1557     0720  2F3A               	goto	l111
  1558     0721                     u410:
  1559     0721                     l1049:
  1560                           
  1561                           ;main.c: 480:     if (PORTAbits.RA4 == 0) {
  1562     0721  1A0C               	btfsc	12,4	;volatile
  1563     0722  2F24               	goto	u421
  1564     0723  2F25               	goto	u420
  1565     0724                     u421:
  1566     0724  2F29               	goto	l112
  1567     0725                     u420:
  1568     0725                     l1051:
  1569                           
  1570                           ;main.c: 481:       PORTBbits.RB1 = 1;
  1571     0725  148D               	bsf	13,1	;volatile
  1572                           
  1573                           ;main.c: 482:       D3.turnLight_L = 1;
  1574     0726  16B8               	bsf	_D3,5
  1575                           
  1576                           ;main.c: 483:       csFlag.turnLight_L = 1;
  1577     0727  14B7               	bsf	_csFlag,1
  1578                           
  1579                           ;main.c: 484:     } else {
  1580     0728  2F2C               	goto	l113
  1581     0729                     l112:
  1582                           
  1583                           ;main.c: 485:       PORTBbits.RB1 = 0;
  1584     0729  108D               	bcf	13,1	;volatile
  1585                           
  1586                           ;main.c: 486:       D3.turnLight_L = 0;
  1587     072A  12B8               	bcf	_D3,5
  1588                           
  1589                           ;main.c: 487:       csFlag.turnLight_L = 0;
  1590     072B  10B7               	bcf	_csFlag,1
  1591     072C                     l113:	
  1592                           ;main.c: 488:     }
  1593                           
  1594                           
  1595                           ;main.c: 491:     if (PORTCbits.RC3 == 0) {
  1596     072C  198E               	btfsc	14,3	;volatile
  1597     072D  2F2F               	goto	u431
  1598     072E  2F30               	goto	u430
  1599     072F                     u431:
  1600     072F  2F37               	goto	l114
  1601     0730                     u430:
  1602     0730                     l1053:
  1603                           
  1604                           ;main.c: 492:       PORTBbits.RB0 = 1;
  1605     0730  140D               	bsf	13,0	;volatile
  1606     0731                     l1055:
  1607                           
  1608                           ;main.c: 493:       D2.Byte = 6;
  1609     0731  3006               	movlw	6
  1610     0732  00B9               	movwf	_D2
  1611     0733                     l1057:
  1612                           
  1613                           ;main.c: 494:       D3.Byte = 0;
  1614     0733  01B8               	clrf	_D3
  1615     0734                     l1059:
  1616                           
  1617                           ;main.c: 495:       fException = 1;
  1618     0734  01B6               	clrf	_fException
  1619     0735  0AB6               	incf	_fException,f
  1620                           
  1621                           ;main.c: 496:     } else {
  1622     0736  2F52               	goto	l121
  1623     0737                     l114:
  1624                           
  1625                           ;main.c: 497:       PORTBbits.RB0 = 0;
  1626     0737  100D               	bcf	13,0	;volatile
  1627     0738                     l1061:
  1628                           
  1629                           ;main.c: 498:       fException = 0;
  1630     0738  01B6               	clrf	_fException
  1631     0739  2F52               	goto	l121
  1632     073A                     l111:
  1633                           
  1634                           ;main.c: 502:     if (PORTAbits.RA4 == 0) {
  1635     073A  1A0C               	btfsc	12,4	;volatile
  1636     073B  2F3D               	goto	u441
  1637     073C  2F3E               	goto	u440
  1638     073D                     u441:
  1639     073D  2F45               	goto	l117
  1640     073E                     u440:
  1641     073E                     l1063:
  1642                           
  1643                           ;main.c: 503:       PORTBbits.RB1 = 1;
  1644     073E  148D               	bsf	13,1	;volatile
  1645     073F                     l1065:
  1646                           
  1647                           ;main.c: 504:       D2.Byte = 6;
  1648     073F  3006               	movlw	6
  1649     0740  00B9               	movwf	_D2
  1650     0741                     l1067:
  1651                           
  1652                           ;main.c: 505:       D3.Byte = 0;
  1653     0741  01B8               	clrf	_D3
  1654     0742                     l1069:
  1655                           
  1656                           ;main.c: 506:       fException = 1;
  1657     0742  01B6               	clrf	_fException
  1658     0743  0AB6               	incf	_fException,f
  1659                           
  1660                           ;main.c: 507:     } else {
  1661     0744  2F47               	goto	l1073
  1662     0745                     l117:
  1663                           
  1664                           ;main.c: 508:       PORTBbits.RB1 = 0;
  1665     0745  108D               	bcf	13,1	;volatile
  1666     0746                     l1071:
  1667                           
  1668                           ;main.c: 509:       fException = 0;
  1669     0746  01B6               	clrf	_fException
  1670     0747                     l1073:
  1671                           
  1672                           ;main.c: 513:     if (PORTCbits.RC3 == 0) {
  1673     0747  198E               	btfsc	14,3	;volatile
  1674     0748  2F4A               	goto	u451
  1675     0749  2F4B               	goto	u450
  1676     074A                     u451:
  1677     074A  2F4F               	goto	l119
  1678     074B                     u450:
  1679     074B                     l1075:
  1680                           
  1681                           ;main.c: 514:       PORTBbits.RB0 = 1;
  1682     074B  140D               	bsf	13,0	;volatile
  1683                           
  1684                           ;main.c: 515:       D3.trunLight_R = 1;
  1685     074C  1738               	bsf	_D3,6
  1686                           
  1687                           ;main.c: 516:       csFlag.turnLight_R = 1;
  1688     074D  1437               	bsf	_csFlag,0
  1689                           
  1690                           ;main.c: 517:     } else {
  1691     074E  2F52               	goto	l121
  1692     074F                     l119:
  1693                           
  1694                           ;main.c: 518:       PORTBbits.RB0 = 0;
  1695     074F  100D               	bcf	13,0	;volatile
  1696                           
  1697                           ;main.c: 519:       D3.trunLight_R = 0;
  1698     0750  1338               	bcf	_D3,6
  1699                           
  1700                           ;main.c: 520:       csFlag.turnLight_R = 0;
  1701     0751  1037               	bcf	_csFlag,0
  1702     0752                     l121:
  1703     0752  0008               	return
  1704     0753                     __end_of_Check_Input:
  1705     007E                     btemp	set	126	;btemp
  1706     007E                     wtemp0	set	126
  1707                           
  1708                           	psect	config
  1709                           
  1710                           ;Config register CONFIG1 @ 0x8007
  1711                           ;	Oscillator Selection
  1712                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1713                           ;	Watchdog Timer Enable
  1714                           ;	WDTE = OFF, WDT disabled
  1715                           ;	Power-up Timer Enable
  1716                           ;	PWRTE = OFF, PWRT disabled
  1717                           ;	MCLR Pin Function Select
  1718                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1719                           ;	Flash Program Memory Code Protection
  1720                           ;	CP = OFF, Program memory code protection is disabled
  1721                           ;	Data Memory Code Protection
  1722                           ;	CPD = ON, Data memory code protection is enabled
  1723                           ;	Brown-out Reset Enable
  1724                           ;	BOREN = ON, Brown-out Reset enabled
  1725                           ;	Clock Out Enable
  1726                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1727                           ;	Internal/External Switchover
  1728                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1729                           ;	Fail-Safe Clock Monitor Enable
  1730                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1731     8007                     	org	32775
  1732     8007  0EA4               	dw	3748
  1733                           
  1734                           ;Config register CONFIG2 @ 0x8008
  1735                           ;	Flash Memory Self-Write Protection
  1736                           ;	WRT = OFF, Write protection off
  1737                           ;	Voltage Regulator Capacitor Enable
  1738                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  1739                           ;	PLL Enable
  1740                           ;	PLLEN = ON, 4x PLL enabled
  1741                           ;	Stack Overflow/Underflow Reset Enable
  1742                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1743                           ;	Brown-out Reset Voltage Selection
  1744                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1745                           ;	Low-Voltage Programming Enable
  1746                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1747     8008                     	org	32776
  1748     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         26
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      30
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     688
                                             12 COMMON     2     2      0
                        _Check_Input
                      _Hardware_Init
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 12    12      0     620
                                              0 COMMON    12    12      0
        _wait_for_pwm_cycle_complete
 ---------------------------------------------------------------------------------
 (2) _wait_for_pwm_cycle_complete                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Check_Input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Input
   _Hardware_Init
   _PWM
     _wait_for_pwm_cycle_complete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1E       6       37.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 23 11:29:39 2025

                                  _a 0034                                    _b 0033  
                                 _D2 0039                                   _D3 0038  
                                 l82 0607                                   _CS 00A0  
                                 l86 060D                                   l97 07DC  
                                l100 064C                                  l111 073A  
                                l103 06F8                                  l112 0729  
                                l104 06FB                                  l121 0752  
                                l113 072C                                  l105 0703  
                                l114 0737                                  l106 0706  
                                l107 070E                                  l108 0711  
                                l117 0745                                  l109 0719  
                                l119 074F                                  l943 060C  
                                l951 0764                                  l961 0791  
                                l953 076D                                  l945 0754  
                                l963 079A                                  l955 0776  
                                l947 075E                                  l981 07BA  
                                l973 07A1                                  l965 079D  
                                l957 077F                                  l949 0761  
                                l983 07C1                                  l975 07AA  
                                l967 07A0                                  l959 0788  
                                l993 07CC                                  l985 07C5  
                                l977 07B1                                  l995 07CF  
                                l987 07CB                                  l979 07B7  
                                l997 07D2                                  l999 07D6  
                                u400 0715                                  u401 0714  
                                u305 0779                                  u410 0721  
                                u411 0720                                  u315 0782  
                                u420 0725                                  u260 060C  
                                u340 07AA                                  u500 06DF  
                                u421 0724                                  u261 060B  
                                u341 07A9                                  u325 078B  
                                u501 06DE                                  u430 0730  
                                u350 07CB                                  u270 075B  
                                _PR2 001B                                  u431 072F  
                                u351 07CA                                  u335 0794  
                                u440 073E                                  u360 07DC  
                                u441 073D                                  u361 07DB  
                                u450 074B                                  u370 06F4  
                                u451 074A                                  u371 06F3  
                                u380 06FF                                  u460 0695  
                                u381 06FE                                  u285 0767  
                                u517 06E5                                  u461 0694  
                                u390 070A                                  u470 06B1  
                                u391 0709                                  u527 0636  
                                u295 0770                                  u471 06B0  
                                u480 06B5                                  u481 06B4  
                                u490 06C2                                  u491 06C1  
                                _PWM 0753                                  wreg 0009  
__end_of_wait_for_pwm_cycle_complete 060E          _wait_for_pwm_cycle_complete 0607  
                               ?_PWM 0070                                 l1001 060E  
                               l1011 061E                                 l1003 0613  
                               l1021 062B                                 l1013 0620  
                               l1005 0615                                 l1101 06A5  
                               l1031 064A                                 l1023 062D  
                               l1015 0622                                 l1007 061A  
                               l1111 06AD                                 l1103 06A6  
                               l1041 06FF                                 l1033 064B  
                               l1025 062F                                 l1017 0624  
                               l1009 061C                                 l1121 06C3  
                               l1113 06B1                                 l1105 06A7  
                               l1051 0725                                 l1043 070A  
                               l1035 06EC                                 l1027 0640  
                               l1019 0629                                 l1131 06CD  
                               l1123 06C6                                 l1115 06B5  
                               l1107 06A9                                 l1061 0738  
                               l1053 0730                                 l1045 0715  
                               l1037 06F0                                 l1029 0648  
                               l1133 06D5                                 l1125 06CC  
                               l1117 06BD                                 l1109 06AB  
                               l1071 0746                                 l1063 073E  
                               l1055 0731                                 l1047 071C  
                               l1039 06F4                                 l1135 06D9  
                               l1119 06C2                                 l1073 0747  
                               l1065 073F                                 l1057 0733  
                               l1049 0721                                 l1137 06DF  
                               l1081 0695                                 l1075 074B  
                               l1067 0741                                 l1059 0734  
                               l1091 06A0                                 l1083 0697  
                               l1069 0742                                 l1093 06A1  
                               l1085 069A                                 l1077 068D  
                               l1095 06A2                                 l1087 069D  
                               l1079 0690                                 l1097 06A3  
                               l1089 069F                                 l1099 06A4  
                               PWM@i 007A                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATE 0110                                 _main 068D  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 start 0002  
                              ??_PWM 0070                          _Check_Input 06EC  
                              ?_main 0070                                _PORTA 000C  
                              _PORTB 000D                                _PORTC 000E  
                              _PORTE 0010                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISE 0090                                main@i 007D  
                              status 0003                                wtemp0 007E  
                    __initialization 07DD                         __end_of_main 06EC  
                             ??_main 007C                               PWM@num 007B  
                             _CCPR3L 0311                               _ANSELA 018C  
                             _ANSELB 018D                               _OSCCON 0099  
                             _TMR2IF 0089                               _TMR2ON 00E2  
                             _data48 003A                               _csFlag 0037  
                         _fException 0036              __end_of__initialization 07FD  
              __end_of_Hardware_Init 064D                       __pcstackCOMMON 0070  
                       __pidataBANK0 05F7                         __pidataBANK1 064D  
                         __pbssBANK0 0020                           __pmaintext 068D  
                            PWM@Dbit 0071                              _CCP3CON 0313  
                       ?_Check_Input 0070                              _CCP3SEL 08EE  
                            _T2CKPS0 00E0                              _T2CKPS1 00E1  
                         _flamp_left 0035                              _OSCTUNE 0098  
                            __ptext1 0753                              __ptext2 0607  
                            __ptext3 060E                              __ptext4 06EC  
                            _tx_Data 0020                              clrloop0 05FC  
               end_of_initialization 07FD                              init_ram 0601  
                            initloop 0602                            _PORTAbits 000C  
                          _PORTBbits 000D                            _PORTCbits 000E  
                start_initialization 07DD                          __end_of_PWM 07DD  
       ?_wait_for_pwm_cycle_complete 0070                          __pdataBANK0 003A  
                        __pdataBANK1 00A0                            ___latbits 0002  
      ??_wait_for_pwm_cycle_complete 0070                             PWM@F2776 002B  
                           PWM@i_199 0079                            clear_ram0 05FB  
                      _Hardware_Init 060E                       ?_Hardware_Init 0070  
                      ??_Check_Input 0070                      ??_Hardware_Init 0070  
                __end_of_Check_Input 0753  
