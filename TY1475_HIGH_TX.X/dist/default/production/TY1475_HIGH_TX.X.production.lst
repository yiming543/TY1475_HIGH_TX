

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 06 14:23:32 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1936 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0095                     	;# 
    93     0096                     	;# 
    94     0097                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     0110                     	;# 
   107     0111                     	;# 
   108     0112                     	;# 
   109     0113                     	;# 
   110     0114                     	;# 
   111     0115                     	;# 
   112     0116                     	;# 
   113     0117                     	;# 
   114     0118                     	;# 
   115     0119                     	;# 
   116     011A                     	;# 
   117     011B                     	;# 
   118     011D                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0191                     	;# 
   122     0191                     	;# 
   123     0192                     	;# 
   124     0193                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0199                     	;# 
   131     019A                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019D                     	;# 
   139     019E                     	;# 
   140     019F                     	;# 
   141     020D                     	;# 
   142     0210                     	;# 
   143     0211                     	;# 
   144     0212                     	;# 
   145     0213                     	;# 
   146     0214                     	;# 
   147     0215                     	;# 
   148     0215                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0291                     	;# 
   152     0291                     	;# 
   153     0292                     	;# 
   154     0293                     	;# 
   155     0294                     	;# 
   156     0295                     	;# 
   157     0295                     	;# 
   158     0296                     	;# 
   159     0298                     	;# 
   160     0298                     	;# 
   161     0299                     	;# 
   162     029A                     	;# 
   163     029B                     	;# 
   164     029C                     	;# 
   165     029C                     	;# 
   166     029D                     	;# 
   167     029E                     	;# 
   168     029F                     	;# 
   169     0311                     	;# 
   170     0311                     	;# 
   171     0312                     	;# 
   172     0313                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0315                     	;# 
   176     0316                     	;# 
   177     0318                     	;# 
   178     0318                     	;# 
   179     0319                     	;# 
   180     031A                     	;# 
   181     031C                     	;# 
   182     031C                     	;# 
   183     031D                     	;# 
   184     031E                     	;# 
   185     0394                     	;# 
   186     0395                     	;# 
   187     0396                     	;# 
   188     0415                     	;# 
   189     0416                     	;# 
   190     0417                     	;# 
   191     041C                     	;# 
   192     041D                     	;# 
   193     041E                     	;# 
   194     0791                     	;# 
   195     0792                     	;# 
   196     0793                     	;# 
   197     0794                     	;# 
   198     0795                     	;# 
   199     0798                     	;# 
   200     0799                     	;# 
   201     07A0                     	;# 
   202     07A1                     	;# 
   203     07A3                     	;# 
   204     07A4                     	;# 
   205     07A6                     	;# 
   206     07A7                     	;# 
   207     07A9                     	;# 
   208     07AA                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     010E                     	;# 
   271     0110                     	;# 
   272     0111                     	;# 
   273     0112                     	;# 
   274     0113                     	;# 
   275     0114                     	;# 
   276     0115                     	;# 
   277     0116                     	;# 
   278     0117                     	;# 
   279     0118                     	;# 
   280     0119                     	;# 
   281     011A                     	;# 
   282     011B                     	;# 
   283     011D                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020D                     	;# 
   307     0210                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0216                     	;# 
   315     0217                     	;# 
   316     0291                     	;# 
   317     0291                     	;# 
   318     0292                     	;# 
   319     0293                     	;# 
   320     0294                     	;# 
   321     0295                     	;# 
   322     0295                     	;# 
   323     0296                     	;# 
   324     0298                     	;# 
   325     0298                     	;# 
   326     0299                     	;# 
   327     029A                     	;# 
   328     029B                     	;# 
   329     029C                     	;# 
   330     029C                     	;# 
   331     029D                     	;# 
   332     029E                     	;# 
   333     029F                     	;# 
   334     0311                     	;# 
   335     0311                     	;# 
   336     0312                     	;# 
   337     0313                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0315                     	;# 
   341     0316                     	;# 
   342     0318                     	;# 
   343     0318                     	;# 
   344     0319                     	;# 
   345     031A                     	;# 
   346     031C                     	;# 
   347     031C                     	;# 
   348     031D                     	;# 
   349     031E                     	;# 
   350     0394                     	;# 
   351     0395                     	;# 
   352     0396                     	;# 
   353     0415                     	;# 
   354     0416                     	;# 
   355     0417                     	;# 
   356     041C                     	;# 
   357     041D                     	;# 
   358     041E                     	;# 
   359     0791                     	;# 
   360     0792                     	;# 
   361     0793                     	;# 
   362     0794                     	;# 
   363     0795                     	;# 
   364     0798                     	;# 
   365     0799                     	;# 
   366     07A0                     	;# 
   367     07A1                     	;# 
   368     07A3                     	;# 
   369     07A4                     	;# 
   370     07A6                     	;# 
   371     07A7                     	;# 
   372     07A9                     	;# 
   373     07AA                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     062E                     __pidataBANK0:
   388                           
   389                           ;initializer for _data48
   390     062E  3402               	retlw	2
   391     062F  3400               	retlw	0
   392     0630  3400               	retlw	0
   393     0631  34B4               	retlw	180
   394                           
   395                           	psect	idataBANK1
   396     0684                     __pidataBANK1:
   397                           
   398                           ;initializer for _CS
   399     0684  344C               	retlw	76
   400     0685  349F               	retlw	159
   401     0686  34ED               	retlw	237
   402     0687  3462               	retlw	98
   403     0688  349A               	retlw	154
   404     0689  3400               	retlw	0
   405     068A  3400               	retlw	0
   406     068B  3400               	retlw	0
   407     068C  3427               	retlw	39
   408     068D  3400               	retlw	0
   409     068E  3400               	retlw	0
   410     068F  3400               	retlw	0
   411     0690  3473               	retlw	115
   412     0691  34A0               	retlw	160
   413     0692  3471               	retlw	113
   414     0693  3401               	retlw	1
   415     0694  348E               	retlw	142
   416     0695  345D               	retlw	93
   417     0696  342F               	retlw	47
   418     0697  34FC               	retlw	252
   419     0698  3467               	retlw	103
   420     0699  3400               	retlw	0
   421     069A  3400               	retlw	0
   422     069B  3400               	retlw	0
   423     069C  34DA               	retlw	218
   424     069D  3400               	retlw	0
   425     069E  3400               	retlw	0
   426     069F  3400               	retlw	0
   427     06A0  34B1               	retlw	177
   428     06A1  34A0               	retlw	160
   429     06A2  3471               	retlw	113
   430     06A3  3401               	retlw	1
   431     06A4  342D               	retlw	45
   432     06A5  34FE               	retlw	254
   433     06A6  348C               	retlw	140
   434     06A7  345F               	retlw	95
   435     06A8  342C               	retlw	44
   436     06A9  3400               	retlw	0
   437     06AA  3400               	retlw	0
   438     06AB  3400               	retlw	0
   439     06AC  3438               	retlw	56
   440     06AD  34EB               	retlw	235
   441     06AE  3499               	retlw	153
   442     06AF  344A               	retlw	74
   443     06B0  3412               	retlw	18
   444     06B1  34C1               	retlw	193
   445     06B2  34B3               	retlw	179
   446     06B3  3460               	retlw	96
   447     06B4  34EF               	retlw	239
   448     06B5  343C               	retlw	60
   449     06B6  344E               	retlw	78
   450     06B7  349D               	retlw	157
   451     06B8  34D1               	retlw	209
   452     06B9  3400               	retlw	0
   453     06BA  3400               	retlw	0
   454     06BB  3400               	retlw	0
   455     06BC  346C               	retlw	108
   456     06BD  3400               	retlw	0
   457     06BE  3400               	retlw	0
   458     06BF  3400               	retlw	0
   459     06C0  34D0               	retlw	208
   460     06C1  3403               	retlw	3
   461     06C2  3471               	retlw	113
   462     06C3  34A2               	retlw	162
   463     000E                     _PORTCbits	set	14
   464     000D                     _PORTBbits	set	13
   465     000C                     _PORTAbits	set	12
   466     001B                     _PR2	set	27
   467     0010                     _PORTE	set	16
   468     000E                     _PORTC	set	14
   469     000D                     _PORTB	set	13
   470     000C                     _PORTA	set	12
   471     00E0                     _T2CKPS0	set	224
   472     00E1                     _T2CKPS1	set	225
   473     00E2                     _TMR2ON	set	226
   474     0089                     _TMR2IF	set	137
   475     0090                     _TRISE	set	144
   476     008E                     _TRISC	set	142
   477     008D                     _TRISB	set	141
   478     008C                     _TRISA	set	140
   479     0098                     _OSCTUNE	set	152
   480     0099                     _OSCCON	set	153
   481     0110                     _LATE	set	272
   482     010E                     _LATC	set	270
   483     010C                     _LATA	set	268
   484     010D                     _LATB	set	269
   485     08EE                     _CCP3SEL	set	2286
   486     018D                     _ANSELB	set	397
   487     018C                     _ANSELA	set	396
   488     0313                     _CCP3CON	set	787
   489     0311                     _CCPR3L	set	785
   490                           
   491                           	psect	cinit
   492     07DD                     start_initialization:	
   493                           ; #config settings
   494                           
   495     07DD                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK0
   498     07DD  302E               	movlw	low __pidataBANK0
   499     07DE  0084               	movwf	4
   500     07DF  3086               	movlw	(high __pidataBANK0)| (0+128)
   501     07E0  0085               	movwf	5
   502     07E1  3039               	movlw	low __pdataBANK0
   503     07E2  0086               	movwf	6
   504     07E3  3000               	movlw	high __pdataBANK0
   505     07E4  0087               	movwf	7
   506     07E5  3004               	movlw	4
   507     07E6  3186  2638  3187   	fcall	init_ram
   508                           
   509                           ; Initialize objects allocated to BANK1
   510     07E9  3084               	movlw	low __pidataBANK1
   511     07EA  0084               	movwf	4
   512     07EB  3086               	movlw	(high __pidataBANK1)| (0+128)
   513     07EC  0085               	movwf	5
   514     07ED  30A0               	movlw	low __pdataBANK1
   515     07EE  0086               	movwf	6
   516     07EF  3000               	movlw	high __pdataBANK1
   517     07F0  0087               	movwf	7
   518     07F1  3040               	movlw	64
   519     07F2  3186  2638  3187   	fcall	init_ram
   520                           
   521                           ; Clear objects allocated to BANK0
   522     07F5  3020               	movlw	low __pbssBANK0
   523     07F6  0084               	movwf	4
   524     07F7  3000               	movlw	high __pbssBANK0
   525     07F8  0085               	movwf	5
   526     07F9  3019               	movlw	25
   527     07FA  3186  2632  3187   	fcall	clear_ram0
   528     07FD                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531     07FD                     __end_of__initialization:
   532     07FD  0020               	movlb	0
   533     07FE  3187  2F0B         	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK0
   536     0020                     __pbssBANK0:
   537     0020                     _tx_Data:
   538     0020                     	ds	11
   539     002B                     PWM@F2775:
   540     002B                     	ds	8
   541     0033                     _b:
   542     0033                     	ds	1
   543     0034                     _a:
   544     0034                     	ds	1
   545     0035                     _fException:
   546     0035                     	ds	1
   547     0036                     _csFlag:
   548     0036                     	ds	1
   549     0037                     _D3:
   550     0037                     	ds	1
   551     0038                     _D2:
   552     0038                     	ds	1
   553                           
   554                           	psect	dataBANK0
   555     0039                     __pdataBANK0:
   556     0039                     _data48:
   557     0039                     	ds	4
   558                           
   559                           	psect	dataBANK1
   560     00A0                     __pdataBANK1:
   561     00A0                     _CS:
   562     00A0                     	ds	64
   563                           
   564                           	psect	inittext
   565     0638                     init_ram:
   566     0638  00FE               	movwf	btemp
   567     0639                     initloop:
   568     0639  0012               	moviw fsr0++
   569     063A  001E               	movwi fsr1++
   570     063B  0BFE               	decfsz	btemp,f
   571     063C  2E39               	goto	initloop
   572     063D  3400               	retlw	0
   573                           
   574                           	psect	clrtext
   575     0632                     clear_ram0:	
   576                           ;	Called with FSR0 containing the base address, and
   577                           ;	WREG with the size to clear
   578                           
   579     0632  0064               	clrwdt	;clear the watchdog before getting into this loop
   580     0633                     clrloop0:
   581     0633  0180               	clrf	0	;clear RAM location pointed to by FSR
   582     0634  3101               	addfsr 0,1
   583     0635  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   584     0636  2E33               	goto	clrloop0	;have we reached the end yet?
   585     0637  3400               	retlw	0	;all done for this memory range, return
   586                           
   587                           	psect	cstackCOMMON
   588     0070                     __pcstackCOMMON:
   589     0070                     ?_wait_for_pwm_cycle_complete:
   590     0070                     ??_wait_for_pwm_cycle_complete:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_PWM:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ??_PWM:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_Hardware_Init:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ??_Hardware_Init:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?_Check_Input:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ??_Check_Input:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614                           
   615                           ; 2 bytes @ 0x0
   616     0070                     	ds	1
   617     0071                     PWM@Dbit:
   618                           
   619                           ; 8 bytes @ 0x1
   620     0071                     	ds	8
   621     0079                     PWM@i_198:
   622                           
   623                           ; 1 bytes @ 0x9
   624     0079                     	ds	1
   625     007A                     PWM@i:
   626                           
   627                           ; 1 bytes @ 0xA
   628     007A                     	ds	1
   629     007B                     PWM@num:
   630                           
   631                           ; 1 bytes @ 0xB
   632     007B                     	ds	1
   633     007C                     ??_main:
   634                           
   635                           ; 1 bytes @ 0xC
   636     007C                     	ds	1
   637     007D                     main@i:
   638                           
   639                           ; 1 bytes @ 0xD
   640     007D                     	ds	1
   641                           
   642                           	psect	maintext
   643     070B                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 503 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  i               1   13[COMMON] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  2  117[None  ] int 
   656 ;; Registers used:
   657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : B1F/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   663 ;;      Params:         0       0       0       0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0
   665 ;;      Temps:          1       0       0       0       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels required when called: 2
   669 ;; This function calls:
   670 ;;		_Check_Input
   671 ;;		_Hardware_Init
   672 ;;		_PWM
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     070B                     _main:	
   679                           ;psect for function _main
   680                           
   681     070B                     l993:	
   682                           ;incstack = 0
   683                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   684                           
   685                           
   686                           ;main.c: 504:   Hardware_Init();
   687     070B  3186  2645  3187   	fcall	_Hardware_Init
   688     070E                     l995:
   689                           
   690                           ;main.c: 506:     Check_Input();
   691     070E  3186  26C4  3187   	fcall	_Check_Input
   692                           
   693                           ;main.c: 509:     tx_Data[0] = 0xC8;
   694     0711  30C8               	movlw	200
   695     0712  0020               	movlb	0	; select bank0
   696     0713  00A0               	movwf	_tx_Data
   697                           
   698                           ;main.c: 510:     tx_Data[1] = 0x8B;
   699     0714  308B               	movlw	139
   700     0715  00A1               	movwf	_tx_Data+1
   701     0716                     l997:
   702                           
   703                           ;main.c: 511:     tx_Data[2] = 0x00;
   704     0716  01A2               	clrf	_tx_Data+2
   705     0717                     l999:
   706                           
   707                           ;main.c: 513:     tx_Data[3] = 0x00;
   708     0717  01A3               	clrf	_tx_Data+3
   709     0718                     l1001:
   710                           
   711                           ;main.c: 515:     tx_Data[4] = 0x00;
   712     0718  01A4               	clrf	_tx_Data+4
   713     0719                     l1003:
   714                           
   715                           ;main.c: 516:     tx_Data[5] = 0x00;
   716     0719  01A5               	clrf	_tx_Data+5
   717     071A                     l1005:
   718                           
   719                           ;main.c: 517:     tx_Data[6] = 0x00;
   720     071A  01A6               	clrf	_tx_Data+6
   721     071B                     l1007:
   722                           
   723                           ;main.c: 518:     tx_Data[7] = 0x00;
   724     071B  01A7               	clrf	_tx_Data+7
   725     071C                     l1009:
   726                           
   727                           ;main.c: 519:     tx_Data[8] = 0x00;
   728     071C  01A8               	clrf	_tx_Data+8
   729     071D                     l1011:
   730                           
   731                           ;main.c: 520:     tx_Data[9] = 0x00;
   732     071D  01A9               	clrf	_tx_Data+9
   733                           
   734                           ;main.c: 521:     tx_Data[10] = 0x04C;
   735     071E  304C               	movlw	76
   736     071F  00AA               	movwf	_tx_Data+10
   737                           
   738                           ;main.c: 523:     tx_Data[2] = D2.Byte;
   739     0720  0838               	movf	_D2,w
   740     0721  00A2               	movwf	_tx_Data+2
   741                           
   742                           ;main.c: 524:     tx_Data[3] = D3.Byte;
   743     0722  0837               	movf	_D3,w
   744     0723  00A3               	movwf	_tx_Data+3
   745     0724                     l1013:
   746                           
   747                           ;main.c: 526:     if (fException == 1) {
   748     0724  0335               	decf	_fException,w
   749     0725  1D03               	btfss	3,2
   750     0726  2F28               	goto	u371
   751     0727  2F29               	goto	u370
   752     0728                     u371:
   753     0728  2F2D               	goto	l1019
   754     0729                     u370:
   755     0729                     l1015:
   756                           
   757                           ;main.c: 527:       fException = 0;
   758     0729  01B5               	clrf	_fException
   759     072A                     l1017:
   760                           
   761                           ;main.c: 528:       tx_Data[10] = 0xD5;
   762     072A  30D5               	movlw	213
   763     072B  00AA               	movwf	_tx_Data+10
   764                           
   765                           ;main.c: 529:     } else {
   766     072C  2F33               	goto	l1021
   767     072D                     l1019:
   768                           
   769                           ;main.c: 530:       tx_Data[10] = CS[csFlag.Byte];
   770     072D  0836               	movf	_csFlag,w
   771     072E  3EA0               	addlw	(low (_CS| 0))& (0+255)
   772     072F  0086               	movwf	6
   773     0730  0187               	clrf	7
   774     0731  0801               	movf	1,w
   775     0732  00AA               	movwf	_tx_Data+10
   776     0733                     l1021:
   777                           
   778                           ;main.c: 533:     for (uint8_t i = 0; i < 11; i++) {
   779     0733  01FD               	clrf	main@i
   780     0734                     l1027:
   781                           
   782                           ;main.c: 534:       PWM(tx_Data[i]);
   783     0734  087D               	movf	main@i,w
   784     0735  3E20               	addlw	(low (_tx_Data| 0))& (0+255)
   785     0736  0086               	movwf	6
   786     0737  0187               	clrf	7
   787     0738  0801               	movf	1,w
   788     0739  3187  2753  3187   	fcall	_PWM
   789     073C                     l1029:
   790                           
   791                           ;main.c: 535:     }
   792     073C  3001               	movlw	1
   793     073D  00FC               	movwf	??_main
   794     073E  087C               	movf	??_main,w
   795     073F  07FD               	addwf	main@i,f
   796     0740                     l1031:
   797     0740  300B               	movlw	11
   798     0741  027D               	subwf	main@i,w
   799     0742  1C03               	skipc
   800     0743  2F45               	goto	u381
   801     0744  2F46               	goto	u380
   802     0745                     u381:
   803     0745  2F34               	goto	l1027
   804     0746                     u380:
   805     0746                     l1033:
   806                           
   807                           ;main.c: 537:     CCPR3L = 30;
   808     0746  301E               	movlw	30
   809     0747  0026               	movlb	6	; select bank6
   810     0748  0091               	movwf	17	;volatile
   811                           
   812                           ;main.c: 538:     _delay((unsigned long)((20)*(32000000/4000.0)));
   813     0749  30D0               	movlw	208
   814     074A  00FC               	movwf	??_main
   815     074B  30CA               	movlw	202
   816     074C                     u397:
   817     074C  0B89               	decfsz	9,f
   818     074D  2F4C               	goto	u397
   819     074E  0BFC               	decfsz	??_main,f
   820     074F  2F4C               	goto	u397
   821     0750  2F0E               	goto	l995
   822     0751  3180  2802         	ljmp	start
   823     0753                     __end_of_main:
   824                           
   825                           	psect	text1
   826     0753                     __ptext1:	
   827 ;; *************** function _PWM *****************
   828 ;; Defined at:
   829 ;;		line 350 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  num             1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  num             1   11[COMMON] unsigned char 
   834 ;;  i               1    9[COMMON] unsigned char 
   835 ;;  i               1   10[COMMON] unsigned char 
   836 ;;  Dbit            8    1[COMMON] unsigned char [8]
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   846 ;;      Params:         0       0       0       0       0       0       0       0
   847 ;;      Locals:        11       0       0       0       0       0       0       0
   848 ;;      Temps:          1       0       0       0       0       0       0       0
   849 ;;      Totals:        12       0       0       0       0       0       0       0
   850 ;;Total ram usage:       12 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 1
   853 ;; This function calls:
   854 ;;		_wait_for_pwm_cycle_complete
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     0753                     _PWM:	
   861                           ;psect for function _PWM
   862                           
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _PWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   866                           ;PWM@num stored from wreg
   867     0753  00FB               	movwf	PWM@num
   868     0754                     l887:
   869                           
   870                           ;main.c: 351:   unsigned char Dbit[8] = {0};
   871     0754  3071               	movlw	low PWM@Dbit
   872     0755  0086               	movwf	6
   873     0756  3000               	movlw	high PWM@Dbit
   874     0757  0087               	movwf	7
   875     0758  3008               	movlw	8
   876     0759  00F0               	movwf	??_PWM
   877     075A  3000               	movlw	0
   878     075B                     u210:
   879     075B  001E               	movwi fsr1++
   880     075C  0BF0               	decfsz	??_PWM,f
   881     075D  2F5B               	goto	u210
   882     075E                     l889:
   883                           
   884                           ;main.c: 352:   Dbit[0] = (num >> 0) & 0x01;
   885     075E  087B               	movf	PWM@num,w
   886     075F  3901               	andlw	1
   887     0760  00F1               	movwf	PWM@Dbit
   888     0761                     l891:
   889                           
   890                           ;main.c: 353:   Dbit[1] = (num >> 1) & 0x01;
   891     0761  367B               	lsrf	PWM@num,w
   892     0762  3901               	andlw	1
   893     0763  00F2               	movwf	PWM@Dbit+1
   894     0764                     l893:
   895                           
   896                           ;main.c: 354:   Dbit[2] = (num >> 2) & 0x01;
   897     0764  087B               	movf	PWM@num,w
   898     0765  00F0               	movwf	??_PWM
   899     0766  3002               	movlw	2
   900     0767                     u225:
   901     0767  36F0               	lsrf	??_PWM,f
   902     0768  0B89               	decfsz	9,f
   903     0769  2F67               	goto	u225
   904     076A  0870               	movf	??_PWM,w
   905     076B  3901               	andlw	1
   906     076C  00F3               	movwf	PWM@Dbit+2
   907     076D                     l895:
   908                           
   909                           ;main.c: 355:   Dbit[3] = (num >> 3) & 0x01;
   910     076D  087B               	movf	PWM@num,w
   911     076E  00F0               	movwf	??_PWM
   912     076F  3003               	movlw	3
   913     0770                     u235:
   914     0770  36F0               	lsrf	??_PWM,f
   915     0771  0B89               	decfsz	9,f
   916     0772  2F70               	goto	u235
   917     0773  0870               	movf	??_PWM,w
   918     0774  3901               	andlw	1
   919     0775  00F4               	movwf	PWM@Dbit+3
   920     0776                     l897:
   921                           
   922                           ;main.c: 356:   Dbit[4] = (num >> 4) & 0x01;
   923     0776  087B               	movf	PWM@num,w
   924     0777  00F0               	movwf	??_PWM
   925     0778  3004               	movlw	4
   926     0779                     u245:
   927     0779  36F0               	lsrf	??_PWM,f
   928     077A  0B89               	decfsz	9,f
   929     077B  2F79               	goto	u245
   930     077C  0870               	movf	??_PWM,w
   931     077D  3901               	andlw	1
   932     077E  00F5               	movwf	PWM@Dbit+4
   933     077F                     l899:
   934                           
   935                           ;main.c: 357:   Dbit[5] = (num >> 5) & 0x01;
   936     077F  087B               	movf	PWM@num,w
   937     0780  00F0               	movwf	??_PWM
   938     0781  3005               	movlw	5
   939     0782                     u255:
   940     0782  36F0               	lsrf	??_PWM,f
   941     0783  0B89               	decfsz	9,f
   942     0784  2F82               	goto	u255
   943     0785  0870               	movf	??_PWM,w
   944     0786  3901               	andlw	1
   945     0787  00F6               	movwf	PWM@Dbit+5
   946     0788                     l901:
   947                           
   948                           ;main.c: 358:   Dbit[6] = (num >> 6) & 0x01;
   949     0788  087B               	movf	PWM@num,w
   950     0789  00F0               	movwf	??_PWM
   951     078A  3006               	movlw	6
   952     078B                     u265:
   953     078B  36F0               	lsrf	??_PWM,f
   954     078C  0B89               	decfsz	9,f
   955     078D  2F8B               	goto	u265
   956     078E  0870               	movf	??_PWM,w
   957     078F  3901               	andlw	1
   958     0790  00F7               	movwf	PWM@Dbit+6
   959     0791                     l903:
   960                           
   961                           ;main.c: 359:   Dbit[7] = (num >> 7) & 0x01;
   962     0791  087B               	movf	PWM@num,w
   963     0792  00F0               	movwf	??_PWM
   964     0793  3007               	movlw	7
   965     0794                     u275:
   966     0794  36F0               	lsrf	??_PWM,f
   967     0795  0B89               	decfsz	9,f
   968     0796  2F94               	goto	u275
   969     0797  0870               	movf	??_PWM,w
   970     0798  3901               	andlw	1
   971     0799  00F8               	movwf	PWM@Dbit+7
   972     079A                     l905:
   973                           
   974                           ;main.c: 360:   wait_for_pwm_cycle_complete();
   975     079A  3186  263E  3187   	fcall	_wait_for_pwm_cycle_complete
   976     079D                     l907:
   977                           
   978                           ;main.c: 361:   CCPR3L = 55;
   979     079D  3037               	movlw	55
   980     079E  0026               	movlb	6	; select bank6
   981     079F  0091               	movwf	17	;volatile
   982     07A0                     l909:
   983                           
   984                           ;main.c: 363:   for (uint8_t i = 0; i < 8; i++) {
   985     07A0  01FA               	clrf	PWM@i
   986     07A1                     l915:
   987                           
   988                           ;main.c: 364:     if (Dbit[i] == 1) {
   989     07A1  087A               	movf	PWM@i,w
   990     07A2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
   991     07A3  0086               	movwf	6
   992     07A4  0187               	clrf	7
   993     07A5  0301               	decf	1,w
   994     07A6  1D03               	btfss	3,2
   995     07A7  2FA9               	goto	u281
   996     07A8  2FAA               	goto	u280
   997     07A9                     u281:
   998     07A9  2FB1               	goto	l919
   999     07AA                     u280:
  1000     07AA                     l917:
  1001                           
  1002                           ;main.c: 365:       Dbit[i] = 30;
  1003     07AA  087A               	movf	PWM@i,w
  1004     07AB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1005     07AC  0086               	movwf	6
  1006     07AD  0187               	clrf	7
  1007     07AE  301E               	movlw	30
  1008     07AF  0081               	movwf	1
  1009                           
  1010                           ;main.c: 366:     } else {
  1011     07B0  2FB7               	goto	l921
  1012     07B1                     l919:
  1013                           
  1014                           ;main.c: 367:       Dbit[i] = 55;
  1015     07B1  087A               	movf	PWM@i,w
  1016     07B2  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1017     07B3  0086               	movwf	6
  1018     07B4  0187               	clrf	7
  1019     07B5  3037               	movlw	55
  1020     07B6  0081               	movwf	1
  1021     07B7                     l921:
  1022                           
  1023                           ;main.c: 369:     wait_for_pwm_cycle_complete();
  1024     07B7  3186  263E  3187   	fcall	_wait_for_pwm_cycle_complete
  1025     07BA                     l923:
  1026                           
  1027                           ;main.c: 370:     CCPR3L = Dbit[i];
  1028     07BA  087A               	movf	PWM@i,w
  1029     07BB  3E71               	addlw	(low (PWM@Dbit| 0))& (0+255)
  1030     07BC  0086               	movwf	6
  1031     07BD  0187               	clrf	7
  1032     07BE  0801               	movf	1,w
  1033     07BF  0026               	movlb	6	; select bank6
  1034     07C0  0091               	movwf	17	;volatile
  1035     07C1                     l925:
  1036                           
  1037                           ;main.c: 371:   }
  1038     07C1  3001               	movlw	1
  1039     07C2  00F0               	movwf	??_PWM
  1040     07C3  0870               	movf	??_PWM,w
  1041     07C4  07FA               	addwf	PWM@i,f
  1042     07C5                     l927:
  1043     07C5  3008               	movlw	8
  1044     07C6  027A               	subwf	PWM@i,w
  1045     07C7  1C03               	skipc
  1046     07C8  2FCA               	goto	u291
  1047     07C9  2FCB               	goto	u290
  1048     07CA                     u291:
  1049     07CA  2FA1               	goto	l915
  1050     07CB                     u290:
  1051     07CB                     l929:
  1052                           
  1053                           ;main.c: 373:   for (uint8_t i = 0; i < 8; i++) {
  1054     07CB  01F9               	clrf	PWM@i_198
  1055     07CC                     l935:
  1056                           
  1057                           ;main.c: 374:     wait_for_pwm_cycle_complete();
  1058     07CC  3186  263E  3187   	fcall	_wait_for_pwm_cycle_complete
  1059     07CF                     l937:
  1060                           
  1061                           ;main.c: 375:     CCPR3L = 30;
  1062     07CF  301E               	movlw	30
  1063     07D0  0026               	movlb	6	; select bank6
  1064     07D1  0091               	movwf	17	;volatile
  1065     07D2                     l939:
  1066                           
  1067                           ;main.c: 376:   }
  1068     07D2  3001               	movlw	1
  1069     07D3  00F0               	movwf	??_PWM
  1070     07D4  0870               	movf	??_PWM,w
  1071     07D5  07F9               	addwf	PWM@i_198,f
  1072     07D6                     l941:
  1073     07D6  3008               	movlw	8
  1074     07D7  0279               	subwf	PWM@i_198,w
  1075     07D8  1C03               	skipc
  1076     07D9  2FDB               	goto	u301
  1077     07DA  2FDC               	goto	u300
  1078     07DB                     u301:
  1079     07DB  2FCC               	goto	l935
  1080     07DC                     u300:
  1081     07DC                     l95:
  1082     07DC  0008               	return
  1083     07DD                     __end_of_PWM:
  1084                           
  1085                           	psect	text2
  1086     063E                     __ptext2:	
  1087 ;; *************** function _wait_for_pwm_cycle_complete *****************
  1088 ;; Defined at:
  1089 ;;		line 341 in file "main.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		None
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1103 ;;      Params:         0       0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_PWM
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     063E                     _wait_for_pwm_cycle_complete:	
  1117                           ;psect for function _wait_for_pwm_cycle_complete
  1118                           
  1119     063E                     l80:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _wait_for_pwm_cycle_complete: []
  1122                           ;main.c: 342:   while (1) {
  1123                           
  1124                           
  1125                           ;main.c: 343:     if (TMR2IF) {
  1126     063E  0020               	movlb	0	; select bank0
  1127     063F  1C91               	btfss	17,1	;volatile
  1128     0640  2E42               	goto	u201
  1129     0641  2E43               	goto	u200
  1130     0642                     u201:
  1131     0642  2E3E               	goto	l80
  1132     0643                     u200:
  1133     0643                     l885:
  1134                           
  1135                           ;main.c: 344:       TMR2IF = 0;
  1136     0643  1091               	bcf	17,1	;volatile
  1137     0644                     l84:	
  1138                           ;main.c: 345:       break;
  1139                           
  1140     0644  0008               	return
  1141     0645                     __end_of_wait_for_pwm_cycle_complete:
  1142                           
  1143                           	psect	text3
  1144     0645                     __ptext3:	
  1145 ;; *************** function _Hardware_Init *****************
  1146 ;; Defined at:
  1147 ;;		line 379 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1161 ;;      Params:         0       0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0
  1163 ;;      Temps:          2       0       0       0       0       0       0       0
  1164 ;;      Totals:         2       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174     0645                     _Hardware_Init:	
  1175                           ;psect for function _Hardware_Init
  1176                           
  1177     0645                     l943:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _Hardware_Init: [wreg+status,2]
  1180                           
  1181                           
  1182                           ;main.c: 380:   OSCCON = 0b11110000;
  1183     0645  30F0               	movlw	240
  1184     0646  0021               	movlb	1	; select bank1
  1185     0647  0099               	movwf	25	;volatile
  1186                           
  1187                           ;main.c: 382:   OSCTUNE = 0b00111111;
  1188     0648  303F               	movlw	63
  1189     0649  0098               	movwf	24	;volatile
  1190     064A                     l945:
  1191                           
  1192                           ;main.c: 383:   ANSELA = 0b00000000;
  1193     064A  0023               	movlb	3	; select bank3
  1194     064B  018C               	clrf	12	;volatile
  1195     064C                     l947:
  1196                           
  1197                           ;main.c: 384:   PORTA = 0;
  1198     064C  0020               	movlb	0	; select bank0
  1199     064D  018C               	clrf	12	;volatile
  1200                           
  1201                           ;main.c: 385:   TRISA = 0b00011111;
  1202     064E  301F               	movlw	31
  1203     064F  0021               	movlb	1	; select bank1
  1204     0650  008C               	movwf	12	;volatile
  1205     0651                     l949:
  1206                           
  1207                           ;main.c: 386:   LATA = 0b00000000;
  1208     0651  0022               	movlb	2	; select bank2
  1209     0652  018C               	clrf	12	;volatile
  1210     0653                     l951:
  1211                           
  1212                           ;main.c: 387:   ANSELB = 0b00000000;
  1213     0653  0023               	movlb	3	; select bank3
  1214     0654  018D               	clrf	13	;volatile
  1215     0655                     l953:
  1216                           
  1217                           ;main.c: 388:   PORTB = 0;
  1218     0655  0020               	movlb	0	; select bank0
  1219     0656  018D               	clrf	13	;volatile
  1220     0657                     l955:
  1221                           
  1222                           ;main.c: 389:   TRISB = 0b00000000;
  1223     0657  0021               	movlb	1	; select bank1
  1224     0658  018D               	clrf	13	;volatile
  1225     0659                     l957:
  1226                           
  1227                           ;main.c: 390:   LATB = 0b00000000;
  1228     0659  0022               	movlb	2	; select bank2
  1229     065A  018D               	clrf	13	;volatile
  1230     065B                     l959:
  1231                           
  1232                           ;main.c: 391:   PORTC = 0;
  1233     065B  0020               	movlb	0	; select bank0
  1234     065C  018E               	clrf	14	;volatile
  1235                           
  1236                           ;main.c: 392:   TRISC = 0b10001010;
  1237     065D  308A               	movlw	138
  1238     065E  0021               	movlb	1	; select bank1
  1239     065F  008E               	movwf	14	;volatile
  1240     0660                     l961:
  1241                           
  1242                           ;main.c: 393:   LATC = 0b00000000;
  1243     0660  0022               	movlb	2	; select bank2
  1244     0661  018E               	clrf	14	;volatile
  1245     0662                     l963:
  1246                           
  1247                           ;main.c: 394:   PORTE = 0;
  1248     0662  0020               	movlb	0	; select bank0
  1249     0663  0190               	clrf	16	;volatile
  1250     0664                     l965:
  1251                           
  1252                           ;main.c: 395:   TRISE = 0b00000000;
  1253     0664  0021               	movlb	1	; select bank1
  1254     0665  0190               	clrf	16	;volatile
  1255     0666                     l967:
  1256                           
  1257                           ;main.c: 396:   LATE = 0b00000000;
  1258     0666  0022               	movlb	2	; select bank2
  1259     0667  0190               	clrf	16	;volatile
  1260                           
  1261                           ;main.c: 397:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1262     0668  3005               	movlw	5
  1263     0669  00F1               	movwf	??_Hardware_Init+1
  1264     066A  300F               	movlw	15
  1265     066B  00F0               	movwf	??_Hardware_Init
  1266     066C  30F1               	movlw	241
  1267     066D                     u407:
  1268     066D  0B89               	decfsz	9,f
  1269     066E  2E6D               	goto	u407
  1270     066F  0BF0               	decfsz	??_Hardware_Init,f
  1271     0670  2E6D               	goto	u407
  1272     0671  0BF1               	decfsz	??_Hardware_Init+1,f
  1273     0672  2E6D               	goto	u407
  1274     0673  0000               	nop
  1275                           
  1276                           ;main.c: 398:   CCP3CON = 0b00001100;
  1277     0674  300C               	movlw	12
  1278     0675  0026               	movlb	6	; select bank6
  1279     0676  0093               	movwf	19	;volatile
  1280     0677                     l969:
  1281                           
  1282                           ;main.c: 399:   CCP3SEL = 0;
  1283     0677  0022               	movlb	2	; select bank2
  1284     0678  131D               	bcf	29,6	;volatile
  1285                           
  1286                           ;main.c: 400:   PR2 = 103;
  1287     0679  3067               	movlw	103
  1288     067A  0020               	movlb	0	; select bank0
  1289     067B  009B               	movwf	27	;volatile
  1290                           
  1291                           ;main.c: 401:   CCPR3L = 30;
  1292     067C  301E               	movlw	30
  1293     067D  0026               	movlb	6	; select bank6
  1294     067E  0091               	movwf	17	;volatile
  1295     067F                     l971:
  1296                           
  1297                           ;main.c: 402:   TMR2ON = 1;
  1298     067F  0020               	movlb	0	; select bank0
  1299     0680  151C               	bsf	28,2	;volatile
  1300     0681                     l973:
  1301                           
  1302                           ;main.c: 403:   T2CKPS1 = 0;
  1303     0681  109C               	bcf	28,1	;volatile
  1304     0682                     l975:
  1305                           
  1306                           ;main.c: 404:   T2CKPS0 = 1;
  1307     0682  141C               	bsf	28,0	;volatile
  1308     0683                     l98:
  1309     0683  0008               	return
  1310     0684                     __end_of_Hardware_Init:
  1311                           
  1312                           	psect	text4
  1313     06C4                     __ptext4:	
  1314 ;; *************** function _Check_Input *****************
  1315 ;; Defined at:
  1316 ;;		line 407 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		status,2
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1330 ;;      Params:         0       0       0       0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343     06C4                     _Check_Input:	
  1344                           ;psect for function _Check_Input
  1345                           
  1346     06C4                     l977:	
  1347                           ;incstack = 0
  1348                           ; Regs used in _Check_Input: [status,2]
  1349                           
  1350                           
  1351                           ;main.c: 409:   D2.Byte = 0;
  1352     06C4  0020               	movlb	0	; select bank0
  1353     06C5  01B8               	clrf	_D2
  1354                           
  1355                           ;main.c: 410:   D3.Byte = 0;
  1356     06C6  01B7               	clrf	_D3
  1357                           
  1358                           ;main.c: 411:   csFlag.Byte = 0;
  1359     06C7  01B6               	clrf	_csFlag
  1360     06C8                     l979:
  1361                           
  1362                           ;main.c: 414:   if (PORTAbits.RA0 == 0) {
  1363     06C8  180C               	btfsc	12,0	;volatile
  1364     06C9  2ECB               	goto	u311
  1365     06CA  2ECC               	goto	u310
  1366     06CB                     u311:
  1367     06CB  2ED0               	goto	l101
  1368     06CC                     u310:
  1369     06CC                     l981:
  1370                           
  1371                           ;main.c: 415:     PORTBbits.RB5 = 1;
  1372     06CC  168D               	bsf	13,5	;volatile
  1373                           
  1374                           ;main.c: 416:     D2.RunLight = 1;
  1375     06CD  1538               	bsf	_D2,2
  1376                           
  1377                           ;main.c: 417:     csFlag.RunLight = 1;
  1378     06CE  16B6               	bsf	_csFlag,5
  1379                           
  1380                           ;main.c: 418:   } else {
  1381     06CF  2ED3               	goto	l102
  1382     06D0                     l101:
  1383                           
  1384                           ;main.c: 419:     PORTBbits.RB5 = 0;
  1385     06D0  128D               	bcf	13,5	;volatile
  1386                           
  1387                           ;main.c: 420:     D2.RunLight = 0;
  1388     06D1  1138               	bcf	_D2,2
  1389                           
  1390                           ;main.c: 421:     csFlag.RunLight = 0;
  1391     06D2  12B6               	bcf	_csFlag,5
  1392     06D3                     l102:	
  1393                           ;main.c: 422:   }
  1394                           
  1395                           
  1396                           ;main.c: 425:   if (PORTAbits.RA1 == 0) {
  1397     06D3  188C               	btfsc	12,1	;volatile
  1398     06D4  2ED6               	goto	u321
  1399     06D5  2ED7               	goto	u320
  1400     06D6                     u321:
  1401     06D6  2EDB               	goto	l103
  1402     06D7                     u320:
  1403     06D7                     l983:
  1404                           
  1405                           ;main.c: 426:     PORTBbits.RB4 = 1;
  1406     06D7  160D               	bsf	13,4	;volatile
  1407                           
  1408                           ;main.c: 427:     D2.DRL = 1;
  1409     06D8  15B8               	bsf	_D2,3
  1410                           
  1411                           ;main.c: 428:     csFlag.DRL = 1;
  1412     06D9  1636               	bsf	_csFlag,4
  1413                           
  1414                           ;main.c: 429:   } else {
  1415     06DA  2EDE               	goto	l104
  1416     06DB                     l103:
  1417                           
  1418                           ;main.c: 430:     PORTBbits.RB4 = 0;
  1419     06DB  120D               	bcf	13,4	;volatile
  1420                           
  1421                           ;main.c: 431:     D2.DRL = 0;
  1422     06DC  11B8               	bcf	_D2,3
  1423                           
  1424                           ;main.c: 432:     csFlag.DRL = 0;
  1425     06DD  1236               	bcf	_csFlag,4
  1426     06DE                     l104:	
  1427                           ;main.c: 433:   }
  1428                           
  1429                           
  1430                           ;main.c: 436:   if (PORTAbits.RA2 == 0) {
  1431     06DE  190C               	btfsc	12,2	;volatile
  1432     06DF  2EE1               	goto	u331
  1433     06E0  2EE2               	goto	u330
  1434     06E1                     u331:
  1435     06E1  2EE6               	goto	l105
  1436     06E2                     u330:
  1437     06E2                     l985:
  1438                           
  1439                           ;main.c: 437:     PORTBbits.RB3 = 1;
  1440     06E2  158D               	bsf	13,3	;volatile
  1441                           
  1442                           ;main.c: 438:     D2.LoBeam = 1;
  1443     06E3  1638               	bsf	_D2,4
  1444                           
  1445                           ;main.c: 439:     csFlag.LoBeam = 1;
  1446     06E4  15B6               	bsf	_csFlag,3
  1447                           
  1448                           ;main.c: 440:   } else {
  1449     06E5  2EE9               	goto	l106
  1450     06E6                     l105:
  1451                           
  1452                           ;main.c: 441:     PORTBbits.RB3 = 0;
  1453     06E6  118D               	bcf	13,3	;volatile
  1454                           
  1455                           ;main.c: 442:     D2.LoBeam = 0;
  1456     06E7  1238               	bcf	_D2,4
  1457                           
  1458                           ;main.c: 443:     csFlag.LoBeam = 0;
  1459     06E8  11B6               	bcf	_csFlag,3
  1460     06E9                     l106:	
  1461                           ;main.c: 444:   }
  1462                           
  1463                           
  1464                           ;main.c: 447:   if (PORTAbits.RA3 == 0) {
  1465     06E9  198C               	btfsc	12,3	;volatile
  1466     06EA  2EEC               	goto	u341
  1467     06EB  2EED               	goto	u340
  1468     06EC                     u341:
  1469     06EC  2EF1               	goto	l107
  1470     06ED                     u340:
  1471     06ED                     l987:
  1472                           
  1473                           ;main.c: 448:     PORTBbits.RB2 = 1;
  1474     06ED  150D               	bsf	13,2	;volatile
  1475                           
  1476                           ;main.c: 449:     D2.HiBeam = 1;
  1477     06EE  16B8               	bsf	_D2,5
  1478                           
  1479                           ;main.c: 450:     csFlag.HiBeam = 1;
  1480     06EF  1536               	bsf	_csFlag,2
  1481                           
  1482                           ;main.c: 451:   } else {
  1483     06F0  2EF4               	goto	l108
  1484     06F1                     l107:
  1485                           
  1486                           ;main.c: 452:     PORTBbits.RB2 = 0;
  1487     06F1  110D               	bcf	13,2	;volatile
  1488                           
  1489                           ;main.c: 453:     D2.HiBeam = 0;
  1490     06F2  12B8               	bcf	_D2,5
  1491                           
  1492                           ;main.c: 454:     csFlag.HiBeam = 0;
  1493     06F3  1136               	bcf	_csFlag,2
  1494     06F4                     l108:	
  1495                           ;main.c: 455:   }
  1496                           
  1497                           
  1498                           ;main.c: 458:   if (PORTAbits.RA4 == 0) {
  1499     06F4  1A0C               	btfsc	12,4	;volatile
  1500     06F5  2EF7               	goto	u351
  1501     06F6  2EF8               	goto	u350
  1502     06F7                     u351:
  1503     06F7  2EFC               	goto	l109
  1504     06F8                     u350:
  1505     06F8                     l989:
  1506                           
  1507                           ;main.c: 459:     PORTBbits.RB1 = 1;
  1508     06F8  148D               	bsf	13,1	;volatile
  1509                           
  1510                           ;main.c: 460:     D3.turnLight_L = 1;
  1511     06F9  16B7               	bsf	_D3,5
  1512                           
  1513                           ;main.c: 461:     csFlag.turnLight_L = 1;
  1514     06FA  14B6               	bsf	_csFlag,1
  1515                           
  1516                           ;main.c: 462:   } else {
  1517     06FB  2EFF               	goto	l110
  1518     06FC                     l109:
  1519                           
  1520                           ;main.c: 463:     PORTBbits.RB1 = 0;
  1521     06FC  108D               	bcf	13,1	;volatile
  1522                           
  1523                           ;main.c: 464:     D3.turnLight_L = 0;
  1524     06FD  12B7               	bcf	_D3,5
  1525                           
  1526                           ;main.c: 465:     csFlag.turnLight_L = 0;
  1527     06FE  10B6               	bcf	_csFlag,1
  1528     06FF                     l110:	
  1529                           ;main.c: 466:   }
  1530                           
  1531                           
  1532                           ;main.c: 469:    if (PORTCbits.RC3 == 0) {
  1533     06FF  198E               	btfsc	14,3	;volatile
  1534     0700  2F02               	goto	u361
  1535     0701  2F03               	goto	u360
  1536     0702                     u361:
  1537     0702  2F07               	goto	l111
  1538     0703                     u360:
  1539     0703                     l991:
  1540                           
  1541                           ;main.c: 470:      PORTBbits.RB0 = 1;
  1542     0703  140D               	bsf	13,0	;volatile
  1543                           
  1544                           ;main.c: 471:      D3.trunLight_R = 1;
  1545     0704  1737               	bsf	_D3,6
  1546                           
  1547                           ;main.c: 472:      csFlag.turnLight_R = 1;
  1548     0705  1436               	bsf	_csFlag,0
  1549                           
  1550                           ;main.c: 473:    } else {
  1551     0706  2F0A               	goto	l113
  1552     0707                     l111:
  1553                           
  1554                           ;main.c: 474:      PORTBbits.RB0 = 0;
  1555     0707  100D               	bcf	13,0	;volatile
  1556                           
  1557                           ;main.c: 475:      D3.trunLight_R = 0;
  1558     0708  1337               	bcf	_D3,6
  1559                           
  1560                           ;main.c: 476:      csFlag.turnLight_R = 0;
  1561     0709  1036               	bcf	_csFlag,0
  1562     070A                     l113:
  1563     070A  0008               	return
  1564     070B                     __end_of_Check_Input:
  1565     007E                     btemp	set	126	;btemp
  1566     007E                     wtemp0	set	126
  1567                           
  1568                           	psect	config
  1569                           
  1570                           ;Config register CONFIG1 @ 0x8007
  1571                           ;	Oscillator Selection
  1572                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1573                           ;	Watchdog Timer Enable
  1574                           ;	WDTE = OFF, WDT disabled
  1575                           ;	Power-up Timer Enable
  1576                           ;	PWRTE = OFF, PWRT disabled
  1577                           ;	MCLR Pin Function Select
  1578                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1579                           ;	Flash Program Memory Code Protection
  1580                           ;	CP = OFF, Program memory code protection is disabled
  1581                           ;	Data Memory Code Protection
  1582                           ;	CPD = ON, Data memory code protection is enabled
  1583                           ;	Brown-out Reset Enable
  1584                           ;	BOREN = ON, Brown-out Reset enabled
  1585                           ;	Clock Out Enable
  1586                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1587                           ;	Internal/External Switchover
  1588                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1589                           ;	Fail-Safe Clock Monitor Enable
  1590                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1591     8007                     	org	32775
  1592     8007  0EA4               	dw	3748
  1593                           
  1594                           ;Config register CONFIG2 @ 0x8008
  1595                           ;	Flash Memory Self-Write Protection
  1596                           ;	WRT = OFF, Write protection off
  1597                           ;	Voltage Regulator Capacitor Enable
  1598                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  1599                           ;	PLL Enable
  1600                           ;	PLLEN = ON, 4x PLL enabled
  1601                           ;	Stack Overflow/Underflow Reset Enable
  1602                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1603                           ;	Brown-out Reset Voltage Selection
  1604                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1605                           ;	Low-Voltage Programming Enable
  1606                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1607     8008                     	org	32776
  1608     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      29
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     688
                                             12 COMMON     2     2      0
                        _Check_Input
                      _Hardware_Init
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 12    12      0     620
                                              0 COMMON    12    12      0
        _wait_for_pwm_cycle_complete
 ---------------------------------------------------------------------------------
 (2) _wait_for_pwm_cycle_complete                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Check_Input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Input
   _Hardware_Init
   _PWM
     _wait_for_pwm_cycle_complete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1D       6       36.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6B      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 06 14:23:32 2025

                                  _a 0034                                    _b 0033  
                                 _D2 0038                                   _D3 0037  
                                 l80 063E                                   l84 0644  
                                 _CS 00A0                                   l95 07DC  
                                 l98 0683                                  l101 06D0  
                                l110 06FF                                  l102 06D3  
                                l111 0707                                  l103 06DB  
                                l104 06DE                                  l113 070A  
                                l105 06E6                                  l106 06E9  
                                l107 06F1                                  l108 06F4  
                                l109 06FC                                  l901 0788  
                                l903 0791                                  l921 07B7  
                                l905 079A                                  l923 07BA  
                                l915 07A1                                  l907 079D  
                                l941 07D6                                  l925 07C1  
                                l917 07AA                                  l909 07A0  
                                l951 0653                                  l943 0645  
                                l935 07CC                                  l927 07C5  
                                l919 07B1                                  l961 0660  
                                l953 0655                                  l945 064A  
                                l937 07CF                                  l929 07CB  
                                l971 067F                                  l963 0662  
                                l955 0657                                  l947 064C  
                                l939 07D2                                  l891 0761  
                                l981 06CC                                  l973 0681  
                                l965 0664                                  l957 0659  
                                l949 0651                                  l885 0643  
                                l893 0764                                  l991 0703  
                                l983 06D7                                  l975 0682  
                                l967 0666                                  l959 065B  
                                l895 076D                                  l887 0754  
                                l985 06E2                                  l977 06C4  
                                l969 0677                                  l897 0776  
                                l889 075E                                  l993 070B  
                                l987 06ED                                  l979 06C8  
                                l899 077F                                  l995 070E  
                                l989 06F8                                  l997 0716  
                                l999 0717                                  u200 0643  
                                u201 0642                                  u210 075B  
                                u300 07DC                                  u301 07DB  
                                u310 06CC                                  u311 06CB  
                                u320 06D7                                  u321 06D6  
                                u225 0767                                  u330 06E2  
                                u331 06E1                                  u235 0770  
                                u340 06ED                                  u341 06EC  
                                u245 0779                                  u350 06F8  
                                _PR2 001B                                  u351 06F7  
                                u407 066D                                  u255 0782  
                                u360 0703                                  u280 07AA  
                                u361 0702                                  u281 07A9  
                                u265 078B                                  u290 07CB  
                                u370 0729                                  u291 07CA  
                                u275 0794                                  u371 0728  
                                u380 0746                                  u381 0745  
                                u397 074C                                  _PWM 0753  
                                wreg 0009  __end_of_wait_for_pwm_cycle_complete 0645  
        _wait_for_pwm_cycle_complete 063E                                 ?_PWM 0070  
                               l1001 0718                                 l1011 071D  
                               l1003 0719                                 l1021 0733  
                               l1013 0724                                 l1005 071A  
                               l1031 0740                                 l1015 0729  
                               l1007 071B                                 l1033 0746  
                               l1017 072A                                 l1009 071C  
                               l1027 0734                                 l1019 072D  
                               l1029 073C                                 PWM@i 007A  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATE 0110  
                               _main 070B                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 0002                                ??_PWM 0070  
                        _Check_Input 06C4                                ?_main 0070  
                              _PORTA 000C                                _PORTB 000D  
                              _PORTC 000E                                _PORTE 0010  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISE 0090  
                              main@i 007D                                status 0003  
                              wtemp0 007E                      __initialization 07DD  
                       __end_of_main 0753                               ??_main 007C  
                             PWM@num 007B                               _CCPR3L 0311  
                             _ANSELA 018C                               _ANSELB 018D  
                             _OSCCON 0099                               _TMR2IF 0089  
                             _TMR2ON 00E2                               _data48 0039  
                             _csFlag 0036                           _fException 0035  
            __end_of__initialization 07FD                __end_of_Hardware_Init 0684  
                     __pcstackCOMMON 0070                         __pidataBANK0 062E  
                       __pidataBANK1 0684                           __pbssBANK0 0020  
                         __pmaintext 070B                              PWM@Dbit 0071  
                            _CCP3CON 0313                         ?_Check_Input 0070  
                            _CCP3SEL 08EE                              _T2CKPS0 00E0  
                            _T2CKPS1 00E1                              _OSCTUNE 0098  
                            __ptext1 0753                              __ptext2 063E  
                            __ptext3 0645                              __ptext4 06C4  
                            _tx_Data 0020                              clrloop0 0633  
               end_of_initialization 07FD                              init_ram 0638  
                            initloop 0639                            _PORTAbits 000C  
                          _PORTBbits 000D                            _PORTCbits 000E  
                start_initialization 07DD                          __end_of_PWM 07DD  
       ?_wait_for_pwm_cycle_complete 0070                          __pdataBANK0 0039  
                        __pdataBANK1 00A0                            ___latbits 0002  
      ??_wait_for_pwm_cycle_complete 0070                             PWM@F2775 002B  
                           PWM@i_198 0079                            clear_ram0 0632  
                      _Hardware_Init 0645                       ?_Hardware_Init 0070  
                      ??_Check_Input 0070                      ??_Hardware_Init 0070  
                __end_of_Check_Input 070B  
